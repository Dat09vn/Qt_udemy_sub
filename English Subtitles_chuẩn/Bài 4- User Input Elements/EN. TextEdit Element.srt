1
00:00:00,000 --> 00:00:01,920
In this lecture we are looking at the

2
00:00:01,920 --> 00:00:05,279
TextEdit element. From the documentation

3
00:00:05,279 --> 00:00:08,069
they say that "TextEdit item displays a

4
00:00:08,069 --> 00:00:10,650
block of editable, formatted text". And

5
00:00:10,650 --> 00:00:12,840
this is a small example of how you use

6
00:00:12,840 --> 00:00:16,049
it. So let's copy this and create a new

7
00:00:16,049 --> 00:00:18,320
project.

8
00:00:18,740 --> 00:00:21,480
It's a QT quick application. We're going

9
00:00:21,480 --> 00:00:24,720
to call it TextEditDemo. Save it in the

10
00:00:24,720 --> 00:00:35,130
usual location. Choose our kit. And we are

11
00:00:35,130 --> 00:00:37,320
going to paste in the text that we

12
00:00:37,320 --> 00:00:41,640
copied. Ctrl+A, Ctrl+I to line up things

13
00:00:41,640 --> 00:00:45,960
nicely. And change the title here to "TextEdit Demo".

14
00:00:45,960 --> 00:00:52,350
Let's run the application. Okay,

15
00:00:52,350 --> 00:00:55,350
you see that we see our text here. But we

16
00:00:55,350 --> 00:00:57,300
are seeing these tags here. Why is

17
00:00:57,300 --> 00:01:00,930
that? That is because we didn't set the

18
00:01:00,930 --> 00:01:05,129
text format to rich text. Okay this is

19
00:01:05,129 --> 00:01:12,869
used to show simple texts like this. Run

20
00:01:12,869 --> 00:01:13,580
again.

21
00:01:13,580 --> 00:01:15,720
Okay you see that it says "Hello World".

22
00:01:15,720 --> 00:01:18,979
But if you want these tags to be

23
00:01:18,979 --> 00:01:23,070
processed you can do something like "textFormat"

24
00:01:23,070 --> 00:01:31,439
"RichText". I think yes. And we can

25
00:01:31,439 --> 00:01:36,000
now use the text that we had here from

26
00:01:36,000 --> 00:01:39,540
the Qt documentation. These are HTML tags,

27
00:01:39,540 --> 00:01:44,310
if you are familiar with HTML. Let's do

28
00:01:44,310 --> 00:01:49,740
this. And if we run "Hello" is going to be

29
00:01:49,740 --> 00:01:53,460
bold, "World" is going to be in italic, just

30
00:01:53,460 --> 00:01:56,939
like this. You can also position this

31
00:01:56,939 --> 00:01:58,890
thing in the middle as we've been doing

32
00:01:58,890 --> 00:02:04,490
all along anchors.centerIn:parent.

33
00:02:04,490 --> 00:02:07,790
Run again.

34
00:02:09,030 --> 00:02:11,760
Okay you can also delete and edit the

35
00:02:11,760 --> 00:02:15,360
text. This is a TextEdit element by the

36
00:02:15,360 --> 00:02:17,700
way. Okay but this thing can handle

37
00:02:17,700 --> 00:02:21,330
multiple lines of text. So what I'm going

38
00:02:21,330 --> 00:02:23,970
to do is bringing some text that I have

39
00:02:23,970 --> 00:02:26,250
prepared that has some features that I

40
00:02:26,250 --> 00:02:28,980
want to show off. I want to separate this

41
00:02:28,980 --> 00:02:32,760
in different lines. So that things are

42
00:02:32,760 --> 00:02:34,830
very visible because this is a long

43
00:02:34,830 --> 00:02:42,360
piece of text. And I want you to notice

44
00:02:42,360 --> 00:02:45,630
that inside we have "strong" tags that

45
00:02:45,630 --> 00:02:47,459
we're going to make the text bold.

46
00:02:47,459 --> 00:02:49,860
We have carriage return characters and

47
00:02:49,860 --> 00:02:52,590
newline characters inside. We also have

48
00:02:52,590 --> 00:02:56,400
set the font color to be red for this

49
00:02:56,400 --> 00:02:58,800
piece of text here. If we run this we're

50
00:02:58,800 --> 00:03:01,020
going to see that our text is clipped

51
00:03:01,020 --> 00:03:03,000
off. It is trying to show this in one

52
00:03:03,000 --> 00:03:05,520
line but the width is just not enough to

53
00:03:05,520 --> 00:03:07,980
do that. So what is happening here the

54
00:03:07,980 --> 00:03:11,310
text is being chopped off to our width. If

55
00:03:11,310 --> 00:03:13,620
you want the text to be shown we

56
00:03:13,620 --> 00:03:16,320
should use the "wrap" property. Okay, so we

57
00:03:16,320 --> 00:03:23,459
can use TextEdit.Wrap. Run to see the

58
00:03:23,459 --> 00:03:26,040
effect of this. You can see that our text

59
00:03:26,040 --> 00:03:28,410
is wrapping in the "div" and width of our

60
00:03:28,410 --> 00:03:31,230
TextEdit here, which is 240. But it is

61
00:03:31,230 --> 00:03:34,470
also not showing in the available height

62
00:03:34,470 --> 00:03:36,930
that we have here. So we should do

63
00:03:36,930 --> 00:03:39,269
something. It would really help if we

64
00:03:39,269 --> 00:03:41,610
could scroll through the text to see

65
00:03:41,610 --> 00:03:44,370
what is being shown in here. And the way

66
00:03:44,370 --> 00:03:47,040
to do that, you wrap your TextEdit into

67
00:03:47,040 --> 00:03:49,709
a Flickable element. If we look for

68
00:03:49,709 --> 00:03:50,370
Flickable

69
00:03:50,370 --> 00:03:52,950
in the documentation we see that it is

70
00:03:52,950 --> 00:03:56,370
an item that wraps its children on a

71
00:03:56,370 --> 00:03:58,820
surface that "can be dragged and flicked

72
00:03:58,820 --> 00:04:02,280
causing the view onto the child items to

73
00:04:02,280 --> 00:04:04,590
scroll". And this is what we want. We want

74
00:04:04,590 --> 00:04:06,570
to be able to flick through the text

75
00:04:06,570 --> 00:04:10,650
that we have in our TextEdit element. So

76
00:04:10,650 --> 00:04:12,329
we are going to create a Flickable

77
00:04:12,329 --> 00:04:17,130
element. We're going to take this TextEdit.

78
00:04:17,130 --> 00:04:21,320
Wrap it all.

79
00:04:21,920 --> 00:04:25,160
And put it inside our Flickable element.

80
00:04:25,160 --> 00:04:32,900
We give it an id and the width of this

81
00:04:32,900 --> 00:04:35,810
Flickable is going to be the width of

82
00:04:35,810 --> 00:04:41,270
this textInputId. You need to

83
00:04:41,270 --> 00:04:43,430
tell this Flickable element the height

84
00:04:43,430 --> 00:04:46,460
of the contents that it is expected to

85
00:04:46,460 --> 00:04:48,920
show. And you specify that using the

86
00:04:48,920 --> 00:04:53,570
contentHeight property. And it's going

87
00:04:53,570 --> 00:04:56,320
to be textInputId.implicitHeight

88
00:04:56,320 --> 00:04:58,910
because this is the height of the text

89
00:04:58,910 --> 00:05:00,920
that we want to show. But we should also

90
00:05:00,920 --> 00:05:03,980
give it a height. So we are going to give

91
00:05:03,980 --> 00:05:07,520
it a height of 300. Let's run and see

92
00:05:07,520 --> 00:05:10,160
what we have. Notice that we can scroll

93
00:05:10,160 --> 00:05:13,370
now but the text is not centered and we

94
00:05:13,370 --> 00:05:15,830
can't really scroll. It is still trying

95
00:05:15,830 --> 00:05:18,380
to show the entire height of the text. So

96
00:05:18,380 --> 00:05:22,070
what we can do we can clip this text. Set

97
00:05:22,070 --> 00:05:24,500
the "clip" property of this then to true.

98
00:05:24,500 --> 00:05:30,290
And take this centerIn statement here

99
00:05:30,290 --> 00:05:33,590
back to the parent item, which is the

100
00:05:33,590 --> 00:05:36,080
Flickable element. Run the application

101
00:05:36,080 --> 00:05:38,900
again. And this is much better. Now you

102
00:05:38,900 --> 00:05:41,420
can see that we can scroll through the

103
00:05:41,420 --> 00:05:45,920
entire text that we have. It's bold

104
00:05:45,920 --> 00:05:48,800
because we set it to strong in the text

105
00:05:48,800 --> 00:05:52,580
here. You can see that "localhost" is in

106
00:05:52,580 --> 00:05:55,520
red text because we wrapped that into

107
00:05:55,520 --> 00:05:58,070
the font tags and give it a color

108
00:05:58,070 --> 00:06:01,130
attribute. You can also see that the

109
00:06:01,130 --> 00:06:03,110
TextEdit element supports many properties

110
00:06:03,110 --> 00:06:06,530
that we have seen to the Text element. We

111
00:06:06,530 --> 00:06:08,930
have the color of the text. We have the

112
00:06:08,930 --> 00:06:10,820
font. The last thing I want to show you

113
00:06:10,820 --> 00:06:12,500
in this lecture is how you can capture

114
00:06:12,500 --> 00:06:15,440
the text that is inside this thing here.

115
00:06:15,440 --> 00:06:18,140
You can attach in onEditingFinished

116
00:06:18,140 --> 00:06:25,610
signal and say console.log("The current text

117
00:06:25,610 --> 00:06:32,790
is: ",
0:06:27.060,0:06:36.240
say the text. Okay just like this. But

118
00:06:32,790 --> 00:06:36,240
to do this you need a way to take focus

119
00:06:36,240 --> 00:06:38,970
from this TextEdit here. So to do that

120
00:06:38,970 --> 00:06:45,840
we are going to give it an id. And down

121
00:06:45,840 --> 00:06:49,940
below we are going to put a Rectangle

122
00:06:50,510 --> 00:06:54,860
inside we have a MouseArea.

123
00:06:58,010 --> 00:07:02,610
The width is going to be 200. Why not? I

124
00:07:02,610 --> 00:07:06,690
just going to be 100 and color is going

125
00:07:06,690 --> 00:07:09,660
to be red. Let's make it red. And we

126
00:07:09,660 --> 00:07:12,510
wanted to be shown to the bottom of the

127
00:07:12,510 --> 00:07:15,000
Flickable element. We want the top line

128
00:07:15,000 --> 00:07:17,430
of this rectangle to be to the bottom of

129
00:07:17,430 --> 00:07:19,080
the Flickable. So we're going to say

130
00:07:19,080 --> 00:07:25,700
anchors.top: mFlickable.bottom.

131
00:07:25,700 --> 00:07:32,370
Let's run to see if the position is what

132
00:07:32,370 --> 00:07:34,350
we want. Okay,

133
00:07:34,350 --> 00:07:37,650
this works fine. And when we click in the

134
00:07:37,650 --> 00:07:43,590
MouseArea we want to give the focus to

135
00:07:43,590 --> 00:07:48,110
the rectangle. So we say mRectId.focus,

136
00:07:48,110 --> 00:07:52,650
it was true. Let's try this.

137
00:07:52,650 --> 00:07:55,620
Run the application. When we click on

138
00:07:55,620 --> 00:07:57,389
this thing we are wrapping the text

139
00:07:57,389 --> 00:08:00,690
inside this TextEdit. Let's delete the

140
00:08:00,690 --> 00:08:06,710
entire text and say "This is my new text".

141
00:08:09,210 --> 00:08:13,540
Click this thing. And you see that it

142
00:08:13,540 --> 00:08:17,940
says... Let's search actually. Ctrl, find

143
00:08:17,940 --> 00:08:25,870
"This is my...", "my new text". And you see that

144
00:08:25,870 --> 00:08:28,570
this is what we just typed in here. Okay

145
00:08:28,570 --> 00:08:30,580
you can wrap the text by listening on

146
00:08:30,580 --> 00:08:32,830
the onEditingFinished. But you can

147
00:08:32,830 --> 00:08:35,500
also directly wrap the text inside here

148
00:08:35,500 --> 00:08:38,590
if you happen to need that. And it's very

149
00:08:38,590 --> 00:08:44,169
easy to do. You can say console.log("The

150
00:08:44,169 --> 00:08:50,410
new text"). And you pass in the id for the

151
00:08:50,410 --> 00:08:52,390
TextInput. So we're going to say

152
00:08:52,390 --> 00:08:57,130
TextInput.text. Just like this you have to

153
00:08:57,130 --> 00:09:02,190
append the text to this string here. And

154
00:09:02,190 --> 00:09:04,870
when you click this thing we have the

155
00:09:04,870 --> 00:09:08,170
text that we want. This covers our usage

156
00:09:08,170 --> 00:09:11,140
of TextInput. You can use it to show

157
00:09:11,140 --> 00:09:14,920
some text. You can use some HTML tags to

158
00:09:14,920 --> 00:09:17,140
make your text beautiful. For that work

159
00:09:17,140 --> 00:09:19,690
you have to set the textFormat to 

160
00:09:19,690 --> 00:09:22,360
TextEdit.RichText here. You also can set

161
00:09:22,360 --> 00:09:25,000
different "wrap" modes to have different

162
00:09:25,000 --> 00:09:27,790
effects for your text. And you can look in

163
00:09:27,790 --> 00:09:30,640
the documentation for the options that

164
00:09:30,640 --> 00:09:33,220
are available for the wrap mode that you

165
00:09:33,220 --> 00:09:35,890
can use in here. This cover all you have

166
00:09:35,890 --> 00:09:37,600
to do in this lecture. In the next

167
00:09:37,600 --> 00:09:39,220
one we're going to look at the MouseArea

168
00:09:39,220 --> 00:09:42,040
in a little bit more detail and see

169
00:09:42,040 --> 00:09:43,750
how you can use it to drag and drop

170
00:09:43,750 --> 00:09:46,150
elements. I'll see you in the next

171
00:09:46,150 --> 00:00:00,000
lecture.

