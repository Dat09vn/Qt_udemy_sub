1
00:00:00,000 --> 00:00:02,159
In this lecture we are playing with

2
00:00:02,159 --> 00:00:04,170
signals and slots in Qt Quick

3
00:00:04,170 --> 00:00:07,200
hands on. Let's open QT creator and do

4
00:00:07,200 --> 00:00:09,929
that. Okay here we are in QT creator.

5
00:00:09,929 --> 00:00:13,160
We're going to create our project, "File"

6
00:00:13,160 --> 00:00:16,460
=> "New project". It's a "QT quick application".

7
00:00:16,460 --> 00:00:20,100
We call it SignalsAndSlotsDemo, save

8
00:00:20,100 --> 00:00:25,189
it in a location on our drive. Hit "Next",

9
00:00:25,189 --> 00:00:31,740
choose your QT version, choose your Kit

10
00:00:31,740 --> 00:00:36,989
and "Finish". We want to change the title

11
00:00:36,989 --> 00:00:46,610
here to "Signals and Slots Demo". And

12
00:00:46,610 --> 00:00:48,809
inside we want to put a "Rectangle"

13
00:00:48,809 --> 00:00:51,899
component. The "id" is going to be

14
00:00:51,899 --> 00:00:56,039
rectangleId. It's going to have a width

15
00:00:56,039 --> 00:01:01,530
of 200 and a height of 300. And we want

16
00:01:01,530 --> 00:01:06,360
to give it a red color. Inside we want to

17
00:01:06,360 --> 00:01:10,650
put a MouseArea. We want it to fill the

18
00:01:10,650 --> 00:01:13,500
parent. And it's going to fill this

19
00:01:13,500 --> 00:01:16,860
rectangle here, its parent. And we want to

20
00:01:16,860 --> 00:01:19,350
know when it is clicked. You already know

21
00:01:19,350 --> 00:01:22,770
how to do this. Now we want to define our

22
00:01:22,770 --> 00:01:25,710
first signal. You define the signal using

23
00:01:25,710 --> 00:01:28,170
the syntax we have seen before. So we say

24
00:01:28,170 --> 00:01:30,900
"signal", we say the name of the signal

25
00:01:30,900 --> 00:01:32,970
which is really like the name of the

26
00:01:32,970 --> 00:01:35,340
function. And you pass in the parameters

27
00:01:35,340 --> 00:01:38,280
to your signal. One special thing you

28
00:01:38,280 --> 00:01:40,380
need to know is that you need to pass in

29
00:01:40,380 --> 00:01:42,899
a data type for the parameters that you

30
00:01:42,899 --> 00:01:45,540
pass in your signals. So in our case it's

31
00:01:45,540 --> 00:01:47,430
going to be a string and we're going

32
00:01:47,430 --> 00:01:50,070
to call it "message". And just like this

33
00:01:50,070 --> 00:01:53,070
you are declaring your signal. Let's flag

34
00:01:53,070 --> 00:01:58,200
that. Usually after you define a signal

35
00:01:58,200 --> 00:02:00,000
you want to send it, you want to fire it,

36
00:02:00,000 --> 00:02:02,340
you want people interested in your data

37
00:02:02,340 --> 00:02:04,890
to know that you have sent the data. And

38
00:02:04,890 --> 00:02:07,110
the way you do that you simply call your

39
00:02:07,110 --> 00:02:07,680
signal

40
00:02:07,680 --> 00:02:08,250
as a method.

41
00:02:08,250 --> 00:02:10,800
And passing any parameter that you have

42
00:02:10,800 --> 00:02:13,200
to pass in. In our case we are going to

43
00:02:13,200 --> 00:02:15,690
go in the onClicked handler of our

44
00:02:15,690 --> 00:02:20,900
MouseArea and we are going to say greet

45
00:02:21,380 --> 00:02:27,360
"Hello there". Okay we are firing our

46
00:02:27,360 --> 00:02:32,610
signal here. And any interested object is

47
00:02:32,610 --> 00:02:34,800
going to know that we sent this message

48
00:02:34,800 --> 00:02:37,770
here. Okay, we fired the signal "greet" and

49
00:02:37,770 --> 00:02:40,739
it has a parameter that is a string.

50
00:02:40,739 --> 00:02:43,620
Because we specify the string data type

51
00:02:43,620 --> 00:02:47,520
here. Okay, let's finish this. Now that we

52
00:02:47,520 --> 00:02:50,430
have our signal, we need to define a slot

53
00:02:50,430 --> 00:02:52,489
that we want to connect to it. And

54
00:02:52,489 --> 00:02:55,380
remember a slot is a normal JavaScript

55
00:02:55,380 --> 00:02:58,920
function. Okay, so we can also define our

56
00:02:58,920 --> 00:03:03,330
slot inside this Rectangle here. So say

57
00:03:03,330 --> 00:03:09,720
function myGreeting and you pass in a

58
00:03:09,720 --> 00:03:12,870
parameter. Let's call it mMessage to

59
00:03:12,870 --> 00:03:15,440
have things a little bit different. And

60
00:03:15,440 --> 00:03:17,880
inside we can do whatever we want, really.

61
00:03:17,880 --> 00:03:20,489
In this case we are going to console.log

62
00:03:20,489 --> 00:03:26,940
the parameter here "myGreeting slot

63
00:03:26,940 --> 00:03:35,580
called..." and we say what the parameter is.

64
00:03:35,580 --> 00:03:39,570
And it is going to be mMessage like we

65
00:03:39,570 --> 00:03:43,440
have it in here. Now we have a slot. We

66
00:03:43,440 --> 00:03:45,930
have our signal, how do we connect them?

67
00:03:45,930 --> 00:03:48,329
We want to connect them when this

68
00:03:48,329 --> 00:03:51,810
component here is loaded completely. So

69
00:03:51,810 --> 00:03:54,410
we're going to say Component.onCompleted.

70
00:03:54,410 --> 00:03:58,590
Okay notice that this signal

71
00:03:58,590 --> 00:04:01,079
is at the root level of this rectangle

72
00:04:01,079 --> 00:04:02,880
here and the rectangle contains this

73
00:04:02,880 --> 00:04:05,670
component. So we don't need to call this

74
00:04:05,670 --> 00:04:08,400
signal by passing in the "id" here. But you

75
00:04:08,400 --> 00:04:10,230
can pass it in if you want. But in our

76
00:04:10,230 --> 00:04:12,690
case for readability we're not going to

77
00:04:12,690 --> 00:04:15,570
put it in. So we're going to say greet.connect.

78
00:04:15,570 --> 00:04:19,649
This is how you do it. And we

79
00:04:19,649 --> 00:04:22,139
want to pass in the name of the slot

80
00:04:22,139 --> 00:04:24,990
that we want to connect to. The slot is

81
00:04:24,990 --> 00:04:29,189
going to be myGreeting. And just like

82
00:04:29,189 --> 00:04:32,189
this you have connected this signal that

83
00:04:32,189 --> 00:04:35,159
is greet to the slot that is myGreeting.

84
00:04:35,159 --> 00:04:37,409
So what is going to happen when we

85
00:04:37,409 --> 00:04:39,120
run the application? We're going to have

86
00:04:39,120 --> 00:04:40,740
a rectangle. We're going to have this

87
00:04:40,740 --> 00:04:42,930
width. It's going to be this color of red.

88
00:04:42,930 --> 00:04:45,629
When we click in the rectangle that is

89
00:04:45,629 --> 00:04:48,210
covered by this MouseArea. We are going

90
00:04:48,210 --> 00:04:50,550
to fire the greet signal and we're going

91
00:04:50,550 --> 00:04:53,159
to pass in "Hello there". When the signal

92
00:04:53,159 --> 00:04:55,379
is emitted because of this connection

93
00:04:55,379 --> 00:04:58,319
here this slot is going to be called and

94
00:04:58,319 --> 00:05:00,659
we are going to see the parameter that

95
00:05:00,659 --> 00:05:03,330
was passed as a result of this

96
00:05:03,330 --> 00:05:05,310
connection. We're going to see "Hello

97
00:05:05,310 --> 00:05:07,590
there" even if we didn't type it in here.

98
00:05:07,590 --> 00:05:11,849
Let's run the application. Mm-hmm... we are

99
00:05:11,849 --> 00:05:15,330
here. When we click we should see the

100
00:05:15,330 --> 00:05:17,370
console of the message from the myGreeting

101
00:05:17,370 --> 00:05:19,800
function and the string that we

102
00:05:19,800 --> 00:05:23,550
passed them when we called the greet

103
00:05:23,550 --> 00:05:27,419
signal here. Okay so fingers crossed.

104
00:05:27,419 --> 00:05:34,289
Let's click. "Greet is not defined", why is

105
00:05:34,289 --> 00:05:38,610
that? Mm-hmm... looks like I was wrong. You

106
00:05:38,610 --> 00:05:41,669
have to pass in the "id" of the component

107
00:05:41,669 --> 00:05:44,189
where the signal is defined. So we're

108
00:05:44,189 --> 00:05:50,009
going to say rectangle, I'd be here, greet.

109
00:05:50,009 --> 00:05:52,500
And we're going to do the same. Wherever

110
00:05:52,500 --> 00:05:56,759
we refer to the signal and we want to do

111
00:05:56,759 --> 00:06:00,120
the same to the slots too. Okay, so this

112
00:06:00,120 --> 00:06:02,699
is a good learning trend. You need to

113
00:06:02,699 --> 00:06:04,800
remember this. Whenever you connect your

114
00:06:04,800 --> 00:06:06,509
signals to your slots you need to pass

115
00:06:06,509 --> 00:06:12,449
in this "id" here. Let's run again. If we

116
00:06:12,449 --> 00:06:15,539
click we say "myGreeting slot called. The

117
00:06:15,539 --> 00:06:18,509
parameter is: Hello there. Okay, we are

118
00:06:18,509 --> 00:06:22,649
successfully connecting this signal to

119
00:06:22,649 --> 00:06:25,409
this slot. And the syntax you use is this

120
00:06:25,409 --> 00:06:28,560
one, you do signal that connect and you

121
00:06:28,560 --> 00:06:31,050
pass in your slot. And you need to refer

122
00:06:31,050 --> 00:06:34,169
to the components where the signal and

123
00:06:34,169 --> 00:06:35,430
the slot are located.

124
00:06:35,430 --> 00:06:38,210
In the last lecture I mentioned that

125
00:06:38,210 --> 00:06:40,680
just like when you define a property

126
00:06:40,680 --> 00:06:43,229
here and you have an automatic handler

127
00:06:43,229 --> 00:06:45,150
generated for you. For example, if we say

128
00:06:45,150 --> 00:06:48,389
onColor you see that we have a handler

129
00:06:48,389 --> 00:06:51,000
called onColorChanged. And you have the

130
00:06:51,000 --> 00:06:52,889
same for every property that you have

131
00:06:52,889 --> 00:06:55,620
defined in here. In the same way when you

132
00:06:55,620 --> 00:06:57,660
define a signal here you have an

133
00:06:57,660 --> 00:07:00,479
automatic handler that says the name of

134
00:07:00,479 --> 00:07:02,009
the signal. For example, you can have

135
00:07:02,009 --> 00:07:07,229
handler that is called onGreet and this

136
00:07:07,229 --> 00:07:10,860
handle is fired whenever this signal is

137
00:07:10,860 --> 00:07:15,050
emitted. Okay, let's try this. And

138
00:07:15,050 --> 00:07:21,240
console.log. Let's say "onGreet: Greet

139
00:07:21,240 --> 00:07:29,849
signal emitted. Let's run again. Click

140
00:07:29,849 --> 00:07:33,120
here. You see that this method is called

141
00:07:33,120 --> 00:07:37,229
whenever we emit the great signal. Okay,

142
00:07:37,229 --> 00:07:39,210
if you are interested in doing something

143
00:07:39,210 --> 00:07:41,520
when this signal is emitted you can do

144
00:07:41,520 --> 00:07:44,010
that here. Okay, and this is the same

145
00:07:44,010 --> 00:07:46,020
behavior just like when you see the

146
00:07:46,020 --> 00:07:51,229
width change in the onWidthChanged

147
00:07:51,229 --> 00:07:55,289
signal handler here. To try this out, I am

148
00:07:55,289 --> 00:07:58,139
going to define a property here. In the

149
00:07:58,139 --> 00:08:00,330
root level of the window I'm going to

150
00:08:00,330 --> 00:08:03,750
say property integer. Let's call this

151
00:08:03,750 --> 00:08:10,400
"increment" and give it a value of 50.

152
00:08:10,400 --> 00:08:13,770
We're going to make the width of the

153
00:08:13,770 --> 00:08:16,320
rectangle depend on this increment value.

154
00:08:16,320 --> 00:08:18,270
So we're going to do a property binding.

155
00:08:18,270 --> 00:08:21,510
We're going to make it 200 plus 

156
00:08:21,510 --> 00:08:26,970
increment and every time we emit the

157
00:08:26,970 --> 00:08:30,030
greet signal we want to change the

158
00:08:30,030 --> 00:08:34,409
increment in the myGreeting slot here. So

159
00:08:34,409 --> 00:08:39,229
we're going to say increment += 

160
00:08:39,229 --> 00:08:43,289
50 which is really another way of saying

161
00:08:43,289 --> 00:08:46,070
increment

162
00:08:46,330 --> 00:08:50,780
equals increment + 50. It is the same

163
00:08:50,780 --> 00:08:53,780
thing in case this confuses you. Okay,

164
00:08:53,780 --> 00:08:54,950
right now, if we run the application

165
00:08:54,950 --> 00:08:58,250
every time we click on the MouseArea we

166
00:08:58,250 --> 00:08:59,840
are going to emit the greet signal

167
00:08:59,840 --> 00:09:02,210
because of the connection that happened

168
00:09:02,210 --> 00:09:04,640
in the uncompleted signal handler of

169
00:09:04,640 --> 00:09:06,920
component. We are going to call the slot

170
00:09:06,920 --> 00:09:09,440
here and we are going to increment the

171
00:09:09,440 --> 00:09:11,780
increment here. When we increment this

172
00:09:11,780 --> 00:09:14,390
because of the property binding we have

173
00:09:14,390 --> 00:09:17,210
here the width is going to change of this

174
00:09:17,210 --> 00:09:20,920
rectangle. Let's run the application.

175
00:09:20,920 --> 00:09:24,860
Print this up. If we click you see that

176
00:09:24,860 --> 00:09:26,870
the width of the rectangle changes and

177
00:09:26,870 --> 00:09:30,350
this is property binding shown to you

178
00:09:30,350 --> 00:09:33,320
again in action. And this is really all.

179
00:09:33,320 --> 00:09:36,380
There is to declaring signals, firing

180
00:09:36,380 --> 00:09:38,810
signals and connecting them to slots. In

181
00:09:38,810 --> 00:09:41,300
the next lecture we're going to define

182
00:09:41,300 --> 00:09:44,570
two external components have: one emit

183
00:09:44,570 --> 00:09:47,120
the signal and have the other. We'll see it.

184
00:09:47,120 --> 00:00:00,000
I'll see you there.

