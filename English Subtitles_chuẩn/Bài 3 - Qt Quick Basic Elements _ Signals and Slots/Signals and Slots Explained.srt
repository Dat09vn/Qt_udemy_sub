1
00:00:00,000 --> 00:00:01,860
In this lecture we're going to look at

2
00:00:01,860 --> 00:00:05,130
signals and slots in QT quick. Signals

3
00:00:05,130 --> 00:00:07,710
and slots allow you to do communication

4
00:00:07,710 --> 00:00:10,559
between different objects. You basically

5
00:00:10,559 --> 00:00:12,660
have an object that has a piece of

6
00:00:12,660 --> 00:00:14,940
information. And you have another object

7
00:00:14,940 --> 00:00:17,279
that is interested in that piece of

8
00:00:17,279 --> 00:00:20,640
information. And what Qt allows you to

9
00:00:20,640 --> 00:00:23,970
do is to allow to transfer that piece of

10
00:00:23,970 --> 00:00:25,830
information between the objects using

11
00:00:25,830 --> 00:00:28,650
the signals and slots mechanism. This

12
00:00:28,650 --> 00:00:31,380
mechanism is based on the observer,

13
00:00:31,380 --> 00:00:34,170
design pattern. And in this pattern you

14
00:00:34,170 --> 00:00:36,360
basically have an object listening gone

15
00:00:36,360 --> 00:00:38,579
on a piece of information coming from

16
00:00:38,579 --> 00:00:41,010
another object. Okay, so we have a

17
00:00:41,010 --> 00:00:43,829
notifier object that has the information

18
00:00:43,829 --> 00:00:46,559
to share. And we have a receiver object

19
00:00:46,559 --> 00:00:48,890
that is interested in the information. In

20
00:00:48,890 --> 00:00:51,780
practice and specifically in QML,

21
00:00:51,780 --> 00:00:54,270
you do the connection using a connection

22
00:00:54,270 --> 00:00:56,969
statement as we're going to see. And when

23
00:00:56,969 --> 00:00:58,680
you've done the connection and the

24
00:00:58,680 --> 00:01:01,649
notifier sends the signal the receiver

25
00:01:01,649 --> 00:01:04,080
is going to receive the signal and act

26
00:01:04,080 --> 00:01:06,570
upon it. And if you want to learn more on

27
00:01:06,570 --> 00:01:08,729
this concept you can visit this link

28
00:01:08,729 --> 00:01:12,330
here. But the book of it is explained

29
00:01:12,330 --> 00:01:14,610
here. You basically have two objects. The

30
00:01:14,610 --> 00:01:16,799
sender fires the signal and sends it to

31
00:01:16,799 --> 00:01:19,350
be received by interested objects. And

32
00:01:19,350 --> 00:01:21,930
the receiver listens in on the signal

33
00:01:21,930 --> 00:01:24,390
and that's something when the signal is

34
00:01:24,390 --> 00:01:27,000
fired. Don't worry if this doesn't make

35
00:01:27,000 --> 00:01:28,439
sense yet. We're going to show you

36
00:01:28,439 --> 00:01:30,299
exactly how you work with us in 

37
00:01:30,299 --> 00:01:32,759
QML. Okay, now we want to see how you

38
00:01:32,759 --> 00:01:35,790
declare your signal. In here you see that

39
00:01:35,790 --> 00:01:38,460
we have a "Rectangle" object. We have our

40
00:01:38,460 --> 00:01:40,680
usual properties but we have something

41
00:01:40,680 --> 00:01:43,799
new here. We have a "signal" keyword. And

42
00:01:43,799 --> 00:01:45,540
then we have something that looks like a

43
00:01:45,540 --> 00:01:47,909
function. This is how you declare your

44
00:01:47,909 --> 00:01:50,490
signal. We are declaring the signal that

45
00:01:50,490 --> 00:01:53,030
is called "greet" and it has a parameter.

46
00:01:53,030 --> 00:01:55,500
Notice that we have only one parameter

47
00:01:55,500 --> 00:01:58,950
but we can have as many parameters as we

48
00:01:58,950 --> 00:02:01,500
want. When you declare a signal like this

49
00:02:01,500 --> 00:02:03,770
a handler for that signal is

50
00:02:03,770 --> 00:02:06,270
automatically generated for you. It

51
00:02:06,270 --> 00:02:08,750
happens in the same way that we have

52
00:02:08,750 --> 00:02:11,760
handlers when the properties that we

53
00:02:11,760 --> 00:02:13,090
have here changed. For example

54
00:02:13,090 --> 00:02:14,800
when the color changes we can be

55
00:02:14,800 --> 00:02:17,950
notified in the on color, change setting

56
00:02:17,950 --> 00:02:19,870
up. We have been using this quite a lot.

57
00:02:19,870 --> 00:02:22,330
It is the same thing for the signal

58
00:02:22,330 --> 00:02:24,670
but the handler naming is a little bit

59
00:02:24,670 --> 00:02:27,040
different. The handler for this one is

60
00:02:27,040 --> 00:02:29,650
going to be onGreet and it's not going

61
00:02:29,650 --> 00:02:31,900
to be on reads changed. You just need to

62
00:02:31,900 --> 00:02:34,299
know this the rest is really similar as

63
00:02:34,299 --> 00:02:37,000
we are going to see. Now you know how to

64
00:02:37,000 --> 00:02:39,370
declare you signal. The next thing you

65
00:02:39,370 --> 00:02:41,620
need to know is how to fire the signal

66
00:02:41,620 --> 00:02:44,410
that you have declared. And the way you

67
00:02:44,410 --> 00:02:46,599
do it, you just call it like a function.

68
00:02:46,599 --> 00:02:48,940
In the previous slide

69
00:02:48,940 --> 00:02:51,250
notice that we defined our signal to be

70
00:02:51,250 --> 00:02:54,069
greet(). That's a parameter that is a

71
00:02:54,069 --> 00:02:56,890
strength. And notice that you have to

72
00:02:56,890 --> 00:02:58,989
specify the type of the parameter here.

73
00:02:58,989 --> 00:03:01,209
And when we want to fire it. For example

74
00:03:01,209 --> 00:03:04,000
in here we want to fire it. When somebody

75
00:03:04,000 --> 00:03:06,760
clicks in this MouseArea we call the

76
00:03:06,760 --> 00:03:10,569
great signal that is in the rectangle

77
00:03:10,569 --> 00:03:13,540
that is identified by RectangleId. And

78
00:03:13,540 --> 00:03:15,519
if you go back you see that where

79
00:03:15,519 --> 00:03:18,310
rectangle here is RectangleId. And this

80
00:03:18,310 --> 00:03:20,470
is really all the need to fire in your

81
00:03:20,470 --> 00:03:23,170
signal. You call it as you call a normal

82
00:03:23,170 --> 00:03:26,160
JavaScript function in your QML. Cool?

83
00:03:26,160 --> 00:03:29,139
Okay, right now we have declared a signal.

84
00:03:29,139 --> 00:03:31,720
We have fired it to send the information.

85
00:03:31,720 --> 00:03:34,750
Now we need to connect the receiver so

86
00:03:34,750 --> 00:03:36,819
that it knows about the signal and that

87
00:03:36,819 --> 00:03:38,620
it can do something when the signal is

88
00:03:38,620 --> 00:03:41,440
emitted or is fired. The first thing you

89
00:03:41,440 --> 00:03:44,260
need to do is to define a slot and the

90
00:03:44,260 --> 00:03:47,169
slot is a normal JavaScript function. But

91
00:03:47,169 --> 00:03:49,900
it has a property of being capable of

92
00:03:49,900 --> 00:03:53,560
being linked to a signal. If you look

93
00:03:53,560 --> 00:03:55,359
here we have a normal JavaScript

94
00:03:55,359 --> 00:03:57,730
function that is called myGreeting. It

95
00:03:57,730 --> 00:04:00,040
takes a parameter called mMessage and

96
00:04:00,040 --> 00:04:04,120
it has a body inside. In JavaScript every

97
00:04:04,120 --> 00:04:07,329
function you define can act as a slot.

98
00:04:07,329 --> 00:04:10,120
This is a special behavior in QML and

99
00:04:10,120 --> 00:04:12,489
you need to be aware of it. Every

100
00:04:12,489 --> 00:04:15,010
JavaScript function can work as a slot.

101
00:04:15,010 --> 00:04:17,410
In other words you can connect it to a

102
00:04:17,410 --> 00:04:19,660
signal. And how do you do the connection?

103
00:04:19,660 --> 00:04:22,570
You use this syntax we have here. We are

104
00:04:22,570 --> 00:04:24,800
connecting the signal to the slot in

105
00:04:24,800 --> 00:04:27,590
uncompleted method of our component. And

106
00:04:27,590 --> 00:04:30,440
the way you do that, you type the name of

107
00:04:30,440 --> 00:04:32,810
your signal, you type a dot (.) and you type

108
00:04:32,810 --> 00:04:35,389
"connect". And then you type the name of

109
00:04:35,389 --> 00:04:38,419
the slot function that you have defined.

110
00:04:38,419 --> 00:04:41,539
In our case our signal is called greet

111
00:04:41,539 --> 00:04:44,900
and our slot is myGreeting here. Notice

112
00:04:44,900 --> 00:04:47,000
that we don't pass in parameters here.

113
00:04:47,000 --> 00:04:49,280
But when you want to use the parameters

114
00:04:49,280 --> 00:04:51,680
in your slot you just use the parameters

115
00:04:51,680 --> 00:04:54,080
name that you used when you define the

116
00:04:54,080 --> 00:04:56,240
function. For example here if we want to

117
00:04:56,240 --> 00:04:58,310
use the parameter that is passed by the

118
00:04:58,310 --> 00:05:00,860
Signal we're going to refer to that using

119
00:05:00,860 --> 00:05:03,169
mMessage here. And you see that we did

120
00:05:03,169 --> 00:05:05,840
that here in the console log message in

121
00:05:05,840 --> 00:05:08,810
our slot. Okay, this is really all you

122
00:05:08,810 --> 00:05:10,520
need to know to start working with

123
00:05:10,520 --> 00:05:12,409
signals and slots. In your QML, 

124
00:05:12,409 --> 00:05:14,449
code you need to know how to declare

125
00:05:14,449 --> 00:05:16,789
your signal, you need to know how to fire

126
00:05:16,789 --> 00:05:18,949
it and you need to know how to connect

127
00:05:18,949 --> 00:05:21,590
it to a slot. In the next lecture we're

128
00:05:21,590 --> 00:05:24,050
going to open a QT creator project and

129
00:05:24,050 --> 00:05:26,419
actually start playing with us. I'll see you

130
00:05:26,419 --> 00:00:00,000
there.

