1
00:00:00,030 --> 00:00:02,129
In this lecture we are going to define

2
00:00:02,129 --> 00:00:04,950
two external components. We have one sends the

3
00:00:04,950 --> 00:00:07,200
signal and have the other receives that.

4
00:00:07,200 --> 00:00:09,480
We're going to go to Qt Creator and

5
00:00:09,480 --> 00:00:12,090
do that. Okay, here we are in QT creator.

6
00:00:12,090 --> 00:00:15,570
We're going to create our project the Qt

7
00:00:15,570 --> 00:00:18,119
Quick application as usual we call it

8
00:00:18,119 --> 00:00:22,619
ExternalComponentSignalSlotDemo. Save

9
00:00:22,619 --> 00:00:24,930
it in the usual location. Hit "Next".

10
00:00:24,930 --> 00:00:29,010
Choose our Qt version. Choose that kit

11
00:00:29,010 --> 00:00:33,210
and "Finish". We want to change the title

12
00:00:33,210 --> 00:00:37,200
here and we want to add two components:

13
00:00:37,200 --> 00:00:39,239
one is going to be "Notifier" and the

14
00:00:39,239 --> 00:00:41,670
other is going to be "Receiver". We click

15
00:00:41,670 --> 00:00:46,379
on qml.qrc here to add a new file. It's

16
00:00:46,379 --> 00:00:51,360
going to be a QML file. This is going to

17
00:00:51,360 --> 00:00:58,379
be "Notifier". We want to add another one

18
00:00:58,379 --> 00:01:05,269
that is going to be the "Receiver" and

19
00:01:05,269 --> 00:01:07,200
we want to "Finish".

20
00:01:07,200 --> 00:01:10,470
Notice that this Qt quick import is old.

21
00:01:10,470 --> 00:01:13,590
We are using 2.11 in "main" so we should

22
00:01:13,590 --> 00:01:18,030
change that to 2.11. Inside this item

23
00:01:18,030 --> 00:01:22,590
here we want to put a "Rectangle". We want

24
00:01:22,590 --> 00:01:32,460
to give it an id, a width of 200, a height of 200

25
00:01:32,460 --> 00:01:36,869
and a color. Let's make it "red". Inside we

26
00:01:36,869 --> 00:01:41,579
want to put the Text component. The id is

27
00:01:41,579 --> 00:01:45,930
going to be displayTestId. It's

28
00:01:45,930 --> 00:01:49,340
going to be centered in the parent. And

29
00:01:49,340 --> 00:01:52,200
we want to make it a little bigger. So

30
00:01:52,200 --> 00:01:55,470
we're going to say font pointSize. Let's

31
00:01:55,470 --> 00:01:58,250
do 12. We're going to see how this one is.

32
00:01:58,250 --> 00:02:01,049
We want to come to the root level here

33
00:02:01,049 --> 00:02:04,140
and define a property. It's going to be

34
00:02:04,140 --> 00:02:04,799
an integer.

35
00:02:04,799 --> 00:02:07,680
We're going to call this "count" and it's

36
00:02:07,680 --> 00:02:12,420
going to start at 0. The text of the Text

37
00:02:12,420 --> 00:02:13,350
item is

38
00:02:13,350 --> 00:02:17,370
to be the "count" just like this. So what

39
00:02:17,370 --> 00:02:20,310
we wanted to have is to have a Rectangle

40
00:02:20,310 --> 00:02:22,920
that is clickable and when you click it

41
00:02:22,920 --> 00:02:25,530
this "count" increases and we can see the

42
00:02:25,530 --> 00:02:28,050
count in the Text component here. So

43
00:02:28,050 --> 00:02:31,380
let's put a MouseArea component that is

44
00:02:31,380 --> 00:02:35,580
going to fill the rectangle, anchors.fill, 

45
00:02:35,580 --> 00:02:41,960
parent, onClicked. We want to

46
00:02:41,960 --> 00:02:45,270
increment the "count" by one so we're

47
00:02:45,270 --> 00:02:47,460
going to say count++ like

48
00:02:47,460 --> 00:02:51,720
this. And when we do that the number that

49
00:02:51,720 --> 00:02:53,610
we see in the Text component here is

50
00:02:53,610 --> 00:02:56,040
going to increase. So to be able to use

51
00:02:56,040 --> 00:02:59,610
our "Notifier" component here, in positions

52
00:02:59,610 --> 00:03:01,830
like Row and Column we need to expose

53
00:03:01,830 --> 00:03:04,410
the width and the height here. Let's do

54
00:03:04,410 --> 00:03:07,680
that. So we're going to say width equals

55
00:03:07,680 --> 00:03:13,220
notifierRectId.width and height is going to be

56
00:03:13,220 --> 00:03:17,370
notifierRecId.height just like this.

57
00:03:17,370 --> 00:03:20,400
We also want to expose the color of the

58
00:03:20,400 --> 00:03:23,070
rectangle here so that users of this

59
00:03:23,070 --> 00:03:24,870
component of ours can have the

60
00:03:24,870 --> 00:03:27,360
flexibility to set the color. So we're

61
00:03:27,360 --> 00:03:29,280
going to expose it using the property

62
00:03:29,280 --> 00:03:35,640
alias, "property alias". Let's say rectColor

63
00:03:35,640 --> 00:03:41,210
And it's going to be "notifier" 

64
00:03:41,210 --> 00:03:46,830
color, just like this. We can now save

65
00:03:46,830 --> 00:03:51,270
this, come back to "main" and inside define

66
00:03:51,270 --> 00:03:55,010
and notify your component just like this.

67
00:03:55,010 --> 00:03:58,440
We can run the application and see if it

68
00:03:58,440 --> 00:03:59,010
works

69
00:03:59,010 --> 00:04:02,820
as we want so far. We're going to have a

70
00:04:02,820 --> 00:04:05,370
red rectangle in the top left of the

71
00:04:05,370 --> 00:04:08,070
window just like this. And if we click it,

72
00:04:08,070 --> 00:04:10,020
it should increment and show us the

73
00:04:10,020 --> 00:04:12,570
number going up. So we should have 0, 1,

74
00:04:12,570 --> 00:04:16,170
2 and going up like this. This is what we

75
00:04:16,170 --> 00:04:19,529
want. I also want to increase the pointSize

76
00:04:19,529 --> 00:04:24,270
for the text in here. We made it 12.

77
00:04:24,270 --> 00:04:26,870
I want to make it 20

78
00:04:26,870 --> 00:04:30,470
and see how it works. Because we are

79
00:04:30,470 --> 00:04:33,380
changing the code in the component in an

80
00:04:33,380 --> 00:04:36,440
external QML file. Sometimes QT Creator

81
00:04:36,440 --> 00:04:38,540
doesn't pick up those changes unless

82
00:04:38,540 --> 00:04:42,560
you come to the "main" file and apply some

83
00:04:42,560 --> 00:04:45,740
changes. So I am adding a few spaces here.

84
00:04:45,740 --> 00:04:48,620
You may need to do this if you see that

85
00:04:48,620 --> 00:04:51,590
your changes are not applied. And I like

86
00:04:51,590 --> 00:04:55,280
this text better. Okay now we have our

87
00:04:55,280 --> 00:04:58,100
Notifier component. The information we

88
00:04:58,100 --> 00:05:01,460
want to send is this "count" here. Okay, we

89
00:05:01,460 --> 00:05:04,190
are having it here and displaying it. But

90
00:05:04,190 --> 00:05:06,289
we want other external components to

91
00:05:06,289 --> 00:05:08,690
have this piece of information. So we're

92
00:05:08,690 --> 00:05:11,810
going to define a signal that is called

93
00:05:11,810 --> 00:05:14,990
"notify". And it's going to pass a

94
00:05:14,990 --> 00:05:17,570
parameter that is a string and it's

95
00:05:17,570 --> 00:05:21,199
called "count". We want it like this. We

96
00:05:21,199 --> 00:05:26,510
have declared our signal. We want to fire

97
00:05:26,510 --> 00:05:28,729
it. And we're going to fire it whenever

98
00:05:28,729 --> 00:05:31,130
it changes here. So after we increment

99
00:05:31,130 --> 00:05:37,060
the "count" we should say notify(count). And

100
00:05:37,060 --> 00:05:40,130
our signal is emitted. So what I want to

101
00:05:40,130 --> 00:05:42,440
do is to build up the "Receiver" object.

102
00:05:42,440 --> 00:05:44,900
Because everything is pretty similar

103
00:05:44,900 --> 00:05:49,400
I'm going to Ctrl+A, copy to the

104
00:05:49,400 --> 00:05:52,210
entire "Notify" object. We're going to save it.

105
00:05:52,210 --> 00:05:55,430
Come to the "Receiver", Ctrl+A, delete

106
00:05:55,430 --> 00:05:57,530
everything put in the "Notifier" object

107
00:05:57,530 --> 00:06:00,110
and take out what we don't need. We want

108
00:06:00,110 --> 00:06:02,360
to take out the "property int count" here.

109
00:06:02,360 --> 00:06:04,340
And the "signal notify...", we don't need

110
00:06:04,340 --> 00:06:07,460
that in the "Receiver". But we want to

111
00:06:07,460 --> 00:06:10,160
change the ids here. So we're going to

112
00:06:10,160 --> 00:06:15,110
say a receiverRectId and change this

113
00:06:15,110 --> 00:06:17,539
wherever we had that. We're going to say

114
00:06:17,539 --> 00:06:26,720
copy, paste here, paste here, paste here... We

115
00:06:26,720 --> 00:06:29,870
also want to expose the color. There's no

116
00:06:29,870 --> 00:06:33,590
reason not to do it. We also want to say

117
00:06:33,590 --> 00:06:36,190
receiver

118
00:06:36,330 --> 00:06:40,570
DisplayedTextId. We want its text to

119
00:06:40,570 --> 00:06:43,750
start at 0 like this. And we don't

120
00:06:43,750 --> 00:06:45,820
want it to be clickable because it's not

121
00:06:45,820 --> 00:06:48,370
going to be sending out any signal. It is

122
00:06:48,370 --> 00:06:51,430
a "Receiver". But we want to define a slot

123
00:06:51,430 --> 00:06:54,280
inside and it is this slot that is going

124
00:06:54,280 --> 00:06:57,670
to be connected to the signal from the

125
00:06:57,670 --> 00:07:00,990
"Notifier". So we're going to say "function".

126
00:07:00,990 --> 00:07:03,430
Remember it is a normal JavaScript

127
00:07:03,430 --> 00:07:07,360
function "receiveInfo". It's going to

128
00:07:07,360 --> 00:07:11,470
receive "count". And we want to use this

129
00:07:11,470 --> 00:07:14,050
"count" to do 2 things: one is set the

130
00:07:14,050 --> 00:07:16,780
text of this Text component here. So

131
00:07:16,780 --> 00:07:21,430
we're going to say receiverDisplayTextId.text

132
00:07:21,430 --> 00:07:26,710
equals "count". This is done and we

133
00:07:26,710 --> 00:07:28,660
want to console.log. We're going to say

134
00:07:28,660 --> 00:07:36,370
"Receiver". And we're going to say the

135
00:07:36,370 --> 00:07:38,380
number that we received which is the

136
00:07:38,380 --> 00:07:42,730
"count" here. Okay, this is all we want. We

137
00:07:42,730 --> 00:07:45,700
have our "Notifier" and we have our

138
00:07:45,700 --> 00:07:49,600
"Receiver". So what we can do is come back

139
00:07:49,600 --> 00:07:52,600
to "main". Let's save this first. Come back

140
00:07:52,600 --> 00:07:57,160
to "main" and define a "Receiver" we want to

141
00:07:57,160 --> 00:07:59,350
anchor the receiver to the right so that

142
00:07:59,350 --> 00:08:01,000
we can say it. So we're going to say

143
00:08:01,000 --> 00:08:08,620
"anchors.right:parent.right". It's going to

144
00:08:08,620 --> 00:08:10,960
be forced to be to the right side of the

145
00:08:10,960 --> 00:08:13,570
window and we want to give them colors

146
00:08:13,570 --> 00:08:15,280
because we can do that. We're going to

147
00:08:15,280 --> 00:08:18,070
say red color. Let's make this "yellowgreen".

148
00:08:18,070 --> 00:08:24,070
The "Receiver" is going to be

149
00:08:24,070 --> 00:08:27,840
"dodgerblue". Why not?

150
00:08:27,840 --> 00:08:31,840
"yellowgreen". This is better. We want to

151
00:08:31,840 --> 00:08:36,930
save everything. Run the application. We

152
00:08:37,020 --> 00:08:40,390
have our 2 rectangles. When we click on

153
00:08:40,390 --> 00:08:44,320
the first one the data changes but the

154
00:08:44,320 --> 00:08:46,990
"Receiver" is not receiving the messages

155
00:08:46,990 --> 00:08:49,600
because we haven't connected the signal

156
00:08:49,600 --> 00:08:50,080
from the

157
00:08:50,080 --> 00:08:52,780
center to the slot of the "Receiver".

158
00:08:52,780 --> 00:08:55,630
That's what we want to do next. Okay you

159
00:08:55,630 --> 00:08:57,460
can do your connections wherever you

160
00:08:57,460 --> 00:09:00,250
want. In this case we want to do it when

161
00:09:00,250 --> 00:09:02,620
the "Notifier" component is loaded

162
00:09:02,620 --> 00:09:04,480
completely. So we're going to go inside

163
00:09:04,480 --> 00:09:08,160
the "Notifier" and do Component.onCompleted.

164
00:09:08,160 --> 00:09:13,420
We want to do "notify". Remember

165
00:09:13,420 --> 00:09:16,720
it is a signal of this "Notifier"

166
00:09:16,720 --> 00:09:21,010
component. We want to say "connect" and we

167
00:09:21,010 --> 00:09:25,600
want to say "receiverId". Notice that

168
00:09:25,600 --> 00:09:28,990
we didn't put in this id here. So we

169
00:09:28,990 --> 00:09:33,490
should do that "id:receiverId". And

170
00:09:33,490 --> 00:09:36,130
let's give the "Notifier" an id too. So

171
00:09:36,130 --> 00:09:43,960
we're going to say "notifierId". So we want

172
00:09:43,960 --> 00:09:50,430
to call the slot from the "Receiver". And

173
00:09:50,430 --> 00:09:52,900
just like this we have done our

174
00:09:52,900 --> 00:09:58,360
connection, "Connect signal to slot".

175
00:09:58,360 --> 00:10:01,750
This is how you do it. If everything is

176
00:10:01,750 --> 00:10:03,550
all right we're going to see the data

177
00:10:03,550 --> 00:10:06,760
change in the receiver object and we are

178
00:10:06,760 --> 00:10:09,730
going to see this message here. Let's run

179
00:10:09,730 --> 00:10:16,060
the application. Fingers crossed. And you

180
00:10:16,060 --> 00:10:19,390
see that? As we increase in the center we

181
00:10:19,390 --> 00:10:21,250
also increase in the "Receiver". Our

182
00:10:21,250 --> 00:10:25,000
connection in the "main" file is working.

183
00:10:25,000 --> 00:10:27,850
And we just leave the connection here. But

184
00:10:27,850 --> 00:10:30,280
nothing prevents you from taking it out

185
00:10:30,280 --> 00:10:33,900
of here and putting it at the root level

186
00:10:33,900 --> 00:10:38,320
when the entire window is loaded. For

187
00:10:38,320 --> 00:10:42,100
this to work you need to pass in the id

188
00:10:42,100 --> 00:10:44,200
of the "Notifier". So we'd like to say

189
00:10:44,200 --> 00:10:51,340
"notifierId" and '.' like this. Let's run

190
00:10:51,340 --> 00:10:54,300
again to see if it still works.

191
00:10:54,300 --> 00:11:00,220
And just like we expect, our things work.

192
00:11:00,220 --> 00:11:02,380
The next thing I want to show you is

193
00:11:02,380 --> 00:11:03,950
that you can also wrap

194
00:11:03,950 --> 00:11:06,350
the connection in the "Notifier" object

195
00:11:06,350 --> 00:11:09,200
and not have to do it right here. The way

196
00:11:09,200 --> 00:11:10,790
you can do that you can come to the

197
00:11:10,790 --> 00:11:14,150
"Notifier" object and give it a property

198
00:11:14,150 --> 00:11:17,090
of the target element that is going to

199
00:11:17,090 --> 00:11:20,770
provide the slot. You can say "property"

200
00:11:20,770 --> 00:11:23,510
the data type is going to be "Receiver".

201
00:11:23,510 --> 00:11:27,710
And we are going to call it "target". And

202
00:11:27,710 --> 00:11:29,690
it's going to be "null" by default because

203
00:11:29,690 --> 00:11:32,630
we don't want to specify it. But we want

204
00:11:32,630 --> 00:11:34,970
to be notified when the target is set.

205
00:11:34,970 --> 00:11:37,370
And we are going to capture that in the

206
00:11:37,370 --> 00:11:41,360
onTargetChanged signal. Because when

207
00:11:41,360 --> 00:11:44,210
you set it, it changes and we want to do

208
00:11:44,210 --> 00:11:46,100
the connection. Okay we want to say

209
00:11:46,100 --> 00:11:55,700
notify.connect(target.receiveInfo),

210
00:11:55,700 --> 00:11:58,550
just like this. Okay let's set this and

211
00:11:58,550 --> 00:12:00,560
what you would need to do in the

212
00:12:00,560 --> 00:12:03,260
"Notifier" object is take out this

213
00:12:03,260 --> 00:12:05,060
connection here because you don't want

214
00:12:05,060 --> 00:12:08,410
to do this twice. And specify a target.

215
00:12:08,410 --> 00:12:10,940
Okay so you're going to say "target" and

216
00:12:10,940 --> 00:12:15,080
it's going to be "receiverId". Okay just

217
00:12:15,080 --> 00:12:16,790
like this you see that we don't have any

218
00:12:16,790 --> 00:12:19,610
connection here. We did everything in the

219
00:12:19,610 --> 00:12:20,330
"Notifier"

220
00:12:20,330 --> 00:12:24,260
object by giving it a "Receiver". It is "null"

221
00:12:24,260 --> 00:12:28,040
by default. But when we set it here the

222
00:12:28,040 --> 00:12:32,210
onTargetChanged signal is fired and we

223
00:12:32,210 --> 00:12:33,530
are doing the connection.

224
00:12:33,530 --> 00:12:36,110
Okay the connection is made when we

225
00:12:36,110 --> 00:12:38,150
define this "target" here. I hope this

226
00:12:38,150 --> 00:12:38,960
makes sense.

227
00:12:38,960 --> 00:12:41,390
If we run you're not going to see any

228
00:12:41,390 --> 00:12:44,440
difference. Click and you see the signal

229
00:12:44,440 --> 00:12:48,620
sent by the "Notifier" and received by our

230
00:12:48,620 --> 00:12:51,800
"Receiver" component here. I really hope

231
00:12:51,800 --> 00:12:54,680
this nails down the way you work with

232
00:12:54,680 --> 00:12:56,870
signals and slots into amount because

233
00:12:56,870 --> 00:12:58,670
it's really simple. You define your

234
00:12:58,670 --> 00:13:01,190
signal, you fire it, and then you plug 

235
00:13:01,190 --> 00:13:03,320
it into a slot. And just like that you can

236
00:13:03,320 --> 00:13:05,090
pass data back and forth between your

237
00:13:05,090 --> 00:13:07,310
components. In the next chapter, we're

238
00:13:07,310 --> 00:13:09,710
going to look at user Input elements. I'll

239
00:13:09,710 --> 00:00:00,000
see you there.

