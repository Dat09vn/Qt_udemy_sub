1
00:00:00,000 --> 00:00:02,159
In this lecture we are talking about the

2
00:00:02,159 --> 00:00:05,430
QT quick global object. Here we are in

3
00:00:05,430 --> 00:00:07,950
the online documentation for this qt

4
00:00:07,950 --> 00:00:10,349
global object. It is called the qt qml

5
00:00:10,349 --> 00:00:13,620
type. If we click on the more link here, it

6
00:00:13,620 --> 00:00:15,750
says that the qt object is a global

7
00:00:15,750 --> 00:00:18,570
object with utility functions, properties

8
00:00:18,570 --> 00:00:21,449
and enums. It basically gives you

9
00:00:21,449 --> 00:00:23,730
some utilities that you can use to make

10
00:00:23,730 --> 00:00:26,340
your job easier. For example, you can use

11
00:00:26,340 --> 00:00:28,949
it here to define a color we have done

12
00:00:28,949 --> 00:00:31,199
this before when we looked at the data

13
00:00:31,199 --> 00:00:34,410
types. So to define a color you call the

14
00:00:34,410 --> 00:00:37,320
qt global object, you put a dot, you

15
00:00:37,320 --> 00:00:40,079
call the RGBA a method and you specify

16
00:00:40,079 --> 00:00:42,420
the red component, the green component,

17
00:00:42,420 --> 00:00:44,190
the blue component and the opacity

18
00:00:44,190 --> 00:00:46,680
component. There are some types that are

19
00:00:46,680 --> 00:00:49,590
defined in this qt global object you

20
00:00:49,590 --> 00:00:51,719
can use it to define a rectangle, a

21
00:00:51,719 --> 00:00:54,270
point, a size, we have done this in a

22
00:00:54,270 --> 00:00:56,489
previous lecture. You can use it to

23
00:00:56,489 --> 00:00:58,469
define a color, there are methods you can

24
00:00:58,469 --> 00:01:01,230
use, the font and all these objects. You

25
00:01:01,230 --> 00:01:04,229
can use it to define these objects. There

26
00:01:04,229 --> 00:01:06,600
are also some other objects that have

27
00:01:06,600 --> 00:01:08,580
information we might be interested in.

28
00:01:08,580 --> 00:01:11,930
For example, you may want to grab the

29
00:01:11,930 --> 00:01:14,310
information for the operating system

30
00:01:14,310 --> 00:01:17,130
that you are working on and the way you

31
00:01:17,130 --> 00:01:19,950
do that you can come to the platform

32
00:01:19,950 --> 00:01:23,250
object and query the OS that you are

33
00:01:23,250 --> 00:01:25,830
using. Okay it can print it out and we

34
00:01:25,830 --> 00:01:28,409
are going to try this thing. So right now

35
00:01:28,409 --> 00:01:31,409
I'd like to go to QT creator and show

36
00:01:31,409 --> 00:01:33,689
you some of this things in action. Okay

37
00:01:33,689 --> 00:01:36,390
so here we are in QT creator, I am going

38
00:01:36,390 --> 00:01:38,909
to create a new project, it's going to be

39
00:01:38,909 --> 00:01:42,270
a QT quick application, I am going to

40
00:01:42,270 --> 00:01:44,280
call it qt global object demo and

41
00:01:44,280 --> 00:01:48,500
store it in the usual location and next,

42
00:01:48,500 --> 00:01:52,200
choose the QT version I want to use, I

43
00:01:52,200 --> 00:01:55,549
choose the latest one I have installed, I

44
00:01:55,549 --> 00:01:59,820
choose my kit as usual and hit finish. I

45
00:01:59,820 --> 00:02:04,189
want to change this title here

46
00:02:06,940 --> 00:02:14,090
and put a rectangle down here. It's going

47
00:02:14,090 --> 00:02:19,569
to have a width of 300 a height of 100

48
00:02:19,569 --> 00:02:26,030
the color red. And inside we're going to

49
00:02:26,030 --> 00:02:29,480
put in a mouseArea which is going to

50
00:02:29,480 --> 00:02:36,110
fill the parent and in its onClicked the

51
00:02:36,110 --> 00:02:40,130
method we are going to quit the

52
00:02:40,130 --> 00:02:42,019
application and guess what we are going

53
00:02:42,019 --> 00:02:44,120
to use, we are going to call the quit

54
00:02:44,120 --> 00:02:47,650
method from the qt global object,

55
00:02:47,650 --> 00:02:51,230
something like this. We also want to

56
00:02:51,230 --> 00:02:54,440
Center this rectangle so we're going to

57
00:02:54,440 --> 00:03:00,980
say anchor.centerIn: parent. Okay so

58
00:03:00,980 --> 00:03:03,230
let's say that we are quiting so that

59
00:03:03,230 --> 00:03:08,920
it is obvious. Let's run the application

60
00:03:08,920 --> 00:03:11,930
okay the app is here you can see our red

61
00:03:11,930 --> 00:03:15,320
rectangle and when I click on it notice

62
00:03:15,320 --> 00:03:19,870
what happens in the app output pane here.

63
00:03:19,870 --> 00:03:23,180
"Quiting the app" and your app dies. Okay

64
00:03:23,180 --> 00:03:25,220
this is what we want. Now you know how to

65
00:03:25,220 --> 00:03:28,610
use the quit method from the qt global

66
00:03:28,610 --> 00:03:31,160
object. Another thing you can do from the

67
00:03:31,160 --> 00:03:33,380
qt global object is list the available

68
00:03:33,380 --> 00:03:40,670
fonts so let's say that. So we are going

69
00:03:40,670 --> 00:03:44,150
to define a property here, it's going to

70
00:03:44,150 --> 00:03:46,489
be a VAR type and it's going to be

71
00:03:46,489 --> 00:03:50,739
called fonts and we are going to assign

72
00:03:50,739 --> 00:03:54,650
the qt.fontFamilies method

73
00:03:54,650 --> 00:03:57,709
which returns a list of available fonts.

74
00:03:57,709 --> 00:04:01,070
So what we can do down here is do a loop

75
00:04:01,070 --> 00:04:07,430
so we're going to say 

76
00:04:07,430 --> 00:04:10,720
for (var i = o ; i < fonts.length ; i++).

77
00:04:13,870 --> 00:04:17,949
And you see that this

78
00:04:17,949 --> 00:04:21,029
doesn't have to complete to show us this

79
00:04:21,029 --> 00:04:24,100
property because this is a var there's

80
00:04:24,100 --> 00:04:26,410
no way the system would have known that

81
00:04:26,410 --> 00:04:29,229
it's an array. But when we call this

82
00:04:29,229 --> 00:04:31,240
property, the system is going to check

83
00:04:31,240 --> 00:04:33,250
and see if it's available and if it's

84
00:04:33,250 --> 00:04:34,810
available it's going to call it and we

85
00:04:34,810 --> 00:04:37,360
won't have any problem. So we're going to

86
00:04:37,360 --> 00:04:41,080
go inside the body of the loop and say

87
00:04:41,080 --> 00:04:44,169
console.log ok it's going to show the

88
00:04:44,169 --> 00:04:46,479
index in square brackets and then it's

89
00:04:46,479 --> 00:04:48,820
going to say in the font that we are

90
00:04:48,820 --> 00:04:50,650
dealing with at that particular

91
00:04:50,650 --> 00:04:55,180
iteration. Let's run the application. When

92
00:04:55,180 --> 00:04:57,400
you click this then you see that we have

93
00:04:57,400 --> 00:05:02,110
around 352 fonts installed on this

94
00:05:02,110 --> 00:05:05,260
system and if you scroll up you're going

95
00:05:05,260 --> 00:05:09,190
to see the entire list. Okay and if you

96
00:05:09,190 --> 00:05:10,960
look down you're going to find my

97
00:05:10,960 --> 00:05:13,990
favorite font which is consolas, I love

98
00:05:13,990 --> 00:05:16,210
this so much. This is what I am even

99
00:05:16,210 --> 00:05:18,760
using here in QT creator. So you

100
00:05:18,760 --> 00:05:21,520
can now list your fonts using the qt

101
00:05:21,520 --> 00:05:23,830
global object by calling qt.fontFamilies

102
00:05:23,830 --> 00:05:26,470
method. The other thing you can

103
00:05:26,470 --> 00:05:29,020
do from the qt global object is hash a

104
00:05:29,020 --> 00:05:29,919
string.

105
00:05:29,919 --> 00:05:33,250
So what you can do for example is define

106
00:05:33,250 --> 00:05:36,490
a var call it mName and give it a value

107
00:05:36,490 --> 00:05:42,660
of Daniel Gawaya, my name, so what you can do is

108
00:05:42,660 --> 00:05:45,400
compute the hash for this. So we're going

109
00:05:45,400 --> 00:05:55,419
to say and you can call QT md5 and pass

110
00:05:55,419 --> 00:06:01,120
in mName. Okay so by now we have our

111
00:06:01,120 --> 00:06:03,610
hash stored in this variable so we can

112
00:06:03,610 --> 00:06:12,090
output it and console.log mNameHash.

113
00:06:12,090 --> 00:06:16,750
Run the application, click on the button

114
00:06:16,750 --> 00:06:20,289
and this is our hash here. This is not

115
00:06:20,289 --> 00:06:24,580
all, you can also open URLs externally so

116
00:06:24,580 --> 00:06:26,830
we're going to say open url qxternally.

117
00:06:26,830 --> 00:06:27,240
These are the things

118
00:06:27,240 --> 00:06:29,819
you're going to need some time in your

119
00:06:29,819 --> 00:06:33,259
journey as a UI developer using QT quick.

120
00:06:33,259 --> 00:06:37,639
So you can say QT.openUrlExternally 

121
00:06:37,639 --> 00:06:40,949
and pass in the URL that you

122
00:06:40,949 --> 00:06:43,349
want to open. So we're going to say HTTP

123
00:06:43,349 --> 00:06:49,550
for example and put in our website and

124
00:06:49,550 --> 00:06:59,880
if we run this, click on this. You're going

125
00:06:59,880 --> 00:07:02,750
to see that a browser is going to open

126
00:07:02,750 --> 00:07:05,909
but it's not putting in our website,

127
00:07:05,909 --> 00:07:11,460
what is wrong. I put in two colons, let's

128
00:07:11,460 --> 00:07:17,610
run again. Mm-hmm you see that it's now

129
00:07:17,610 --> 00:07:21,539
working, it is loading our website. We can

130
00:07:21,539 --> 00:07:23,970
also open local files using the default

131
00:07:23,970 --> 00:07:26,130
program. For example what happens

132
00:07:26,130 --> 00:07:28,979
when you double click on an image your

133
00:07:28,979 --> 00:07:31,440
default program for opening images is

134
00:07:31,440 --> 00:07:33,690
going to open them. So that's what we're

135
00:07:33,690 --> 00:07:36,000
going to do here when we click on this

136
00:07:36,000 --> 00:07:38,250
mouse area we are going to call this

137
00:07:38,250 --> 00:07:40,710
method but we are going to pass in a

138
00:07:40,710 --> 00:07:44,009
full path to a file. Let me show you what

139
00:07:44,009 --> 00:07:47,789
I mean so we are doing to call QT.openUrlExternally

140
00:07:47,789 --> 00:07:50,520
it's going to be the same

141
00:07:50,520 --> 00:07:50,969
thing

142
00:07:50,969 --> 00:07:56,460
but we are going to say file and passing

143
00:07:56,460 --> 00:07:58,740
the full path to the file. I happen to

144
00:07:58,740 --> 00:08:02,759
have an image down here under this path

145
00:08:02,759 --> 00:08:06,270
this image is a PNG, you can see it here.

146
00:08:06,270 --> 00:08:10,530
So I am going to capture its path copy

147
00:08:10,530 --> 00:08:13,800
and come back to our project and paste

148
00:08:13,800 --> 00:08:16,590
it here. Ok I'm going to change this to a

149
00:08:16,590 --> 00:08:21,270
back slash bring this back and pass in

150
00:08:21,270 --> 00:08:23,969
the name for that file. So to avoid any

151
00:08:23,969 --> 00:08:27,180
errors I am just going to copy the name

152
00:08:27,180 --> 00:08:33,419
here, put it in here and give it a PNG

153
00:08:33,419 --> 00:08:37,440
extension. So if we click we are going to

154
00:08:37,440 --> 00:08:40,049
open this website but we are also going

155
00:08:40,049 --> 00:08:40,880
to open

156
00:08:40,880 --> 00:08:44,179
file locally so let's comment this out

157
00:08:44,179 --> 00:08:46,160
so that it doesn't get in the way of

158
00:08:46,160 --> 00:08:49,840
what we want to see. Run the application

159
00:08:49,840 --> 00:08:53,510
if we click on this you see that this

160
00:08:53,510 --> 00:08:57,290
image opens in my default program which

161
00:08:57,290 --> 00:08:59,990
happens to be the default windows image

162
00:08:59,990 --> 00:09:02,900
viewer. Okay this is cool sometimes you

163
00:09:02,900 --> 00:09:05,540
need to do this and qt makes it very

164
00:09:05,540 --> 00:09:08,990
easy to do even using the Qt Quick API.

165
00:09:08,990 --> 00:09:11,720
The last thing I want to do is to show

166
00:09:11,720 --> 00:09:14,630
you how you can print or get the current

167
00:09:14,630 --> 00:09:16,340
platform that your application is

168
00:09:16,340 --> 00:09:18,800
running on. So the way you do that you

169
00:09:18,800 --> 00:09:24,380
can print it out console.log and say

170
00:09:24,380 --> 00:09:29,960
qt platform OS okay so we can put a

171
00:09:29,960 --> 00:09:33,170
string in front here and make it clear

172
00:09:33,170 --> 00:09:36,110
what we are trying to show "The current

173
00:09:36,110 --> 00:09:43,100
platform". Let's see this, run the

174
00:09:43,100 --> 00:09:48,650
application, click on this guy, it's going

175
00:09:48,650 --> 00:09:52,310
to open in our image viewer but you see

176
00:09:52,310 --> 00:09:54,230
that it says that the current platforms

177
00:09:54,230 --> 00:09:56,870
windows. Okay we have just seen a few

178
00:09:56,870 --> 00:09:59,810
things about the qt global object but

179
00:09:59,810 --> 00:10:01,580
if you are really interested you can

180
00:10:01,580 --> 00:10:04,100
come and look at all the offerings that

181
00:10:04,100 --> 00:10:06,320
are there and I'm sure you're going to

182
00:10:06,320 --> 00:10:09,320
be using this all over your applications

183
00:10:09,320 --> 00:10:11,210
in qt. For example what we just did

184
00:10:11,210 --> 00:10:14,210
to print the platform information, it is

185
00:10:14,210 --> 00:10:16,880
from this platform object and you see

186
00:10:16,880 --> 00:10:20,210
that it prints the OS "This read-only

187
00:10:20,210 --> 00:10:22,100
property contains the name of the

188
00:10:22,100 --> 00:10:24,560
operating system. Possible values are:"

189
00:10:24,560 --> 00:10:28,430
currently the platforms supported by

190
00:10:28,430 --> 00:10:29,330
qt.

191
00:10:29,330 --> 00:10:33,370
You see Android, iOS, TVOS, Linux, Mac OS,

192
00:10:33,370 --> 00:10:36,770
Windows. This is what we just saw. Okay

193
00:10:36,770 --> 00:10:39,080
you can play with other things if you are

194
00:10:39,080 --> 00:10:41,630
in the mood for that. This cover is

195
00:10:41,630 --> 00:10:43,640
all we set up to do in this lecture. In

196
00:10:43,640 --> 00:10:45,610
the next one we're going to talk about

197
00:10:45,610 --> 00:10:48,410
properties and signal handlers. I'll see

198
00:10:48,410 --> 00:00:00,000
you in the next lecture.

