1
00:00:00,000 --> 00:00:01,740
In this lecture, we're going to see 

2
00:00:01,740 --> 00:00:03,929
how you can work with the GridView component in the QML.

3
00:00:03,929 --> 00:00:06,180
This is a component that

4
00:00:06,180 --> 00:00:09,389
allows you to lay out your items

5
00:00:09,389 --> 00:00:12,179
coming from a model in a grid like structure.

6
00:00:12,179 --> 00:00:14,580
We're going to go to QT Creator and play with it.

7
00:00:14,580 --> 00:00:17,100
Here we are in Qt Creator.

8
00:00:17,100 --> 00:00:19,170
We're going to create our project

9
00:00:19,170 --> 00:00:22,320
It's a QT quick application,  

10
00:00:22,320 --> 00:00:24,689
we call it 'GridViewDemo', store it in the usual location,

11
00:00:24,689 --> 00:00:29,490
choose a QT version, choose your kit, and finish.

12
00:00:29,490 --> 00:00:33,630
You want to change the title 

13
00:00:33,630 --> 00:00:39,870
to say 'GridView Demo'.

14
00:00:39,870 --> 00:00:42,300
And if we go to the documentation and look for a GridView,

15
00:00:42,300 --> 00:00:49,050
they're going to tell you

16
00:00:49,050 --> 00:00:52,050
it displays data from models created from built-in QML types

17
00:00:52,050 --> 00:00:54,210
like ListView and ListModel.

18
00:00:54,210 --> 00:00:57,090
It is back to by model and

19
00:00:57,090 --> 00:01:00,000
the delegate defines how data should be displayed

20
00:01:00,000 --> 00:01:02,910
and your data is displayed in a grid like this.

21
00:01:02,910 --> 00:01:05,790
Okay, this is a great. 

22
00:01:05,790 --> 00:01:07,710
So, we're going to go back to our code here,

23
00:01:07,710 --> 00:01:11,790
put in a predefined model to save some time on typing.

24
00:01:11,790 --> 00:01:14,490
This is a list model.

25
00:01:14,490 --> 00:01:17,009
Nothing new here. 

26
00:01:17,009 --> 00:01:19,530
It contains list elements and we have two rows in each list element:

27
00:01:19,530 --> 00:01:23,159
a number with this role and

28
00:01:23,159 --> 00:01:26,729
the color with mColor as your role. 

29
00:01:26,729 --> 00:01:28,710
We can minimize this actually 

30
00:01:28,710 --> 00:01:31,530
to help things a little more readable and put in our grid view.

31
00:01:31,530 --> 00:01:34,409
The ID is going to be 'mGridViewId'.

32
00:01:34,409 --> 00:01:42,770
It's going to fill the parent

33
00:01:42,770 --> 00:01:49,310
Model is going to be model ID and

34
00:01:49,310 --> 00:01:52,829
it's going to have a delegate just like

35
00:01:52,829 --> 00:01:55,740
we have for the ListView.

36
00:01:55,740 --> 00:02:00,000
We have a nice delegate also prepared. Ctrl+A , Ctrl+I to align.

37
00:02:00,000 --> 00:02:03,240
It is nothing special also

38
00:02:03,240 --> 00:02:07,860
but we are using the roles in our model

39
00:02:07,860 --> 00:02:12,480
to put data in our delegate here. 

40
00:02:12,480 --> 00:02:13,640
You can see the color is

41
00:02:13,640 --> 00:02:16,970
coming from the list element here.

42
00:02:16,970 --> 00:02:19,850
This is our role for the color 

43
00:02:19,850 --> 00:02:22,520
and we are displaying the number

44
00:02:22,520 --> 00:02:26,000
that is coming from the model as well.

45
00:02:26,000 --> 00:02:28,790
You can see this is the number role that we are using here.

46
00:02:28,790 --> 00:02:31,490
The rest you have really all seen before.

47
00:02:31,490 --> 00:02:35,030
We are centering the text, 

48
00:02:35,030 --> 00:02:37,490
they are sending the font here.

49
00:02:37,490 --> 00:02:40,790
Let's run the application and see what we get 

50
00:02:40,790 --> 00:02:44,209
Mm-hmm. This is our grid view.

51
00:02:44,209 --> 00:02:46,580
You see that it tries to fill the available width with these rectangles here

52
00:02:46,580 --> 00:02:49,640
but if you reduce the width,

53
00:02:49,640 --> 00:02:53,420
you see that it flows to the next lines

54
00:02:53,420 --> 00:02:55,430
until we have the data filling the available width.

55
00:02:55,430 --> 00:02:58,250
Okay this is the behavior

56
00:02:58,250 --> 00:02:59,980
you have with the grid view.

57
00:02:59,980 --> 00:03:02,870
There are a few settings you can apply

58
00:03:02,870 --> 00:03:05,300
to your grid view here. 

59
00:03:05,300 --> 00:03:08,209
For example you can control the layout direction.

60
00:03:08,209 --> 00:03:11,090
Right now, it is going from left to right but

61
00:03:11,090 --> 00:03:13,870
we can make it go from right to left.

62
00:03:13,870 --> 00:03:16,790
Okay, when we do that, we are going to

63
00:03:16,790 --> 00:03:19,760
start counting from 1 to 3 from the right here and going to the left.

64
00:03:19,760 --> 00:03:22,700
Let's do that.

65
00:03:22,700 --> 00:03:25,579
We can come in our code here and

66
00:03:25,579 --> 00:03:31,930
say layoutDirection and say Qt.RightToLeft just like this.

67
00:03:31,930 --> 00:03:38,810
Let's run. Mm-hmm

68
00:03:38,810 --> 00:03:42,950
1 2 3 from right to left and this is not out of the blue.

69
00:03:42,950 --> 00:03:45,320
You can come back to the documentation,

70
00:03:45,320 --> 00:03:48,709
find GridView, 

71
00:03:48,709 --> 00:03:50,420
and you're going to see a bunch of properties that you have

72
00:03:50,420 --> 00:03:53,209
and one of them is layoutDirection

73
00:03:53,209 --> 00:03:55,579
and they show you things

74
00:03:55,579 --> 00:03:58,549
you can pass in here.

75
00:03:58,549 --> 00:04:00,290
If you look here, we also have another property that is called 'flow' 

76
00:04:00,290 --> 00:04:03,769
and you can use this to hold the flow of the grid.

77
00:04:03,769 --> 00:04:07,220
Okay, right now it is flowing

78
00:04:07,220 --> 00:04:10,790
from left to right by default,

79
00:04:10,790 --> 00:04:13,910
but we can also make it flow from top to bottom.

80
00:04:13,910 --> 00:04:18,350
We can come back to the code,

81
00:04:18,350 --> 00:04:23,830
put in a flow property and say  

82
00:04:23,830 --> 00:04:27,660
'GridView.FlowTopToBottom'

83
00:04:27,660 --> 00:04:33,039
Let's run.
You see that it is saying

84
00:04:33,039 --> 00:04:35,830
one two three from top to bottom.

85
00:04:35,830 --> 00:04:38,020
Without the flow property setting, it was going from left to right

86
00:04:38,020 --> 00:04:41,169
and wrapping to the next lines.

87
00:04:41,169 --> 00:04:43,630
Now it is going from top to bottom

88
00:04:43,630 --> 00:04:46,840
and wrapping to the columns as we go from right to left.

89
00:04:46,840 --> 00:04:49,449
I hope this makes sense.

90
00:04:49,449 --> 00:04:52,690
We can check this out to show you what we had before 

91
00:04:52,690 --> 00:04:55,539
because sometimes it is easy to forget.

92
00:04:55,539 --> 00:04:58,569
And you can see that

93
00:04:58,569 --> 00:05:01,900
one two three from left to right.

94
00:05:01,900 --> 00:05:03,940
You can play with these properties and see what you get.

95
00:05:03,940 --> 00:05:06,280
And if you happen to need these features,

96
00:05:06,280 --> 00:05:09,039
they are available to you ready to be used.

97
00:05:09,039 --> 00:05:11,710
And this is really all I have 

98
00:05:11,710 --> 00:05:13,599
to share about the GridView component.

99
00:05:13,599 --> 00:05:16,300
It is very easy to use and it allows you to

100
00:05:16,300 --> 00:05:18,819
layout the data that is coming from your model

101
00:05:18,819 --> 00:05:21,729
in a grid like structure. 

102
00:05:21,729 --> 00:05:23,500
And you have a bunch of properties that you can play with

103
00:05:23,500 --> 00:05:26,319
to achieve the design that you want.

104
00:05:26,319 --> 00:05:28,479
In the next lecture, we're going to

105
00:05:28,479 --> 00:05:30,969
visit the XmlListModel component and

106
00:05:30,969 --> 00:05:33,430
see how you can fit it the data from an

107
00:05:33,430 --> 00:05:34,330
XML file.

108
00:05:34,330 --> 00:00:00,000
I'll see you there.

