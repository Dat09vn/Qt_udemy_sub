WEBVTT

00:00.750 --> 00:06.390
And this is video 7.3 of Qt on desktop which covers static linking on Qt. In this video we're going

00:06.390 --> 00:10.260
to cover when we would static link, building Qt for static linking,

00:10.380 --> 00:12.870
and finally static linking our application.

00:12.870 --> 00:15.530
So when do we need to link things statically?

00:15.630 --> 00:20.040
I've got a couple of reasons why it would appear but the main one is if we're distributing a package

00:20.040 --> 00:25.470
to a client and we don't want our client to introduce bugs into our project by dynamically linking the

00:25.470 --> 00:26.880
wrong versions of the code.

00:26.880 --> 00:32.820
Now please note that if you statically link a project you need to either buy a Qt license or be willing

00:32.820 --> 00:36.730
to distribute your code as per the Qt license.

00:36.750 --> 00:42.420
But now that we've decided to lock down our code, we need to actually compile Qt for static linking

00:43.040 --> 00:46.470
If you installed Qt using a Package manager or in Windows,

00:46.470 --> 00:52.110
the binary is that you got didn't come with the actual static binaries. So we need to download the Qt

00:52.110 --> 00:58.080
source code, change into the source code directory, call the 'confgure' command, pass the '-static' parameter

00:58.140 --> 01:03.810
and then compile using the 'make' command. All the basic commands here. For Debian specifically, we

01:03.810 --> 01:06.030
can use the package manager to help us out.

01:06.090 --> 01:10.740
So specifically we can use the 'build-dep' command to go ahead and build on everything that we'd

01:10.740 --> 01:17.580
need for Qt base 5 developer (qtbase5-dev) and then we can use the 'source' command right here to go ahead and get

01:17.580 --> 01:18.550
the source code.

01:18.600 --> 01:23.400
Once we've got that we can go ahead and change into that directory, use our 'confgur' command and

01:23.400 --> 01:25.280
then our 'make' command.

01:25.290 --> 01:30.310
So you have to do that on yours by yourself and it should actually take a fair amount of time.

01:30.480 --> 01:37.750
But once we've got our static libraries built. Let's go ahead and put them to use.

01:37.750 --> 01:43.540
Now I've installed my static qmake in my app directory which is very important because you need to

01:43.540 --> 01:46.530
use the qmake generated by the static compilation,

01:46.570 --> 01:48.550
not our system compilation.

01:48.550 --> 01:55.420
So if I use the 'which' command, you'll see that qmake is tied to my userq/bin/qmake, not the actual

01:55.420 --> 02:00.880
static compilation ones so I need to pass in the fully qualified path to my static qmake.

02:00.880 --> 02:05.090
So in my case that will be 'opt/bin/qmake',

02:05.260 --> 02:12.970
so in my source code directory and I want to go ahead and do the release so I'll pass in a '-config'

02:12.970 --> 02:13.960
'release'.

02:14.110 --> 02:21.170
Let that run. And once I've actually done the configuration, I'll go ahead and call 'make'. Perfect.

02:21.430 --> 02:24.780
So let's go and see if we able to statically link this or not.

02:24.800 --> 02:29.140
And the best way to do that is to call the 'ldd' command on our actual binary.

02:29.260 --> 02:32.710
In doing so we've got a bunch of binary is in here.

02:33.100 --> 02:40.170
So let's see if we actually dynamically linked any of our  libraries. And you see when we run that

02:40.170 --> 02:40.960
commands,

02:40.980 --> 02:45.100
grepping for libQt, we didn't actually return anything which is good.

02:45.150 --> 02:53.570
So if we look at the ldd of a binary that has been using dynamic linking, you can see that we actually

02:53.570 --> 02:59.240
when we dynamically link, we link to Qt5Widgets, Qt5Gui and Qt5Core.

02:59.270 --> 03:04.940
So our statically link to one we passed in our fully qualified qmake for our static compilation

03:05.030 --> 03:08.750
successfully. Statically linked are binary.

03:08.780 --> 03:14.060
So with that we've successfully figured out how to statically link an application, how to build Qt

03:14.060 --> 03:18.020
for actual static linking and when to use static linking.

03:18.140 --> 03:19.870
Join us in the next section where we cover

03:19.860 --> 03:20.900
Qt on mobile.
