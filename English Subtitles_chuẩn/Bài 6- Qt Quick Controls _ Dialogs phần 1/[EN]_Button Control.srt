1
00:00:00,000 --> 00:00:01,829
In this lecture, we're going to look at

2
00:00:01,829 --> 00:00:03,899
the button element from the QT quick

3
00:00:03,899 --> 00:00:07,830
controls module. If we go in QT creator,

4
00:00:07,830 --> 00:00:11,460
click on the help tab here, and type

5
00:00:11,460 --> 00:00:16,770
"button" in the search bar here. We are

6
00:00:16,770 --> 00:00:18,810
going to be taken to the documentation

7
00:00:18,810 --> 00:00:22,080
for the button QML type. And one thing

8
00:00:22,080 --> 00:00:24,869
you should notice right away is that the

9
00:00:24,869 --> 00:00:28,680
import statement imports from QTQuick

10
00:00:28,680 --> 00:00:33,570
controls 2.4. It was introduced here and

11
00:00:33,570 --> 00:00:36,809
it is inherently an abstract button. We

12
00:00:36,809 --> 00:00:40,050
are taking some feature from this to qml

13
00:00:40,050 --> 00:00:42,450
tag here, so if we go down in the

14
00:00:42,450 --> 00:00:45,450
description, you can see that a button

15
00:00:45,450 --> 00:00:47,550
presents a push-button control that can

16
00:00:47,550 --> 00:00:50,579
be pushed or clicked by the user. And if

17
00:00:50,579 --> 00:00:52,559
you look down here, you see that there is

18
00:00:52,559 --> 00:00:55,440
a set of signals that we can get from

19
00:00:55,440 --> 00:00:57,059
the button. You can know when it is

20
00:00:57,059 --> 00:00:57,660
clicked,

21
00:00:57,660 --> 00:00:59,699
you can know when it is doubleClicked,

22
00:00:59,699 --> 00:01:02,969
pressed, released, PressAndHold. These

23
00:01:02,969 --> 00:01:05,670
signals are very similar to what we saw

24
00:01:05,670 --> 00:01:08,460
on the MouseArea, but the button is very

25
00:01:08,460 --> 00:01:10,530
compact in that you don't need to wrap

26
00:01:10,530 --> 00:01:13,740
MouseArear inside rectangles. You just

27
00:01:13,740 --> 00:01:15,659
use a button and you have these signals

28
00:01:15,659 --> 00:01:18,210
available to you to use. Right now, we

29
00:01:18,210 --> 00:01:20,189
like to start a new project and play

30
00:01:20,189 --> 00:01:24,330
with this. Create a new project here. It's

31
00:01:24,330 --> 00:01:28,680
going to be a QT Quick Application. We

32
00:01:28,680 --> 00:01:31,740
call it "button demo", save it in a

33
00:01:31,740 --> 00:01:35,579
location on our drive, hit "next", choose the

34
00:01:35,579 --> 00:01:38,400
QT version we are using. Right now,

35
00:01:38,400 --> 00:01:40,409
because we want to test this application

36
00:01:40,409 --> 00:01:43,560
both on Android and desktop, we are going

37
00:01:43,560 --> 00:01:46,890
to choose the kit for Android, the x86

38
00:01:46,890 --> 00:01:49,409
version because we want to run this in a

39
00:01:49,409 --> 00:01:52,409
virtual device. If you use araeabi

40
00:01:52,409 --> 00:01:54,899
here, it's going to be very slow, so we

41
00:01:54,899 --> 00:01:57,570
choose x86 which speeds things up a

42
00:01:57,570 --> 00:02:00,360
little bit. We also choose desktop

43
00:02:00,360 --> 00:02:02,430
because this is our default environment

44
00:02:02,430 --> 00:02:04,619
we want to work on. And hit "next", and

45
00:02:04,619 --> 00:02:08,489
"finish". We want to work with QT quick

46
00:02:08,489 --> 00:02:11,430
controls, so we should import that. Ee're

47
00:02:11,430 --> 00:02:13,340
going to say "import...

48
00:02:13,340 --> 00:02:21,500
controls 2.4". We are going to change the

49
00:02:21,500 --> 00:02:26,020
title here and say "button demo", and

50
00:02:26,020 --> 00:02:29,090
import layouts because we want to use

51
00:02:29,090 --> 00:02:32,959
that. So you're going to say QtQuick.Layouts 1.3, 

52
00:02:32,959 --> 00:02:39,190
we're going to put in a RowLayout. And

53
00:02:39,190 --> 00:02:42,800
inside, we're going to put two buttons, so

54
00:02:42,800 --> 00:02:45,050
we're going to say "button". Its Id is

55
00:02:45,050 --> 00:02:48,560
going to be "button1". It's going to have

56
00:02:48,560 --> 00:02:51,709
a text property. It's going to say "button1".

57
00:02:51,709 --> 00:03:06,349
We're going to add another one. And we

58
00:03:06,349 --> 00:03:08,780
want this RowLayout to fill the

59
00:03:08,780 --> 00:03:13,280
available width. One thing we can do is

60
00:03:13,280 --> 00:03:16,430
to anchor it to the left and to the

61
00:03:16,430 --> 00:03:19,600
right of the parent by saying "anchors.left".

62
00:03:19,600 --> 00:03:37,489
Ok, the left side of the RowLayout

63
00:03:37,489 --> 00:03:40,310
is going to stick to the left side of

64
00:03:40,310 --> 00:03:42,319
the window, and the same thing is going

65
00:03:42,319 --> 00:03:44,840
to happen to the right side. Because we

66
00:03:44,840 --> 00:03:46,340
want the buttons to fill the available

67
00:03:46,340 --> 00:03:49,989
width, we're going to do something like

68
00:03:49,989 --> 00:03:55,880
Layout.fillwidth and set this to "true".

69
00:03:55,880 --> 00:04:00,940
You know this from the layouts lecture.

70
00:04:01,180 --> 00:04:06,769
And set this to "true". Let's run and see

71
00:04:06,769 --> 00:04:09,980
what we get. And you see that we have two

72
00:04:09,980 --> 00:04:12,109
buttons. One to the left,

73
00:04:12,109 --> 00:04:14,269
and another one to the right. This is how

74
00:04:14,269 --> 00:04:17,298
this buttons look. One thing I want you

75
00:04:17,298 --> 00:04:20,029
to notice is that this is the default

76
00:04:20,029 --> 00:04:23,150
style. If you want to change this style,

77
00:04:23,150 --> 00:04:25,940
how do you do it? One way to do this is

78
00:04:25,940 --> 00:04:26,540
to come

79
00:04:26,540 --> 00:04:30,260
to the main file and set the style that

80
00:04:30,260 --> 00:04:32,810
you want to use in the main function

81
00:04:32,810 --> 00:04:35,300
here. But before we do that, there is

82
00:04:35,300 --> 00:04:37,640
another module that we need to import

83
00:04:37,640 --> 00:04:44,360
here, which is called "quit". This is going

84
00:04:44,360 --> 00:04:46,460
to give us access to a class called

85
00:04:46,460 --> 00:04:48,890
QQuickStyle. But if we try to

86
00:04:48,890 --> 00:04:52,840
include that class here, QQuickStyle,

87
00:04:52,840 --> 00:04:56,630
you see that it is not recognised in the

88
00:04:56,630 --> 00:04:59,890
autocomplete feature here. So for include

89
00:04:59,890 --> 00:05:02,630
be available, we need to run QMake

90
00:05:02,630 --> 00:05:05,900
after we add something to the project

91
00:05:05,900 --> 00:05:07,730
file here. Every time you add something

92
00:05:07,730 --> 00:05:10,310
or remove something from the project

93
00:05:10,310 --> 00:05:12,530
file, you need to run QMake. So

94
00:05:12,530 --> 00:05:15,710
let's save our project file here and do

95
00:05:15,710 --> 00:05:19,610
work run to make. And if we come to

96
00:05:19,610 --> 00:05:25,790
main again and include QQuickStyle,

97
00:05:25,790 --> 00:05:28,190
you see now that it is available. We

98
00:05:28,190 --> 00:05:32,630
include it. And before we load the QML

99
00:05:32,630 --> 00:05:35,780
file, we want to do something. Ok, we want

100
00:05:35,780 --> 00:05:40,820
to load our style. The way you do that,

101
00:05:40,820 --> 00:05:44,930
you say QQuickStyle, setStyle, you

102
00:05:44,930 --> 00:05:48,620
call a static method on this class. And

103
00:05:48,620 --> 00:05:51,140
you pass in the name of the style that

104
00:05:51,140 --> 00:05:55,400
you want. So for now, we want to try the

105
00:05:55,400 --> 00:06:02,690
"Material" for Android feel and look. We

106
00:06:02,690 --> 00:06:04,190
are going to try the other ones. Don't

107
00:06:04,190 --> 00:06:07,400
worry. If you run the application now, it

108
00:06:07,400 --> 00:06:09,340
is going to look different

109
00:06:09,340 --> 00:06:12,400
mm-hmm. This is the look you have on

110
00:06:12,400 --> 00:06:14,950
Android devices.

111
00:06:14,950 --> 00:06:18,550
Another style we can try is "universal" to

112
00:06:18,550 --> 00:06:23,050
make it feel home on Microsoft devices.

113
00:06:23,050 --> 00:06:29,270
So you can type in "Universal", run the

114
00:06:29,270 --> 00:06:32,920
application, mm-hmm, this is another look.

115
00:06:32,920 --> 00:06:37,030
You can try "fusion",

116
00:06:37,980 --> 00:06:40,540
let's see how it works. This looks like a

117
00:06:40,540 --> 00:06:45,700
desktop app. You can try imagine to look

118
00:06:45,700 --> 00:06:49,600
at the default style of it. This is how

119
00:06:49,600 --> 00:06:52,930
it looks and you can put in the default

120
00:06:52,930 --> 00:06:57,100
style, which is what we had before when

121
00:06:57,100 --> 00:07:00,730
we didn't specify any style. So you type

122
00:07:00,730 --> 00:07:03,970
"default" like this and it's going to

123
00:07:03,970 --> 00:07:08,140
look like it looked at the start of this

124
00:07:08,140 --> 00:07:09,030
lecture.

125
00:07:09,030 --> 00:07:11,980
This is it. Okay, now you have a way to

126
00:07:11,980 --> 00:07:14,920
test all the styles that we looked at.

127
00:07:14,920 --> 00:07:17,440
Now that we have our application running,

128
00:07:17,440 --> 00:07:19,900
we need to know when each of these

129
00:07:19,900 --> 00:07:23,050
buttons is correct. And it's not very

130
00:07:23,050 --> 00:07:25,360
different from what we did in the MouseArea.

131
00:07:25,360 --> 00:07:27,610
If you come to the documentation

132
00:07:27,610 --> 00:07:29,950
for the button, you're going to see that

133
00:07:29,950 --> 00:07:33,010
we don't see any signal here because all

134
00:07:33,010 --> 00:07:35,920
the signals are coming from the abstract

135
00:07:35,920 --> 00:07:39,430
button QML element. If you click on it,

136
00:07:39,430 --> 00:07:41,890
and look at signals, you're going to see

137
00:07:41,890 --> 00:07:44,860
a bunch of signals we can play with on

138
00:07:44,860 --> 00:07:49,930
our button element. So let's try click, ok

139
00:07:49,930 --> 00:07:53,620
button1, say onClicked, you see that

140
00:07:53,620 --> 00:08:05,050
it is recognized here, console.log, and we

141
00:08:05,050 --> 00:08:18,580
do the same thing for button2. Run. If

142
00:08:18,580 --> 00:08:21,790
you click, you see that our signals are

143
00:08:21,790 --> 00:08:24,850
being captured. You can try all these

144
00:08:24,850 --> 00:08:27,460
signals if you want. We are going to try

145
00:08:27,460 --> 00:08:30,820
doubleClicked. Let's try it on button1,

146
00:08:30,820 --> 00:08:38,729
onDoubleClicked, console.log.

147
00:08:43,400 --> 00:08:47,870
If you run it, mm-hmm,

148
00:08:47,870 --> 00:08:50,730
double-click, okay, you see that the

149
00:08:50,730 --> 00:08:53,460
double-click Signal is emitted but also

150
00:08:53,460 --> 00:08:55,740
the click signal is emitted, but you can

151
00:08:55,740 --> 00:08:57,990
process whatever signal you want in your

152
00:08:57,990 --> 00:09:00,870
qml application here. Another thing I

153
00:09:00,870 --> 00:09:03,210
didn't show you is that you can also use

154
00:09:03,210 --> 00:09:07,410
QT quick controls 1 series. Let's change

155
00:09:07,410 --> 00:09:12,180
this to 1.4 and you see that this signal

156
00:09:12,180 --> 00:09:14,880
was not there in QT quick controls 1,

157
00:09:14,880 --> 00:09:18,990
so we can comment it out and run the

158
00:09:18,990 --> 00:09:21,870
application and see how it looks. It is

159
00:09:21,870 --> 00:09:23,460
going to look like a desktop application.

160
00:09:23,460 --> 00:09:26,580
This is what you see here. Okay, this is

161
00:09:26,580 --> 00:09:29,280
how you can try QT quick controls 1 if

162
00:09:29,280 --> 00:09:31,650
you want to use them. And if you want to

163
00:09:31,650 --> 00:09:33,780
know more information about them, you can

164
00:09:33,780 --> 00:09:37,130
come today online documentation here and

165
00:09:37,130 --> 00:09:40,020
look at whatever it is you want to look

166
00:09:40,020 --> 00:09:42,030
at. For example, if you want to know what

167
00:09:42,030 --> 00:09:45,270
is available for your buttons, you can

168
00:09:45,270 --> 00:09:48,630
come here, see the signals, you see the

169
00:09:48,630 --> 00:09:50,730
clicked signal. This is how the button

170
00:09:50,730 --> 00:09:53,340
looks. And these are different properties

171
00:09:53,340 --> 00:09:56,550
that are available to you. Ok, let's turn

172
00:09:56,550 --> 00:10:00,090
this back to Qt quick controls 2, one

173
00:10:00,090 --> 00:10:02,220
thing I want you to know is that this QT

174
00:10:02,220 --> 00:10:04,400
quick controls components are world

175
00:10:04,400 --> 00:10:07,380
using the elements we have seen before

176
00:10:07,380 --> 00:10:10,590
like rectangles, images, text as raw

177
00:10:10,590 --> 00:10:12,330
ingredients to give you something that

178
00:10:12,330 --> 00:10:14,910
you can use very fast and that is very

179
00:10:14,910 --> 00:10:17,790
efficient to use. So behavior wise, they

180
00:10:17,790 --> 00:10:19,590
really do the same things, for example,

181
00:10:19,590 --> 00:10:22,380
you can put them in a ColumnLayout here.

182
00:10:22,380 --> 00:10:28,080
Let's try this. And if we do this, they

183
00:10:28,080 --> 00:10:30,450
are going to be laid out from top to

184
00:10:30,450 --> 00:10:32,460
bottom but button1 is going to be to

185
00:10:32,460 --> 00:10:34,680
the top, button two is going to be to the

186
00:10:34,680 --> 00:10:38,160
bottom. And it is going to fill the width

187
00:10:38,160 --> 00:10:40,680
that is available. Let's run the

188
00:10:40,680 --> 00:10:42,840
application and see what we have.

189
00:10:42,840 --> 00:10:45,630
Button1, button2, you can click on

190
00:10:45,630 --> 00:10:48,120
button2, you can click on button1, and

191
00:10:48,120 --> 00:10:49,450
you can double click

192
00:10:49,450 --> 00:10:51,910
button1. And you see that we have our

193
00:10:51,910 --> 00:10:54,730
signals. Okay, this is all the information

194
00:10:54,730 --> 00:10:57,160
I had to share about the QT quick

195
00:10:57,160 --> 00:11:00,010
control button element. In the next

196
00:11:00,010 --> 00:11:02,200
lecture, we're going to run our app here

197
00:11:02,200 --> 00:11:04,990
on an Android device and go through the

198
00:11:04,990 --> 00:11:07,570
entire process of how that happens. I'll

199
00:11:07,570 --> 00:00:00,000
see you there.

