WEBVTT

00:05.570 --> 00:09.420
We are going to talk about some standard layout managers.

00:09.420 --> 00:16.800
We've actually used the QBoxLayout already and I'll briefly speak about it later. Then we will take a closer

00:16.800 --> 00:18.220
look at the other two layouts.

00:18.260 --> 00:30.100
There are only two different layouts in QBoxLayout manager.

00:30.370 --> 00:41.130
QHBoxLayout for Qt horizontal box layout. And QVBoxLayout V for vertical. They line up widgets horizontally and vertically

00:41.130 --> 00:47.430
respectively. And the yes we've changed the layout of centralWidget in main window to both of them in previous video already.

00:47.460 --> 00:57.150
QGridLayout meanwhile gives you a two dimensional grid to arrange widgets.

00:57.150 --> 01:00.970
It is divided into different same size cells.

01:01.090 --> 01:04.640
While a widget can occupy multiple cells.

01:04.740 --> 01:09.640
It is also the most flexible layout manager a among standard built-in layout managers.

01:09.730 --> 01:20.130
As for QFormLayout, it can be seen as a specialized version of QGridLayout.

01:20.160 --> 01:23.180
It lays out it's children into two column form.

01:23.290 --> 01:28.730
Usually the labels are in the left column and the input widgets are on the right.

01:28.750 --> 01:34.650
The advantages over QGridLayout is that the QFormLayout would  adhere to the different

01:34.710 --> 01:35.520
platforms look and feel guidelines.

01:35.580 --> 01:45.260
It supports row wrapping and has convenient API to add a label fields pairs.

01:45.260 --> 01:51.260
Now let's get Qt Creator started and try these layouts out.

01:51.610 --> 01:57.820
Create a new project or just reuse the project from one of the previous videos.

01:57.850 --> 02:00.520
Now we drag four Push buttons into the view.

02:06.820 --> 02:16.510
Try to switch the layout of centralWidget. Between the horizontal and the vertical.

02:16.510 --> 02:21.690
This is basically the QBoxLayout manager.

02:21.730 --> 02:25.660
Now if you click a centralWidget and click Lay Out in a Grid.

02:28.560 --> 02:30.050
There is no difference.

02:30.050 --> 02:36.650
You can of course think QBoxLayout as a special case of QGridLayout where you can only

02:36.650 --> 02:42.900
have one column or one row.

02:43.100 --> 02:45.200
But if you drag this button around.

02:50.120 --> 02:51.560
So you notice the difference.

02:55.350 --> 03:01.950
By default a button height is fixed so you can't make a button have two cells in a column.

03:05.330 --> 03:07.920
But you can make it to have multiple cells in a row.

03:11.790 --> 03:16.040
At last, if you click the Lay Out in a Form button.

03:20.660 --> 03:26.010
You immediately see that widgets on the left column have been shrunk to the minimal size.

03:26.270 --> 03:34.740
Meanwhile all widgets are also top aligned to give a look and feel that it is a form. So a typical usage

03:34.740 --> 03:35.130
of this layout

03:35.130 --> 03:38.890
is to use labels on the left and input widgets

03:38.910 --> 03:40.800
such as line edit one the right.

03:53.140 --> 03:59.240
The convenient API we have is to add such a pair in C++ code.

03:59.430 --> 04:07.130
Let's close the UI design for now and go back to the code editor.

04:07.280 --> 04:09.420
Here we learn a new template function in Qt.

04:09.460 --> 04:20.350
qobject_cast(). It behaves similarly to the standard C++, dynamic_cast with some other advantages.

04:20.930 --> 04:26.770
The template class argument must be a subclass of the given arguments type.

04:31.540 --> 04:34.090
0 or null pointer is returned

04:34.120 --> 04:35.700
if the cast failed.

04:35.950 --> 04:44.280
So here since we make the layout of centralWidget. A formal layout. We can cast it into a QFormLayout pointer.

04:44.280 --> 04:48.260
instead of the generic QLayout

04:48.490 --> 04:53.980
Then we will have the convenient method addRow().

04:54.050 --> 05:00.640
It has an overloaded function to except a string and a QWidget pointer.

05:00.820 --> 05:05.280
So we can just create a widget here and use this method

05:06.520 --> 05:09.290
to insert this new pair into the layout.

05:09.570 --> 05:12.600
If you build and run an application now.

05:25.870 --> 05:30.750
You'll see that in addition to those widgets we added in the UI design mode.

05:31.060 --> 05:34.140
We now have a row with a label and a line edit

05:34.390 --> 05:35.060
in the end.

05:38.510 --> 05:42.240
In the next video you you will lean how to use Tabs

05:42.270 --> 05:42.830
in Qt.
