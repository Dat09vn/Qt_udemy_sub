1
00:00:00,030 --> 00:00:02,129
Trong bài giảng này, ta sẽ định nghĩa

2
00:00:02,129 --> 00:00:04,950
hai thành phần bên ngoài. Ta có một thành phần gửi

3
00:00:04,950 --> 00:00:07,200
tín hiệu và có thành phần khác nhận tín hiệu đó.

4
00:00:07,200 --> 00:00:09,480
Ta sẽ mở Qt Creator và

5
00:00:09,480 --> 00:00:12,090
làm điều đó. Được rồi, ở đây ta đang ở trong Qt Creator.

6
00:00:12,090 --> 00:00:15,570
Ta sẽ tạo dự án Qt

7
00:00:15,570 --> 00:00:18,119
Quick Application như thường lệ, đặt tên là

8
00:00:18,119 --> 00:00:22,619
ExternalComponentSignalSlotDemo. Lưu

9
00:00:22,619 --> 00:00:24,930
nó ở vị trí thông thường. Nhấn "Next".

10
00:00:24,930 --> 00:00:29,010
Chọn phiên bản Qt. Chọn Kit.

11
00:00:29,010 --> 00:00:33,210
và "Finish". Ta muốn thay đổi tiêu đề

12
00:00:33,210 --> 00:00:37,200
ở đây và ta muốn thêm hai thành phần:

13
00:00:37,200 --> 00:00:39,239
một sẽ là "Notifier" và

14
00:00:39,239 --> 00:00:41,670
thành phần khác là "Receiver". Ta bấm vào

15
00:00:41,670 --> 00:00:46,379
qml.qrc tại đây để thêm một tệp mới. Nó là

16
00:00:46,379 --> 00:00:51,360
sẽ là một tệp QML. Điều này sẽ

17
00:00:51,360 --> 00:00:58,379
là "Notifier". Ta muốn thêm một

18
00:00:58,379 --> 00:01:05,269
"Notifier" khác và

19
00:01:05,269 --> 00:01:07,200
ta muốn "Finish".

20
00:01:07,200 --> 00:01:10,470
Lưu ý rằng Qt Quick được nhập vào chỗ này đã cũ.

21
00:01:10,470 --> 00:01:13,590
Ta đang sử dụng 2.11 trong "main" vì vậy ta nên

22
00:01:13,590 --> 00:01:18,030
thay đổi thành 2.11. Bên trong Item này

23
00:01:18,030 --> 00:01:22,590
ở đây ta muốn đặt một "Rectangle". Ta muốn

24
00:01:22,590 --> 00:01:32,460
cung cấp cho nó một id, chiều rộng 200, chiều cao 200

25
00:01:32,460 --> 00:01:36,869
và một màu. Hãy cho nó màu "đỏ". Bên trong ta

26
00:01:36,869 --> 00:01:41,579
muốn đặt thành phần Text. Id

27
00:01:41,579 --> 00:01:45,930
sẽ được displayTestId. Nó là

28
00:01:45,930 --> 00:01:49,340
sẽ được căn giữa trong thành phần cha. Và

29
00:01:49,340 --> 00:01:52,200
ta muốn làm cho nó lớn hơn một chút. Như vậy

30
00:01:52,200 --> 00:01:55,470
ta gõ font, pointSize. Hãy

31
00:01:55,470 --> 00:01:58,250
đặt là 12. Ta sẽ xem cái này ra làm sao.

32
00:01:58,250 --> 00:02:01,049
Ta muốn đến cấp độ gốc (root level) ở đây

33
00:02:01,049 --> 00:02:04,140
và xác định một thuộc tính. Nó sẽ

34
00:02:04,140 --> 00:02:04,799
một số nguyên.

35
00:02:04,799 --> 00:02:07,680
Ta sẽ gọi nó là "count" và nó

36
00:02:07,680 --> 00:02:12,420
sẽ bắt đầu từ 0. text của item

37
00:02:12,420 --> 00:02:13,350
Text là

38
00:02:13,350 --> 00:02:17,370
"count" như thế này. Vậy những gì

39
00:02:17,370 --> 00:02:20,310
ta muốn có là một Rectangle

40
00:02:20,310 --> 00:02:22,920
có thể nhấp (clickable) và khi ta nhấp vào nó

41
00:02:22,920 --> 00:02:25,530
"count" tăng lên và ta có thể thấy

42
00:02:25,530 --> 00:02:28,050
"count" trong thành phần Text ở đây. Vì thế

43
00:02:28,050 --> 00:02:31,380
hãy đặt một thành phần MouseArea

44
00:02:31,380 --> 00:02:35,580
tràn hết trong hình chữ nhật, anchors.fill.

45
00:02:35,580 --> 00:02:41,960
parent, onClick. Ta muốn

46
00:02:41,960 --> 00:02:45,270
tăng "count" lên một vì vậy ta

47
00:02:45,270 --> 00:02:47,460
sẽ gõ count++ như

48
00:02:47,460 --> 00:02:51,720
thế này. Và khi ta làm điều đó con số đó

49
00:02:51,720 --> 00:02:53,610
ta thấy trong thành phần Text ở đây

50
00:02:53,610 --> 00:02:56,040
sẽ tăng lên. Như vậy, để có thể sử dụng

51
00:02:56,040 --> 00:02:59,610
thành phần "Notìier" ở đây, trong các vị trí

52
00:02:59,610 --> 00:03:01,830
như Row và Column ta cần đặt

53
00:03:01,830 --> 00:03:04,410
chiều rộng và chiều cao ở đây. Hãy làm

54
00:03:04,410 --> 00:03:07,680
cái đó. Vì vậy, ta sẽ nói chiều rộng bằng

55
00:03:07,680 --> 00:03:13,220
notifierRectId.width và chiều cao sẽ là

56
00:03:13,220 --> 00:03:17,370
notifierRecId.height như thế này.

57
00:03:17,370 --> 00:03:20,400
Ta cũng muốn đặt màu sắc của

58
00:03:20,400 --> 00:03:23,070
hình chữ nhật ở đây để người dùng

59
00:03:23,070 --> 00:03:24,870
thành phần này của ta có thể

60
00:03:24,870 --> 00:03:27,360
linh hoạt thiết lập màu sắc. Vì vậy ta

61
00:03:27,360 --> 00:03:29,280
sẽ đưa nó ra bằng cách sử dụng thuộc tính

62
00:03:29,280 --> 00:03:35,640
alias, "property alias". Hãy gõ rectColor

63
00:03:35,640 --> 00:03:41,210
Và nó sẽ là "notifier",

64
00:03:41,210 --> 00:03:46,830
màu sắc, giống như thế này. Bây giờ ta có thể lưu

65
00:03:46,830 --> 00:03:51,270
nó, trở lại "main" và xác định bên trong

66
00:03:51,270 --> 00:03:55,010
và thông báo thành phần của mình như thế này.

67
00:03:55,010 --> 00:03:58,440
Ta có thể chạy ứng dụng và xem nó

68
00:03:58,440 --> 00:03:59,010
có làm việc

69
00:03:59,010 --> 00:04:02,820
như ta muốn cho tới giờ hay không. Ta sẽ có một

70
00:04:02,820 --> 00:04:05,370
hình chữ nhật màu đỏ ở phía trên bên trái của

71
00:04:05,370 --> 00:04:08,070
cửa sổ như thế này. Và nếu ta nhấp vào nó.

72
00:04:08,070 --> 00:04:10,020
Nó sẽ tăng lên và cho ta thấy

73
00:04:10,020 --> 00:04:12,570
số tăng lên. Vì vậy, ta nên có 0, 1,

74
00:04:12,570 --> 00:04:16,170
2 và tăng lên như thế này. Đây là những gì ta

75
00:04:16,170 --> 00:04:19,529
muốn. Tôi cũng muốn tăng pointSize

76
00:04:19,529 --> 00:04:24,270
cho văn bản ở đây. Ta gán nó bằng 12.

77
00:04:24,270 --> 00:04:26,870
Tôi muốn gán cho nó giá trị 20

78
00:04:26,870 --> 00:04:30,470
và xem cách nó hoạt động. Bởi vì ta

79
00:04:30,470 --> 00:04:33,380
đang thay đổi code trong thành phần trong một

80
00:04:33,380 --> 00:04:36,440
tệp QML ngoài. Đôi khi Qt Creator

81
00:04:36,440 --> 00:04:38,540
không nhận những thay đổi đó trừ khi

82
00:04:38,540 --> 00:04:42,560
ta vào tập tin "main" và áp dụng một số

83
00:04:42,560 --> 00:04:45,740
thay đổi. Như vậy, ta thêm một vài khoảng trống ở đây.

84
00:04:45,740 --> 00:04:48,620
Ta có thể cần phải làm điều này nếu ta thấy rằng

85
00:04:48,620 --> 00:04:51,590
những thay đổi của mình không được áp dụng. Và tôi thích

86
00:04:51,590 --> 00:04:55,280
văn bản này hơn. Được rồi bây giờ ta có

87
00:04:55,280 --> 00:04:58,100
Thành phần Notifier. Thông tin ta

88
00:04:58,100 --> 00:05:01,460
muốn gửi là "count" ở đây. Được rồi, ta

89
00:05:01,460 --> 00:05:04,190
đang có ở đây và hiển thị nó. Nhưng

90
00:05:04,190 --> 00:05:06,289
ta muốn các thành phần bên ngoài khác

91
00:05:06,289 --> 00:05:08,690
có được thông tin này nữa. Vì vậy ta

92
00:05:08,690 --> 00:05:11,810
sẽ định nghĩa một tín hiệu (signal)

93
00:05:11,810 --> 00:05:14,990
"notify". Và nó sẽ truyền vào một

94
00:05:14,990 --> 00:05:17,570
tham số là một chuỗi tên là

95
00:05:17,570 --> 00:05:21,199
là "count". Ta muốn nó như thế này. Ta

96
00:05:21,199 --> 00:05:26,510
đã khai báo tín hiệu (signal). Ta muốn xuất ra

97
00:05:26,510 --> 00:05:28,729
nó. Và sẽ xuất ra nó bất cứ khi nào

98
00:05:28,729 --> 00:05:31,130
nó thay đổi ở đây. Như vậy, sau khi tăng

99
00:05:31,130 --> 00:05:37,060
"count" ta nên gọi notify(count). Và

100
00:05:37,060 --> 00:05:40,130
tín hiệu được phát ra. Vì vậy, những gì ta muốn

101
00:05:40,130 --> 00:05:42,440
làm là xây dựng đối tượng "Receiver".

102
00:05:42,440 --> 00:05:44,900
Bởi vì mọi thứ đều khá giống nhau.

103
00:05:44,900 --> 00:05:49,400
Tôi sẽ nhấn Ctrl + A, sao chép vào

104
00:05:49,400 --> 00:05:52,210
toàn bộ đối tượng "Notifier". Ta sẽ lưu nó.

105
00:05:52,210 --> 00:05:55,430
Đi tới "Receiver", Ctrl + A, xóa

106
00:05:55,430 --> 00:05:57,530
tất cả trong đối tượng "Notifier"

107
00:05:57,530 --> 00:06:00,110
và lấy ra những gì ta không cần. Ta muốn

108
00:06:00,110 --> 00:06:02,360
lấy ra "property int count" ở đây.

109
00:06:02,360 --> 00:06:04,340
Và "signal notify ...", ta không cần

110
00:06:04,340 --> 00:06:07,460
trong "Receiver". Nhưng ta muốn

111
00:06:07,460 --> 00:06:10,160
thay đổi id ở đây. Vì vậy, ta sẽ

112
00:06:10,160 --> 00:06:15,110
gõ receiveRectId và thay đổi điều này

113
00:06:15,110 --> 00:06:17,539
bất cứ nơi nào ta có nó. Ta sẽ

114
00:06:17,539 --> 00:06:26,720
sao chép, dán ở đây, dán ở đây, dán ở đây ... Ta

115
00:06:26,720 --> 00:06:29,870
cũng muốn đặt màu sắc. Không có

116
00:06:29,870 --> 00:06:33,590
lý do gì để không làm điều đó. Ta cũng sẽ gõ

117
00:06:33,590 --> 00:06:36,190
"receiver"

118
00:06:36,330 --> 00:06:40,570
DisplayedTextId. Ta muốn văn bản của nó

119
00:06:40,570 --> 00:06:43,750
bắt đầu từ 0 như thế này. Và ta không

120
00:06:43,750 --> 00:06:45,820
muốn nó nhấp được bởi vì nó sẽ không

121
00:06:45,820 --> 00:06:48,370
gửi bất kỳ tín hiệu nào. Nó là

122
00:06:48,370 --> 00:06:51,430
một "Receiver". Nhưng ta muốn xác định một khe cắm (slot)

123
00:06:51,430 --> 00:06:54,280
bên trong và đó là khe cắm (slot) này sẽ

124
00:06:54,280 --> 00:06:57,670
được kết nối với tín hiệu (signal) từ

125
00:06:57,670 --> 00:07:00,990
"Notifier". Vì vậy, ta sẽ viết "function".

126
00:07:00,990 --> 00:07:03,430
Hãy nhớ nó là hàm JavaScript bình thường

127
00:07:03,430 --> 00:07:07,360
"receiveInfo". Nó sẽ

128
00:07:07,360 --> 00:07:11,470
nhận "count". Và ta muốn sử dụng

129
00:07:11,470 --> 00:07:14,050
"count" này để làm 2 việc: một là đặt

130
00:07:14,050 --> 00:07:16,780
văn bản của thành phần Text này ở đây. Vì thế

131
00:07:16,780 --> 00:07:21,430
ta sẽ nói receiveDisplayTextId.text

132
00:07:21,430 --> 00:07:26,710
bằng "count". Điều này đã được thực hiện và ta

133
00:07:26,710 --> 00:07:28,660
muốn console.log. Ta sẽ nói

134
00:07:28,660 --> 00:07:36,370
"Receiver". Và ta sẽ nói

135
00:07:36,370 --> 00:07:38,380
số mà ta nhận được là số

136
00:07:38,380 --> 00:07:42,730
"count" ở đây. Được rồi, đây là tất cả những gì ta muốn. Ta

137
00:07:42,730 --> 00:07:45,700
có "Notifier" và ta có

138
00:07:45,700 --> 00:07:49,600
"Receiver". Vì vậy, những gì có thể làm là trở lại

139
00:07:49,600 --> 00:07:52,600
"main". Hãy lưu cái này trước. Trở lại

140
00:07:52,600 --> 00:07:57,160
"main" và định nghĩa "Receiver" mà ta muốn

141
00:07:57,160 --> 00:07:59,350
anchor receiver sang bên phải để

142
00:07:59,350 --> 00:08:01,000
ta có thể nói... Như vậy, ta sẽ gõ

143
00:08:01,000 --> 00:08:08,620
"anchors.right:parent.right". Nó sẽ

144
00:08:08,620 --> 00:08:10,960
bị buộc phải ở bên phải của

145
00:08:10,960 --> 00:08:13,570
cửa sổ và ta muốn cho chúng màu sắc

146
00:08:13,570 --> 00:08:15,280
bởi vì ta có thể làm điều đó. Ta sẽ

147
00:08:15,280 --> 00:08:18,070
gõ màu đỏ. Ta hãy gán "yellowgreen" cho cái này.

148
00:08:18,070 --> 00:08:24,070
"Receiver" sẽ là

149
00:08:24,070 --> 00:08:27,840
"dodgerblue". Tại sao không?

150
00:08:27,840 --> 00:08:31,840
"yellowgreen". Cái này tốt hơn. Ta muốn

151
00:08:31,840 --> 00:08:36,930
lưu mọi thứ. Chạy ứng dụng. Ta

152
00:08:37,020 --> 00:08:40,390
có 2 hình chữ nhật. Khi ta nhấp vào

153
00:08:40,390 --> 00:08:44,320
hình chữ nhật đầu tiên, dữ liệu thay đổi nhưng

154
00:08:44,320 --> 00:08:46,990
"Receiver" không nhận được thông báo

155
00:08:46,990 --> 00:08:49,600
bởi vì ta đã không kết nối tín hiệu

156
00:08:49,600 --> 00:08:50,080
từ

157
00:08:50,080 --> 00:08:52,780
trung tâm đến khe (slot) của "Receiver".

158
00:08:52,780 --> 00:08:55,630
Đó là những gì ta sẽ làm tiếp theo. Ok, ta

159
00:08:55,630 --> 00:08:57,460
có thể thực hiện kết nối bất cứ nơi nào mình

160
00:08:57,460 --> 00:09:00,250
muốn. Trong trường hợp này, ta muốn làm điều đó khi

161
00:09:00,250 --> 00:09:02,620
thành phần "Notifier" được tải

162
00:09:02,620 --> 00:09:04,480
hoàn toàn. Vì vậy, ta sẽ đi vào bên trong

163
00:09:04,480 --> 00:09:08,160
"Notifier" và thực hiện Component.onCompleted.

164
00:09:08,160 --> 00:09:13,420
Ta muốn tạo "notify". Nhắc lại

165
00:09:13,420 --> 00:09:16,720
đó là một tín hiệu (signal) của "Notifier"

166
00:09:16,720 --> 00:09:21,010
này. Ta viết "connect" và

167
00:09:21,010 --> 00:09:25,600
gõ "receiveId". Chú ý rằng

168
00:09:25,600 --> 00:09:28,990
ta đã không đặt id này ở đây. Vì vậy, ta

169
00:09:28,990 --> 00:09:33,490
nên làm điều đó "id:receiveId". Và

170
00:09:33,490 --> 00:09:36,130
hãy cung cấp cho "Notifier" một id. Vì thế

171
00:09:36,130 --> 00:09:43,960
ta gõ "notifierId". Như vậy, ta muốn

172
00:09:43,960 --> 00:09:50,430
gọi vị trí từ "Receiver". Và

173
00:09:50,430 --> 00:09:52,900
chỉ như thế này ta đã tạo

174
00:09:52,900 --> 00:09:58,360
kết nối, "Connect signal to slot".

175
00:09:58,360 --> 00:10:01,750
Đây là cách làm điều đó. Nếu mọi thứ

176
00:10:01,750 --> 00:10:03,550
ổn rồi ta sẽ xem dữ liệu

177
00:10:03,550 --> 00:10:06,760
thay đổi trong đối tượng "Receiver" và

178
00:10:06,760 --> 00:10:09,730
sẽ thấy tin nhắn này ở đây. Hãy chạy

179
00:10:09,730 --> 00:10:16,060
ứng dụng. Ngón tay đan chéo. Còn ta

180
00:10:16,060 --> 00:10:19,390
thấy chưa Khi ta tăng ở trung tâm, ta

181
00:10:19,390 --> 00:10:21,250
cũng tăng trong "Receiver". Của ta

182
00:10:21,250 --> 00:10:25,000
kết nối trong tập tin "main" đang hoạt động.

183
00:10:25,000 --> 00:10:27,850
Và ta chỉ để lại kết nối ở đây. Nhưng

184
00:10:27,850 --> 00:10:30,280
không có gì ngăn cản ta lấy nó ra

185
00:10:30,280 --> 00:10:33,900
ở đây và đặt nó ở cấp độ gốc (root level)

186
00:10:33,900 --> 00:10:38,320
khi toàn bộ cửa sổ được tải.

187
00:10:38,320 --> 00:10:42,100
Để cách này làm việc ta cần phải truyền id

188
00:10:42,100 --> 00:10:44,200
của "Notifier". Vì vậy, ta gõ

189
00:10:44,200 --> 00:10:51,340
"notifierId" và '.' như thế này. Hãy chạy

190
00:10:51,340 --> 00:10:54,300
một lần nữa để xem nó hoạt động hay không.

191
00:10:54,300 --> 00:11:00,220
Và đúng như ta mong đợi, mọi thứ vẫn hoạt động.

192
00:11:00,220 --> 00:11:02,380
Điều tiếp theo tôi muốn cho các bạn thấy là

193
00:11:02,380 --> 00:11:03,950
ta cũng có thể bọc

194
00:11:03,950 --> 00:11:06,350
kết nối trong đối tượng "Notifier"

195
00:11:06,350 --> 00:11:09,200
và không phải làm điều đó ngay tại đây. Cách

196
00:11:09,200 --> 00:11:10,790
ta có thể làm điều đó là có thể đến

197
00:11:10,790 --> 00:11:14,150
Đối tượng "Notifier" và cung cấp cho nó một thuộc tính

198
00:11:14,150 --> 00:11:17,090
của phần tử đích sẽ

199
00:11:17,090 --> 00:11:20,770
cung cấp các khe cắm (slot). Ta có thể gõ "property"

200
00:11:20,770 --> 00:11:23,510
kiểu dữ liệu sẽ là "Receiver".

201
00:11:23,510 --> 00:11:27,710
Và ta sẽ gọi nó là "target". Và

202
00:11:27,710 --> 00:11:29,690
theo mặc định giá trị là "null" vì

203
00:11:29,690 --> 00:11:32,630
ta không muốn chỉ định nó. Nhưng ta muốn

204
00:11:32,630 --> 00:11:34,970
được thông báo khi target được thiết đặt.

205
00:11:34,970 --> 00:11:37,370
Và ta sẽ nắm bắt điều đó trong

206
00:11:37,370 --> 00:11:41,360
tín hiệu onTargetChanged. Bởi vì khi

207
00:11:41,360 --> 00:11:44,210
được thiết đặt, nó thay đổi và ta muốn tạo

208
00:11:44,210 --> 00:11:46,100
kết nối. Ok ta gõ

209
00:11:46,100 --> 00:11:55,700
notify.connect (target.receiveInfo).

210
00:11:55,700 --> 00:11:58,550
chỉ như thế này. Ok, hãy đặt cái này và

211
00:11:58,550 --> 00:12:00,560
những gì ta cần làm trong

212
00:12:00,560 --> 00:12:03,260
đối tượng "Notifier" là lấy ra 

213
00:12:03,260 --> 00:12:05,060
kết nối này ở đây vì ta không muốn

214
00:12:05,060 --> 00:12:08,410
làm điều này hai lần. Và chỉ định một target.

215
00:12:08,410 --> 00:12:10,940
Được rồi, ta sẽ gõ "target" và

216
00:12:10,940 --> 00:12:15,080
nó sẽ là "receiveId". Được rồi chỉ

217
00:12:15,080 --> 00:12:16,790
như thế này ta thấy rằng không có bất kỳ

218
00:12:16,790 --> 00:12:19,610
kết nối nào ở đây. Ta đã làm mọi thứ trong

219
00:12:19,610 --> 00:12:20,330
đối tượng "Notifier"

220
00:12:20,330 --> 00:12:24,260
bằng cách cho nó một "Receiver". Nó là "null"

221
00:12:24,260 --> 00:12:28,040
theo mặc định. Nhưng khi ta đặt nó ở đây

222
00:12:28,040 --> 00:12:32,210
Tín hiệu onTargetChanged được kích hoạt và ta

223
00:12:32,210 --> 00:12:33,530
đang thực hiện kết nối.

224
00:12:33,530 --> 00:12:36,110
Ok, kết nối được thực hiện khi ta

225
00:12:36,110 --> 00:12:38,150
xác định "target" này ở đây. Tôi hi vọng điều này

226
00:12:38,150 --> 00:12:38,960
dễ hiểu.

227
00:12:38,960 --> 00:12:41,390
Nếu chạy, ta sẽ không thấy bất kỳ

228
00:12:41,390 --> 00:12:44,440
sự khác biệt nào. Nhấp và ta thấy tín hiệu (signal)

229
00:12:44,440 --> 00:12:48,620
được gửi bởi "Notifier" và được nhận bởi

230
00:12:48,620 --> 00:12:51,800
Thành phần "Receiver" ở đây. Tôi thực sự hy vọng

231
00:12:51,800 --> 00:12:54,680
ví dụ này chỉ rõ theo cách ta làm việc với

232
00:12:54,680 --> 00:12:56,870
tín hiệu (signal) và khe (slot) khá nhiều vì

233
00:12:56,870 --> 00:12:58,670
nó thực sự đơn giản. Ta xác định

234
00:12:58,670 --> 00:13:01,190
tín hiệu (signal), kích hoạt nó, và sau đó ta cắm

235
00:13:01,190 --> 00:13:03,320
nó vào một khe cắm (slot). Và cứ như thế ta có thể

236
00:13:03,320 --> 00:13:05,090
truyền dữ liệu qua lại giữa

237
00:13:05,090 --> 00:13:07,310
các thành phần. Trong chương tiếp theo, ta

238
00:13:07,310 --> 00:13:09,710
sẽ xem xét các yếu tố đầu vào của người dùng.

239
00:13:09,710 --> 00:00:00,000
Hẹn gặp các bạn ở đó

