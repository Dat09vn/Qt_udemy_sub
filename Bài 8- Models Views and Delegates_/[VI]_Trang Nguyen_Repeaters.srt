1
00:00:00,000 --> 00:00:01,740
Trong bài này, ta sẽ tìm hiểu về

2
00:00:01,740 --> 00:00:03,990
repeater. Repeater cho phép bạn hiển thị

3
00:00:03,990 --> 00:00:06,330
dữ liệu tương tự với

4
00:00:06,330 --> 00:00:08,220
cách hiển thị dữ liệu trong listview,

5
00:00:08,220 --> 00:00:10,740
bạn sẽ dùng nó khi ListView

6
00:00:10,740 --> 00:00:13,710
không phủ hợp để dùng. Nó cũng cho phép bạn

7
00:00:13,710 --> 00:00:15,540
kiểm soát được tốt hơn cách hiển thị

8
00:00:15,540 --> 00:00:18,240
dữ liệu. Ta sẽ mở QT creator

9
00:00:18,240 --> 00:00:21,090
và thực hành. Đây là QT Creator.

10
00:00:21,090 --> 00:00:24,750
Ta sẽ tạo dự án như thường lệ.

11
00:00:24,750 --> 00:00:28,400
Tên dự án là RepeaterDemo.

12
00:00:28,400 --> 00:00:34,620
Chọn phiên bản Qt, chọn bộ kit,

13
00:00:34,620 --> 00:00:38,430
và Finish. Ở đây ghi "repeater demo"

14
00:00:38,430 --> 00:00:44,670
và bên trong ta sẽ tạo một

15
00:00:44,670 --> 00:00:48,390
phần tử Flickable. Và giờ,

16
00:00:48,390 --> 00:00:50,370
có lẽ bạn thắc mắc tại sao phải
thêm Flickable vào

17
00:00:50,370 --> 00:00:54,030
nếu Repeater cũng hoạt động
như ListView.

18
00:00:54,030 --> 00:00:56,460
Repeater không có các tính chất

19
00:00:56,460 --> 00:00:59,550
kiểu Flickable như ListView.

20
00:00:59,550 --> 00:01:01,800
Đó là bởi vì nó cung cấp

21
00:01:01,800 --> 00:01:04,709
nhiều quyền kiểm soát dữ liệu hơn,

22
00:01:04,709 --> 00:01:06,780
vì thế, ta sẽ tự thêm vào

23
00:01:06,780 --> 00:01:09,720
phần tử Flickable. Ở trong, ta sẽ

24
00:01:09,720 --> 00:01:11,880
đặt phần tử Column, đây là cách

25
00:01:11,880 --> 00:01:13,770
ta hiển thị dữ liệu từ trên

26
00:01:13,770 --> 00:01:19,290
xuống dưới. ID của nó sẽ là columnId,

27
00:01:19,290 --> 00:01:23,310
nó sẽ phủ tràn hết parent, và ta sẽ

28
00:01:23,310 --> 00:01:27,869
đặt giá trị cho spacing (giãn cách ròng) là 2. Ta cần

29
00:01:27,869 --> 00:01:29,880
để phần tử Flickable biết
nó phải hiển thị

30
00:01:29,880 --> 00:01:31,950
bao nhiêu nội dung, nên ta sẽ đặt

31
00:01:31,950 --> 00:01:36,600
chiều cao. Ta đã từng làm thế rồi,

32
00:01:36,600 --> 00:01:39,869
nó sẽ là chiều cao cần được

33
00:01:39,869 --> 00:01:42,119
hiển thị tại cột này, vì thế,

34
00:01:42,119 --> 00:01:43,770
ta sẽ đặt implicitHeight (chiều cao ngầm định) cho nó,

35
00:01:43,770 --> 00:01:47,970
nhưng ta cũng cần để nó phủ tràn hết parent...

36
00:01:47,970 --> 00:01:50,430
Hãy quay lại cột này.

37
00:01:50,430 --> 00:01:57,090
Bên trong, ta tạo một Repeater,

38
00:01:57,090 --> 00:01:59,729
đối tượng ta cần tìm hiểu. Repeater

39
00:01:59,729 --> 00:02:02,759
khá giống với ListView ở chỗ

40
00:02:02,759 --> 00:02:06,960
nó có thuộc tính model và

41
00:02:06,960 --> 00:02:10,979
thuộc tính delegate để kiểm soát

42
00:02:10,979 --> 00:02:13,890
hiển thị của các phần tử.

43
00:02:13,890 --> 00:02:17,680
Ví dụ, nếu ta đặt model bằng 10,

44
00:02:17,680 --> 00:02:19,750
ta sẽ làm vậy để

45
00:02:19,750 --> 00:02:23,140
các bạn thấy cách ta xác định model,

46
00:02:23,140 --> 00:02:25,060
và các bạn sẽ thấy

47
00:02:25,060 --> 00:02:27,879
chuyện gì sẽ xảy ra nếu ta chạy thử.

48
00:02:27,879 --> 00:02:30,519
Đối với delegate, ta sẽ tạo delegate

49
00:02:30,519 --> 00:02:32,920
ngay trong Repeater, và nó sẽ làm một hình chữ nhật.

50
00:02:32,920 --> 00:02:37,239
Tôi đã dán nội dung vào đây

51
00:02:37,239 --> 00:02:39,819
để khỏi phải gõ, và

52
00:02:39,819 --> 00:02:41,620
việc này thì các bạn cũng biết rồi.

53
00:02:41,620 --> 00:02:44,470
Ta có chiều rộng, chiều cao, màu sắc.

54
00:02:44,470 --> 00:02:46,510
Ta có phần tử Text bên trong delegate.

55
00:02:46,510 --> 00:02:49,930
Trông nó sẽ thế này.

56
00:02:49,930 --> 00:02:52,989
Ta muốn làm cho nó click vào được.

57
00:02:52,989 --> 00:02:56,739
Ta cũng sẽ truy cập phần tử dữ liệu
của delegate này

58
00:02:56,739 --> 00:02:59,560
bằng cách dùng "modelData" role,

59
00:02:59,560 --> 00:03:02,560
và ta đã từng xem trong bài ListView and

60
00:03:02,560 --> 00:03:05,910
Listmodel. Nếu ta chạy thử,

61
00:03:05,910 --> 00:03:09,010
ta sẽ thấy thấy các con số hiển thị

62
00:03:09,010 --> 00:03:14,349
từ 0 đến 9, và hiển thị của các phần tử

63
00:03:14,349 --> 00:03:17,349
được kiểm soát tại delegate này.

64
00:03:17,349 --> 00:03:19,180
Đây chính là cách làm việc với repeater.

65
00:03:19,180 --> 00:03:21,489
Ta không có những thứ phức tạp

66
00:03:21,489 --> 00:03:24,280
bên trong, và khi tạo

67
00:03:24,280 --> 00:03:26,109
model thế này, ta sẽ có

68
00:03:26,109 --> 00:03:28,599
các con số từ 0 tới 9,

69
00:03:28,599 --> 00:03:31,450
và Repeater sẽ hiển thị

70
00:03:31,450 --> 00:03:34,090
các số nguyên đo,

71
00:03:34,090 --> 00:03:37,000
bắt đầu từ số 0. Ta sẽ có các số

72
00:03:37,000 --> 00:03:41,380
từ 0 tới 9, tổng cộng là 10 phần tử.

73
00:03:41,380 --> 00:03:44,799
Ta sẽ chú thích model này lại
và tạo model mới với tên các tháng

74
00:03:44,799 --> 00:03:47,319
như đã làm trong

75
00:03:47,319 --> 00:03:50,919
các bài giảng trước.
Và khi chạy thử,

76
00:03:50,919 --> 00:03:56,620
nó sẽ hoạt động tương tự.

77
00:03:56,620 --> 00:03:59,049
Đây là những gì ta có,
và đây chính là cách

78
00:03:59,049 --> 00:04:02,200
dùng với Repeater. Bôi đen nó,

79
00:04:02,200 --> 00:04:05,260
nhấn F1 để xem

80
00:04:05,260 --> 00:04:08,049
tài liệu viết gì về Repeater.

81
00:04:08,049 --> 00:04:10,120
Repeater được sử dụng để tạo ra

82
00:04:10,120 --> 00:04:13,120
một số lượng lớn các phần tử tương tự nhau.
Cũng giống các kiểu view khác,

83
00:04:13,120 --> 00:04:15,040
Repeater cũng có một model và một delegate. Mỗi

84
00:04:15,040 --> 00:04:17,738
phần tử trong model sẽ được hiển thị dựa trên delegate.

85
00:04:17,738 --> 00:04:20,649
Delegate hiển thị mỗi phần tử

86
00:04:20,649 --> 00:04:23,229
trong dữ liệu từ model.

87
00:04:23,229 --> 00:04:24,410
Vậy nên dữ liệu sẽ bắt nguồn từ

88
00:04:24,410 --> 00:04:27,800
model. Repeater thường chứa

89
00:04:27,800 --> 00:04:29,750
các thành phần như hàng hoặc cột

90
00:04:29,750 --> 00:04:33,170
để hiển thị các phần tử

91
00:04:33,170 --> 00:04:35,660
được tạo ra bởi repeater.

92
00:04:35,660 --> 00:04:36,530
Repeater

93
00:04:36,530 --> 00:04:39,590
về cơ bản sẽ lặp lại dữ liệu.
Nếu đặt giá trị bằng 3,

94
00:04:39,590 --> 00:04:41,630
nó sẽ lặp lại các con số từ 0

95
00:04:41,630 --> 00:04:45,380
tới 2, và ta cần xác định

96
00:04:45,380 --> 00:04:47,800
các dữ liệu này sẽ hiển thị thế nào

97
00:04:47,800 --> 00:04:51,170
nhờ delegate. Hi vọng là dễ hiểu.

98
00:04:51,170 --> 00:04:53,570
Bạn cũng có thể đặt model cho nó,

99
00:04:53,570 --> 00:04:55,790
và ở đây, bạn sẽ thấy có nhiều nội dung

100
00:04:55,790 --> 00:04:58,310
để xem nếu cần biết thêm

101
00:04:58,310 --> 00:05:01,340
về thành phần repeater này. Và nếu

102
00:05:01,340 --> 00:05:02,930
click vào phần tử nào đó, nó sẽ in ra

103
00:05:02,930 --> 00:05:05,360
phần tử đó. Hãy chạy lại,

104
00:05:05,360 --> 00:05:07,480


105
00:05:07,600 --> 00:05:10,550
bạn click vào April thì sẽ thấy April.

106
00:05:10,550 --> 00:05:13,280
Nhấn click September thì sẽ thấy September.

107
00:05:13,280 --> 00:05:15,350
Bài giảng tới đây là hết.

108
00:05:15,350 --> 00:05:16,820
Ở bài sau, ta sẽ tìm hiểu

109
00:05:16,820 --> 00:05:20,150
cách thêm và xóa dữ liệu một cách động

110
00:05:20,150 --> 00:00:00,000
trong model. Hẹn gặp lại.

