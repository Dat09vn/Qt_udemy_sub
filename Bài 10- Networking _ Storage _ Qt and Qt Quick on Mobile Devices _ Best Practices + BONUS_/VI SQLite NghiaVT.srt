1
00:00:00,000 --> 00:00:01,709
Trong bài này, ta sẽ học về

2
00:00:01,709 --> 00:00:04,710
cách sử dụng SQLite trong ứng dụng qml.

3
00:00:04,710 --> 00:00:07,799
SQLite cho phép bạn lưu

4
00:00:07,799 --> 00:00:10,110
dữ liệu trong một cơ sở dữ liệu có sẵn

5
00:00:10,110 --> 00:00:12,330
trong máy bạn, bạn không cần

6
00:00:12,330 --> 00:00:14,730
tạo thêm cơ sở dữ liệu hay

7
00:00:14,730 --> 00:00:16,949
kết nối gì đặc biệt cả. Bạn chỉ cần dùng

8
00:00:16,949 --> 00:00:18,720
cái có sẵn trong máy,

9
00:00:18,720 --> 00:00:20,939
bạn chỉ cần tạo

10
00:00:20,939 --> 00:00:24,210
cơ sở dữ liệu và tạo bảng, làm được

11
00:00:24,210 --> 00:00:26,490
đủ thứ. Ta sẽ vào

12
00:00:26,490 --> 00:00:28,949
Qt Creator để thử với Qt Quick.

13
00:00:28,949 --> 00:00:31,650
Vào Qt Creator đây rồi. Ta

14
00:00:31,650 --> 00:00:33,600
sẽ tạo một project Qt

15
00:00:33,600 --> 00:00:37,110
Quick, chọn qt application, đặt tên

16
00:00:37,110 --> 00:00:39,450
nó là SQLiteDemo, lưu nó vào

17
00:00:39,450 --> 00:00:43,820
chỗ thông thường, nhấn next, chọn phiên bản Qt,

18
00:00:43,820 --> 00:00:48,420
chọn kit, và finish. We cần

19
00:00:48,420 --> 00:00:52,879
sửa chỗ này thành SQLiteDemo.

20
00:00:52,879 --> 00:00:55,890
Ta sẽ viết import ở đây, bạn

21
00:00:55,890 --> 00:00:58,109
nhớ không, ta cần import Qt Quick

22
00:00:58,109 --> 00:01:00,559
local storage để làm việc với

23
00:01:00,559 --> 00:01:05,010
cơ sở dữ liệu SQLite, nên ta viết import

24
00:01:05,010 --> 00:01:10,229
QtQuick.LocalStorage 2.0. Ta cũng cần

25
00:01:10,229 --> 00:01:13,320
import cả QtQuick.Dialogs nữa vì ta

26
00:01:13,320 --> 00:01:15,720
sẽ dùng dialog để chọn

27
00:01:15,720 --> 00:01:18,990
màu sắc. Viết vào đây. 	Ta sẽ

28
00:01:18,990 --> 00:01:21,659
làm giống hệt như từng làm với

29
00:01:21,659 --> 00:01:23,700
settings vậy, ta sẽ lưu vị trí của

30
00:01:23,700 --> 00:01:25,590
cửa sổ ứng dụng vào, và màu sắc của nó nữa,

31
00:01:25,590 --> 00:01:27,780
nhưng lần này ta sẽ lưu vào một

32
00:01:27,780 --> 00:01:30,479
cơ sở dữ liệu SQLite. Ta đặt vào một

33
00:01:30,479 --> 00:01:34,170
component Rectable. Id sẽ là

34
00:01:34,170 --> 00:01:37,470
contained... Cái này sẽ fill

35
00:01:37,470 --> 00:01:41,460
parent của nó, và sẽ mặc định là màu đỏ.

36
00:01:41,460 --> 00:01:44,970
Ta chọn màu đỏ. Ở trong này ta sẽ

37
00:01:44,970 --> 00:01:47,670
có một mouse area, bởi vì ta muốn

38
00:01:47,670 --> 00:01:50,130
cho người dùng click chuột vào để chọn

39
00:01:50,130 --> 00:01:53,250
màu của Window này trong một

40
00:01:53,250 --> 00:01:56,310
dialog. Mouse area sẽ fill

41
00:01:56,310 --> 00:02:00,509
parent của nó, và khi được click vào, ta sẽ

42
00:02:00,509 --> 00:02:02,640
làm gì đó... Trong mouse area, ta cần

43
00:02:02,640 --> 00:02:05,490
đặt vào một dialog... ctrl A ctrl I

44
00:02:05,490 --> 00:02:08,128
để chỉnh hàng... không có gì đặc biệt cả, toàn

45
00:02:08,128 --> 00:02:10,709
những gì ta đã từng làm rồi. Ta có một

46
00:02:10,709 --> 00:02:13,210
dialog, nó có một id,

47
00:02:13,210 --> 00:02:16,360
ta có thể chấp nhận giá trị của dialog, hoặc có thể

48
00:02:16,360 --> 00:02:19,150
bỏ nó đi. Khi ta click vào mouse

49
00:02:19,150 --> 00:02:21,310
area, ta mở dialog lên. Ta sẽ

50
00:02:21,310 --> 00:02:30,010
viết color... open... thế này.

51
00:02:30,010 --> 00:02:32,980
Ta cũng cần đặt id cho Window này,

52
00:02:32,980 --> 00:02:35,710
ta sẽ đặt nó là rootId,

53
00:02:35,710 --> 00:02:38,860
thế là được. Giờ ta có thể

54
00:02:38,860 --> 00:02:40,870
chạy ứng dụng và có thể

55
00:02:40,870 --> 00:02:43,660
thay đổi màu sắc của hình chữ nhận mà

56
00:02:43,660 --> 00:02:47,650
sẽ fill cửa sổ ứng dụng này. Hãy kiểm tra lại Id...

57
00:02:47,650 --> 00:02:52,900
Đúng rồi. Chạy nào. Okay, đây là

58
00:02:52,900 --> 00:02:55,210
ứng dụng của ta. Hình chữ nhật này màu đỏ

59
00:02:55,210 --> 00:02:57,280
theo mặc định, nếu bạn click vào trong, bạn thấy một

60
00:02:57,280 --> 00:03:00,310
dialog thế này để bạn chọn màu sắc. Ta

61
00:03:00,310 --> 00:03:02,440
có thể click trong này để chọn một màu hoặc

62
00:03:02,440 --> 00:03:06,010
di thanh kéo này để chọn

63
00:03:06,010 --> 00:03:09,250
các màu. Hãy chọn màu

64
00:03:09,250 --> 00:03:12,040
xanh lá này, nhấn Ok, bạn thấy

65
00:03:12,040 --> 00:03:16,690
màu đó rồi. Nếu ta tắt đi bật lại,

66
00:03:16,690 --> 00:03:21,370
vị trí và màu bị mất rồi. Ta tắt đi

67
00:03:21,370 --> 00:03:23,530
bật lại, bạn thấy nó lại

68
00:03:23,530 --> 00:03:26,200
vào giữa, lại lấy giá trị mặc định. Ta cần

69
00:03:26,200 --> 00:03:29,020
thay đổi cái này đi, ta cần lưu

70
00:03:29,020 --> 00:03:31,660
vị trí X Y của cửa sổ, ta càn

71
00:03:31,660 --> 00:03:33,910
lưu chiều rộng và chiều cao, và cần

72
00:03:33,910 --> 00:03:37,150
lưu màu ở trong nữa... tất cả với

73
00:03:37,150 --> 00:03:39,910
SQLite. Giờ ta làm việc với

74
00:03:39,910 --> 00:03:42,610
JavaScript khá nhiều, nên ta nên

75
00:03:42,610 --> 00:03:46,090
tạo một tệp JavaScript ở ngoài,

76
00:03:46,090 --> 00:03:48,280
viết trong đó, và import nó

77
00:03:48,280 --> 00:03:50,650
và gọi hàm để làm những việc phức tạp hơn

78
00:03:50,650 --> 00:03:54,130
trong này. Ta vào qrc

79
00:03:54,130 --> 00:03:59,050
này, thêm một tệp JS, tức là

80
00:03:59,050 --> 00:04:02,200
một tệp JavaScript, chọn này cái,

81
00:04:02,200 --> 00:04:08,310
đặt tên là Database, chọn next, và

82
00:04:08,310 --> 00:04:13,330
finish, vả bỏ đoạn này đi. Ta cần

83
00:04:13,330 --> 00:04:16,269
quay lại main.qml, và đặt vào

84
00:04:16,269 --> 00:04:18,310
một property cho cơ sở dữ liệu này, ta viết

85
00:04:18,310 --> 00:04:22,000
property... var... nó sẽ là một var,

86
00:04:22,000 --> 00:04:25,000
gọi là db, và sẽ không

87
00:04:25,000 --> 00:04:26,280
mang giá trị

88
00:04:26,280 --> 00:04:28,470
mặc định nào. Ta quay lại

89
00:04:28,470 --> 00:04:32,550
JavaScript và tạo một hàm, gọi

90
00:04:32,550 --> 00:04:37,650
là dbInit để khởi tạo cơ sở dữ liệu.

91
00:04:37,650 --> 00:04:41,660
Đầu tiên ta sẽ console.log

92
00:04:42,200 --> 00:04:48,810
Initialize... Tiếp theo ta sẽ mở

93
00:04:48,810 --> 00:04:50,610
cở sở dữ liệu... Tôi đặt vào một

94
00:04:50,610 --> 00:04:53,520
câu... ta định nghĩa db ở trong tệp main.qml,

95
00:04:53,520 --> 00:04:56,010
và ta sẽ gọi

96
00:04:56,010 --> 00:04:59,820
tệp JavaScript này để làm việc với nó

97
00:04:59,820 --> 00:05:03,210
như là nó được định nghĩa trong này, ta

98
00:05:03,210 --> 00:05:05,040
sẽ làm việc được ở

99
00:05:05,040 --> 00:05:07,770
đây, nên là biến db này sẽ

100
00:05:07,770 --> 00:05:10,590
sử dụng được trong hàm này. Giờ

101
00:05:10,590 --> 00:05:12,930
ta mở cơ sở dữ liệ rồi, đây là

102
00:05:12,930 --> 00:05:15,990
tên cở sở dữ liệu, đây là phiên bản, đây

103
00:05:15,990 --> 00:05:19,140
là mô tả của cơ sở dữ liệu, và

104
00:05:19,140 --> 00:05:21,930
đây là kích thước dữ kiến

105
00:05:21,930 --> 00:05:24,750
của cơ sở dữ liệu tính bằng byte, ta đã nói về cái này trong

106
00:05:24,750 --> 00:05:27,240
bài giới thiệu của chương

107
00:05:27,240 --> 00:05:29,880
này rồi. Sau khi mở cơ sở dữ liệu...

108
00:05:29,880 --> 00:05:32,010
à còn nữa, đoạn này sẽ tạo

109
00:05:32,010 --> 00:05:34,380
một cơ sở dữ liệu mới nếu chưa có, còn nếu

110
00:05:34,380 --> 00:05:36,479
có rồi thì mới

111
00:05:36,479 --> 00:05:39,090
mở. Xong đoạn này rồi, bạn cần chạy

112
00:05:39,090 --> 00:05:41,640
một lệnh. Lệnh ta sẽ

113
00:05:41,640 --> 00:05:44,580
chạy là để tạo một bảng nếu

114
00:05:44,580 --> 00:05:45,900
chưa có bảng nào cả.

115
00:05:45,900 --> 00:05:49,800
Đây là một câu SQL bình thường, không có gì

116
00:05:49,800 --> 00:05:51,750
đặc biệt cả, ta tạo một bảng

117
00:05:51,750 --> 00:05:55,140
gọi là sqlitedemotable, có 2

118
00:05:55,140 --> 00:05:57,539
trường, name và value,

119
00:05:57,539 --> 00:06:00,690
thuộc kiểu dữ liệu text. Giờ bạn

120
00:06:00,690 --> 00:06:02,850
đã có một cơ sở dữ liệu và một bảng

121
00:06:02,850 --> 00:06:05,669
sử dụng được trong ứng dụng rồi.

122
00:06:05,669 --> 00:06:08,460
Ta có thể lưu hoặc đọc dữ liệu trong đó.

123
00:06:08,460 --> 00:06:11,550
Giờ ta cần lưu thông tin về

124
00:06:11,550 --> 00:06:14,280
tọa độ x và y của Window này, rootId

125
00:06:14,280 --> 00:06:18,000
là id ta cần dùng, ta cũng cần

126
00:06:18,000 --> 00:06:19,440
lấy thông tin chiều rộng và

127
00:06:19,440 --> 00:06:21,660
chiều cao của Window nữa, ta cần

128
00:06:21,660 --> 00:06:23,640
lưu màu sắc mà người dùng chọn nữa,

129
00:06:23,640 --> 00:06:26,430
để lần sau khi người dùng bật

130
00:06:26,430 --> 00:06:29,100
ứng dụng lên, Rectangle này sẽ hiển thị

131
00:06:29,100 --> 00:06:33,210
màu nền được chọn đó. Ta sẽ

132
00:06:33,210 --> 00:06:35,130
định nghĩa hàm đó để

133
00:06:35,130 --> 00:06:38,599
lưu dữ liệu... function...

134
00:06:39,150 --> 00:06:41,620
Hàm này sẽ không nhận vào parameter nào

135
00:06:41,620 --> 00:06:43,630
vì nó sẽ làm việc với dữ liệu

136
00:06:43,630 --> 00:06:46,660
có trong tệp qml này đây. Ta

137
00:06:46,660 --> 00:06:49,480
sẽ console.log báo rằng ta đang lưu

138
00:06:49,480 --> 00:06:53,350
dữ liệu... copy đoạn đó, đặt vào đây và viết

139
00:06:53,350 --> 00:07:03,040
"Storing data"... và kiểm tra xem

140
00:07:03,040 --> 00:07:05,980
db này có được khởi tạo chưa.

141
00:07:05,980 --> 00:07:11,460
Để kiểm tra thì ta viết... if(!db)...

142
00:07:11,460 --> 00:07:15,010
return... okay, nếu cơ sở dữ liệu này chưa

143
00:07:15,010 --> 00:07:17,470
được tạo thì ta kết thúc hàm này luôn,

144
00:07:17,470 --> 00:07:19,240
không làm gì nữa cả, vì sẽ

145
00:07:19,240 --> 00:07:21,700
chỉ gặp lỗi thôi nếu ta cứ cố làm việc

146
00:07:21,700 --> 00:07:24,430
với một cơ sở dữ liệu không tồn tại hay là

147
00:07:24,430 --> 00:07:27,220
chưa được khởi tạo tử tế. Ta cần đặt

148
00:07:27,220 --> 00:07:29,500
dấu chấm phẩy vào đây. Tiếp theo ta sẽ đặt một

149
00:07:29,500 --> 00:07:31,600
lệnh để lưu

150
00:07:31,600 --> 00:07:34,450
dữ liệu vào cơ sở dữ liệu. Ta sẽ

151
00:07:34,450 --> 00:07:41,170
viết transaction(function(TX)), trong này ta

152
00:07:41,170 --> 00:07:43,480
sẽ nhập vào phần thây của

153
00:07:43,480 --> 00:07:46,180
hàm, và ta đặt một dấu chấm phẩy

154
00:07:46,180 --> 00:07:49,750
ở cuối, và việt cái này ở

155
00:07:49,750 --> 00:07:52,360
dòng khá cho dễ

156
00:07:52,360 --> 00:07:54,730
nhìn. Trong này, ta sẽ

157
00:07:54,730 --> 00:07:57,040
cập nhật dữ liệu ở trong

158
00:07:57,040 --> 00:07:59,410
bảng này, nếu là có dữ liệu rồi, hoặc

159
00:07:59,410 --> 00:08:02,320
là đặt dữ liệu mới vào nếu

160
00:08:02,320 --> 00:08:05,020
chưa có gì cả. Việc

161
00:08:05,020 --> 00:08:06,730
đầu tiên ta cần làm là kiểm tra

162
00:08:06,730 --> 00:08:11,200
xem đã có thông tin gì về sqlitedemo

163
00:08:11,200 --> 00:08:13,360
trong bảng này chưa. Để kiểm tra thì ta

164
00:08:13,360 --> 00:08:20,140
viết var result = tx...

165
00:08:20,140 --> 00:08:22,870
câu lệnh này, tức là parameter

166
00:08:22,870 --> 00:08:29,260
của ta... ta viết executeSql(), trong này ta

167
00:08:29,260 --> 00:08:32,409
nhập vào câu SQL. Ta sẽ

168
00:08:32,409 --> 00:08:35,650
lấy tất cả từ bảng này với điều kiện

169
00:08:35,650 --> 00:08:40,360
name bằng sqlitedemo, tôi sẽ

170
00:08:40,360 --> 00:08:42,039
copy query này vào vì tôi

171
00:08:42,039 --> 00:08:43,840
không muỗn phải gõ... select

172
00:08:43,840 --> 00:08:47,530
tất cả từ bảng này với điều kiệm

173
00:08:47,530 --> 00:08:49,800
name bằng sqlitedemo.

174
00:08:49,800 --> 00:08:52,470
Bạn xem bảng mà ta đang

175
00:08:52,470 --> 00:08:54,870
tạo đây, bạn thấy dữ liệu

176
00:08:54,870 --> 00:08:57,720
trong này, tên nó là

177
00:08:57,720 --> 00:09:00,089
sqlitedemo. Đó là cái ta cần kiểm tra, tôi cho

178
00:09:00,089 --> 00:09:02,070
bạn xem để thấy ta đang cần

179
00:09:02,070 --> 00:09:04,560
kiểm tra cái gì đó. Tôi lai nhớ ra cũng

180
00:09:04,560 --> 00:09:06,870
cần cho bạn xem cách tìm

181
00:09:06,870 --> 00:09:09,329
địa chỉ của cơ sở dữ liệu này nữa, ta sẽ

182
00:09:09,329 --> 00:09:12,720
làm việc đó sau, còn giờ xong việc này đã, ok.

183
00:09:12,720 --> 00:09:14,760
Ta có kết quả result đây rồi, ta

184
00:09:14,760 --> 00:09:17,190
sẽ kiểm tra xem

185
00:09:17,190 --> 00:09:21,120
có nội dung gì trong này không, nếu

186
00:09:21,120 --> 00:09:23,310
có rồi thì ta sẽ cập nhật

187
00:09:23,310 --> 00:09:26,430
thông tin đó với thông tín nới, còn nếu

188
00:09:26,430 --> 00:09:27,870
chưa có thì ta sẽ viết

189
00:09:27,870 --> 00:09:30,420
thông tin mới toanh vào

190
00:09:30,420 --> 00:09:33,089
đây. Trước khi làm việc đó, ta cần

191
00:09:33,089 --> 00:09:36,089
chuẩn bị dữ liệu json để

192
00:09:36,089 --> 00:09:38,700
viết vào cơ sở dữ liệu đã.

193
00:09:38,700 --> 00:09:47,070
Việc này thực ra rất đơn giản, bạn chỉ cần

194
00:09:47,070 --> 00:09:50,279
lấy dữ liệu từ componenet qml, thông tin về

195
00:09:50,279 --> 00:09:53,519
tọa độ x, tọa độ y, chiều rộng và

196
00:09:53,519 --> 00:09:56,310
chiều cao, lấy thông tin đó, và đặt

197
00:09:56,310 --> 00:09:58,470
nó vào một đối tượng JSON mà ta định nghĩa

198
00:09:58,470 --> 00:10:01,890
ở đây, ok. Bạn thấy ta có x là

199
00:10:01,890 --> 00:10:05,730
tọa độ xủa cửa sổ gốc, y là

200
00:10:05,730 --> 00:10:07,560
tọa độ y, có width và height,

201
00:10:07,560 --> 00:10:11,760
có cả màu sắc của

202
00:10:11,760 --> 00:10:14,160
Rectangle. Ta nhận

203
00:10:14,160 --> 00:10:17,190
tỉ lệ màu Red Green và BLue, và ta

204
00:10:17,190 --> 00:10:19,500
đặt cái này vào một đối tượng JSON

205
00:10:19,500 --> 00:10:22,740
gọi là obj. Cái này sẽ được

206
00:10:22,740 --> 00:10:25,200
lưu vào cơ sở dữ liệu. Giờ ta cần xem

207
00:10:25,200 --> 00:10:28,079
số hàng mà ta nhận được

208
00:10:28,079 --> 00:10:31,470
từ câu SQL này. Cái này sẽ trả về

209
00:10:31,470 --> 00:10:33,959
số hàng lấy được từ

210
00:10:33,959 --> 00:10:38,600
kết quả cái này, ta viết

211
00:10:38,600 --> 00:10:46,350
if(result.rows.length===1)... nếu điều kiện

212
00:10:46,350 --> 00:10:49,230
này đúng, tức là đã có dữ liệu trong này rồi và

213
00:10:49,230 --> 00:10:51,690
chỉ cần cập nhật dữ liệu đó, nên ta

214
00:10:51,690 --> 00:10:55,500
sẽ update. Nếu length không

215
00:10:55,500 --> 00:10:59,010
phải 1, tức là bằng 0 thì tức là ta không tìm ra

216
00:10:59,010 --> 00:10:59,699
kết quả nào

217
00:10:59,699 --> 00:11:02,489
trong cơ sở dữ liệu ta, và ta sẽ tạo

218
00:11:02,489 --> 00:11:05,999
một dòng mới, ta sẽ tạo ở

219
00:11:05,999 --> 00:11:09,449
đây. Ở đây ta viết

220
00:11:09,449 --> 00:11:19,970
console.log("Updating database table..."), còn ở đây

221
00:11:19,970 --> 00:11:29,579
console.log("Creating new database table...").

222
00:11:29,579 --> 00:11:32,429
Ở đây ta đang làm

223
00:11:32,429 --> 00:11:34,799
y như ở đây, nên ta sẽ

224
00:11:34,799 --> 00:11:38,879
copy đoạn này vì tôi

225
00:11:38,879 --> 00:11:40,859
không muốn phải gõ hết,

226
00:11:40,859 --> 00:11:44,850
tôi lười gõ lắm, và ta sẽ

227
00:11:44,850 --> 00:11:47,759
viết một câu để update dữ liệu. Ở đây

228
00:11:47,759 --> 00:11:50,040
ta cũng sẽ làm tương tự, ta

229
00:11:50,040 --> 00:11:52,079
việt một câu để tạo

230
00:11:52,079 --> 00:11:54,509
dòng dữ liệu mới. Câu để update

231
00:11:54,509 --> 00:11:57,059
sẽ như thế này, không có gì

232
00:11:57,059 --> 00:11:59,749
ghê gớm cả nếu bạn biết dùng sql,

233
00:11:59,749 --> 00:12:03,749
update cái bảng, dặt giá trị, giá trị

234
00:12:03,749 --> 00:12:06,299
là 1... giá trị mà ta muốn đặt, giá trị của

235
00:12:06,299 --> 00:12:10,439
sqlitedemo, và ta đặt nó là

236
00:12:10,439 --> 00:12:13,259
già trị mà ta nhập vào ở đây, và

237
00:12:13,259 --> 00:12:15,209
ta lấy cái obj này, biến nó

238
00:12:15,209 --> 00:12:17,399
thành 1 string để có thể lưu vào trong

239
00:12:17,399 --> 00:12:20,639
cơ sở dữ liệu. Bạn dùng JSON.stringify, đây

240
00:12:20,639 --> 00:12:23,399
là một hàm JavaScript,

241
00:12:23,399 --> 00:12:25,199
bạn có thể tìm hiểu thêm trong tài liệu trên mạng

242
00:12:25,199 --> 00:12:27,449
để xem công dụng của nó, đại khái nó biến

243
00:12:27,449 --> 00:12:30,149
JSON thành 1 string. Ok, thế này được,

244
00:12:30,149 --> 00:12:32,639
là ta có thể update cơ sở dữ liệu với dữ liệu

245
00:12:32,639 --> 00:12:35,579
mới rồi. Ta sẽ tạo dòng dữ liệu mới nếu

246
00:12:35,579 --> 00:12:37,739
chưa có dòng nào cả, nên ta sẽ

247
00:12:37,739 --> 00:12:40,859
dùng lệnh insert, ta sẽ insert

248
00:12:40,859 --> 00:12:43,439
vào bảng này những giá trị mà ta sẽ

249
00:12:43,439 --> 00:12:47,459
đặt vào trong dấu hỏi chấm này đây,

250
00:12:47,459 --> 00:12:50,189
và những giá trị để đặt vào đó sẽ là

251
00:12:50,189 --> 00:12:53,459
tên của dữ liệu và giá trị dữ liệu đó,

252
00:12:53,459 --> 00:12:55,919
giá trị sẽ là json.stringify

253
00:12:55,919 --> 00:12:58,529
với đối tượng ở đây.

254
00:12:58,529 --> 00:13:01,289
Thế này là đủ, là ta đã có thể lưu

255
00:13:01,289 --> 00:13:04,259
dữ liệu vào cơ sở dữ liệu rồi, ok. Nếu bạn

256
00:13:04,259 --> 00:13:06,600
chưa hiểu thì cứ dành chút thời gian ra nhìn

257
00:13:06,600 --> 00:13:09,089
lại, cũng khá dễ hiểu mà.

258
00:13:09,089 --> 00:13:11,710
Lí do duy nhất có thể khiến bạn

259
00:13:11,710 --> 00:13:14,200
thấy đoạn này khó hiểu là nếu bạn

260
00:13:14,200 --> 00:13:16,990
chưa rành sqlite, và bạn có thể

261
00:13:16,990 --> 00:13:19,470
tìm kiếm hướng dẫn về sqlite

262
00:13:19,470 --> 00:13:21,580
trên mạng

263
00:13:21,580 --> 00:13:24,010
để hiểu thêm về nội dung ta đang học

264
00:13:24,010 --> 00:13:27,340
đây. Giờ ta lưu dữ liệu được rồi,

265
00:13:27,340 --> 00:13:29,560
ta sẽ cần đọc dữ liệu nữa. Ta sẽ

266
00:13:29,560 --> 00:13:33,340
định nghĩa một hàm mới gọi là

267
00:13:33,340 --> 00:13:40,870
readData... function readDate(), cái này sẽ không

268
00:13:40,870 --> 00:13:42,880
nhận parameter nào, nó sẽ

269
00:13:42,880 --> 00:13:44,740
làm việc thẳng với dữ liệu ta có

270
00:13:44,740 --> 00:13:47,950
trong tệp qml. Đoạn đầu sẽ

271
00:13:47,950 --> 00:13:50,020
giống hệt như trước, ta có thể copy đoạn này

272
00:13:50,020 --> 00:13:54,100
và đặt vào hàm mới, để

273
00:13:54,100 --> 00:13:56,320
khỏi phải gõ đoạn này.

274
00:13:56,320 --> 00:13:59,560
Ta sửa thành "Reading data...". Ta

275
00:13:59,560 --> 00:14:01,480
kiểm tra xem cơ sở dữ liệu

276
00:14:01,480 --> 00:14:03,850
có tồn tại không, nếu không

277
00:14:03,850 --> 00:14:05,500
thì trả về ra khỏi

278
00:14:05,500 --> 00:14:08,230
hàm này luôn. Tiếp theo ta thực hiện

279
00:14:08,230 --> 00:14:10,450
một lệnh lên db, sẽ

280
00:14:10,450 --> 00:14:12,460
giống hệt như ta làm ở đây, nên ta có thể

281
00:14:12,460 --> 00:14:15,520
copy và paste đoạn này vào đây,

282
00:14:15,520 --> 00:14:17,830
bỏ phần trong ra,

283
00:14:17,830 --> 00:14:20,800
vì nội dung ở trong sẽ khác

284
00:14:20,800 --> 00:14:22,870
hẳn. Ta sẽ đọc dữ liệu

285
00:14:22,870 --> 00:14:25,600
từ cơ sở dữ liệu. Ta viết ở đây

286
00:14:25,600 --> 00:14:32,530
"Reading data". Ta cần lấy

287
00:14:32,530 --> 00:14:35,590
tất cả dữ liệu từ cơ sở dữ liệu với điều kiện

288
00:14:35,590 --> 00:14:39,580
name bằng sqlitedemo, đó

289
00:14:39,580 --> 00:14:42,520
là việc ta cần làm, và ta cần

290
00:14:42,520 --> 00:14:44,980
kiểm tra xem có ra kết quả nào

291
00:14:44,980 --> 00:14:46,690
từ cơ sở dữ liệu này không, để biết xem

292
00:14:46,690 --> 00:14:53,620
có dữ liệu để mà dùng không. Giờ

293
00:14:53,620 --> 00:14:55,690
ta cần phải lấy dữ liệu nhận được

294
00:14:55,690 --> 00:14:57,580
từ cơ sở dữ liệu đó, và biến nó thành

295
00:14:57,580 --> 00:15:00,910
một đối tượng JSON để có thể

296
00:15:00,910 --> 00:15:03,970
sử dụng trong code qml.

297
00:15:03,970 --> 00:15:06,160
Để làm việc đó, bạn lấy dòng đầu tiên

298
00:15:06,160 --> 00:15:08,650
từ kết quả mà bạn nhận được từ

299
00:15:08,650 --> 00:15:11,110
cơ sở dữ liệu, lấy giá trị của nó,

300
00:15:11,110 --> 00:15:14,440
bạn sẽ có một giá trị kiểu string,

301
00:15:14,440 --> 00:15:16,810
và biến nó thành một

302
00:15:16,810 --> 00:15:19,990
đối tượng json bằng cách gọi hàm

303
00:15:19,990 --> 00:15:22,600
JSON.parse và nhập cái giá trị string

304
00:15:22,600 --> 00:15:24,860
đó vào. Giờ ta đã có

305
00:15:24,860 --> 00:15:26,810
một đối tượng để đọc rồi.

306
00:15:26,810 --> 00:15:29,840
Giờ ta có đối tượng JSON này rồi, ta

307
00:15:29,840 --> 00:15:32,030
có thể đọc dữ liệu đó trong qml

308
00:15:32,030 --> 00:15:34,970
properties. Ta viết rootId.x =

309
00:15:34,970 --> 00:15:37,490
obj.x. Nhớ rằng khi ta lưu

310
00:15:37,490 --> 00:15:40,730
dữ liệu, ta đặt dữ liệu đó vào một đối tượng JSON

311
00:15:40,730 --> 00:15:43,540
với những thuộc tính này: có x, y,

312
00:15:43,540 --> 00:15:47,990
width, height, màu red, green,

313
00:15:47,990 --> 00:15:50,420
blue, và bạn thấy ta đang đọc

314
00:15:50,420 --> 00:15:52,730
thông tin với đúng những thuộc tính

315
00:15:52,730 --> 00:15:55,460
như lúc lưu dữ liệu đấy. Cái này rất

316
00:15:55,460 --> 00:15:58,250
quan trọng, về nếu không đúng như thế,

317
00:15:58,250 --> 00:16:00,740
máy sẽ không hiểu bạn

318
00:16:00,740 --> 00:16:03,110
đang muốn đọc cái gì từ cơ sở dữ liệu. Hãy

319
00:16:03,110 --> 00:16:05,510
cẩn thận với cái này. Bây giờ, khi bạn

320
00:16:05,510 --> 00:16:08,510
gọi hàm readData, bạn sẽ

321
00:16:08,510 --> 00:16:10,280
đọc dữ liệu từ cơ sở dữ liệu và

322
00:16:10,280 --> 00:16:13,430
nhét nó vào component qml. Ta

323
00:16:13,430 --> 00:16:15,650
lưu thông tin về vị trí và kích thước

324
00:16:15,650 --> 00:16:17,840
của cửa sổ ứng dụng, và ta

325
00:16:17,840 --> 00:16:19,820
lưu cả màu nền của

326
00:16:19,820 --> 00:16:22,340
hình chữ nhật ở trong. Việc còn lại là

327
00:16:22,340 --> 00:16:25,490
vào tẹp qml này và import

328
00:16:25,490 --> 00:16:27,680
tệp JavaScript, bạn biết cách

329
00:16:27,680 --> 00:16:30,380
làm rồi đấy. Ta vào đây và viết

330
00:16:30,380 --> 00:16:37,280
import "Database.js", ta import

331
00:16:37,280 --> 00:16:40,280
cái đó as... cái gì đó... bạn đặt

332
00:16:40,280 --> 00:16:42,500
tên mà bạn muốn dùng ở đây

333
00:16:42,500 --> 00:16:44,810
để gọi hàm. Giờ ta cần

334
00:16:44,810 --> 00:16:46,910
đi xuốn cuối Window này và viết

335
00:16:46,910 --> 00:16:54,020
Component.onCompleted... ta sẽ làm

336
00:16:54,020 --> 00:16:58,760
gì đó, và viết Component.onDestruction...

337
00:16:58,760 --> 00:17:03,250
ta sẽ làm gì đó.

338
00:17:03,250 --> 00:17:05,960
onCompleted tức là khi cửa sổ này

339
00:17:05,960 --> 00:17:09,109
được tải vào bộ nhớ trong máy, thì ta sẽ

340
00:17:09,109 --> 00:17:11,390
làm gì đó, ta sẽ đọc dữ liệu

341
00:17:11,390 --> 00:17:15,560
và đặt nó vào

342
00:17:15,560 --> 00:17:17,410
qml properties ở đây, ta sẽ đặt

343
00:17:17,410 --> 00:17:20,750
vị trí và kích thước, ta cũng

344
00:17:20,750 --> 00:17:24,260
sẽ đặt màu cái này, okay.

345
00:17:24,260 --> 00:17:26,390
Đây là cách để đọc dữ liệu, và ta có thể

346
00:17:26,390 --> 00:17:30,590
viết JS.readData() như thế này. Nhưng

347
00:17:30,590 --> 00:17:32,120
trước khi đọc dữ liệu, ta cần

348
00:17:32,120 --> 00:17:34,790
khởi tạo cơ sở dữ liệu đa. Ta

349
00:17:34,790 --> 00:17:36,940
viết JS.dbInit()...

350
00:17:36,940 --> 00:17:40,870
Tôi suýt quên cái đó,

351
00:17:40,870 --> 00:17:41,680
xin lỗi.

352
00:17:41,680 --> 00:17:44,170
Khi component này kết thúc,

353
00:17:44,170 --> 00:17:46,480
ta sẽ lưu dữ liệu lại, ta

354
00:17:46,480 --> 00:17:47,590
viết

355
00:17:47,590 --> 00:17:50,680
JS.storeData, đây là tên

356
00:17:50,680 --> 00:17:55,120
hàm đó. Tôi bỏ dòng trống này đi, bỏ chỗ

357
00:17:55,120 --> 00:17:55,720
này nữa,

358
00:17:55,720 --> 00:18:00,130
thế là gọn rồi. Giờ ta có thể chạy

359
00:18:00,130 --> 00:18:02,830
ứng dụng và xem xem có

360
00:18:02,830 --> 00:18:06,700
hoạt động đúng không. Chạy thử nào. Bạn thấy nó

361
00:18:06,700 --> 00:18:10,150
đọc dữ liệu rồi, nó đang đọc dữ liệu

362
00:18:10,150 --> 00:18:12,270
từ một ví dụ trước

363
00:18:12,270 --> 00:18:16,390
của tôi, nhưng bạn hiểu ý đó.

364
00:18:16,390 --> 00:18:18,670
Ta sẽ kéo nó

365
00:18:18,670 --> 00:18:21,280
về giữ đây, ta sẽ

366
00:18:21,280 --> 00:18:24,250
đổi màu đi, đổi nó thành xanh thế này

367
00:18:24,250 --> 00:18:31,720
okay, đổi màu đi

368
00:18:31,720 --> 00:18:34,600
thế này, kéo cửa sổ sang bên trái

369
00:18:34,600 --> 00:18:37,300
này, đóng ứng dụng lại, và bạn thấy

370
00:18:37,300 --> 00:18:40,600
ta có lỗi ở đây... ta gọi

371
00:18:40,600 --> 00:18:44,560
hàm sai rồi, ta gọi "exetcute", ta

372
00:18:44,560 --> 00:18:47,950
gặp một đống lỗi. Ta cần

373
00:18:47,950 --> 00:18:55,870
viết lại executeSql, ta sẽ thật

374
00:18:55,870 --> 00:19:03,100
cẩn thận với hàm này... executeSql, đúng

375
00:19:03,100 --> 00:19:06,490
chưa nhỉ? Còn có ở đâu nữa?

376
00:19:06,490 --> 00:19:14,440
executeSql... executeSql ở đây. Tôi nghĩ

377
00:19:14,440 --> 00:19:18,660
là ổn rồi. Xin lỗi các bạn.

378
00:19:18,660 --> 00:19:21,300
Giờ kéo ứng dụng ra chỗ khác,

379
00:19:21,300 --> 00:19:27,070
đổi màu thành màu vàng, ta

380
00:19:27,070 --> 00:19:29,410
chỉnh kích thước của cửa sổ, đóng

381
00:19:29,410 --> 00:19:33,340
ứng dụng lại... còn sai gì

382
00:19:33,340 --> 00:19:35,760
nữa?

383
00:19:45,520 --> 00:19:50,360
Lưu cái này lại. Vào qml, sửa

384
00:19:50,360 --> 00:19:54,590
một vài chỗ, thêm vài dấu cách để Qt

385
00:19:54,590 --> 00:20:00,320
Creator lưu thay đổi lại, okay. Ta

386
00:20:00,320 --> 00:20:03,200
dịch vị trí của cửa sổ,

387
00:20:03,200 --> 00:20:05,480
chỉnh kích thước, và đổi màu

388
00:20:05,480 --> 00:20:09,290
này thành xanh lá, nhấn Ok, đóng

389
00:20:09,290 --> 00:20:12,260
ứng dụng lại, nó cập nhật dữ liệu rồi.

390
00:20:12,260 --> 00:20:14,960
Ta bật lại lên, ứng dụng này sẽ

391
00:20:14,960 --> 00:20:17,780
nằm ở vị trí mới với

392
00:20:17,780 --> 00:20:20,600
màu mà ta đã chọn. Đây là

393
00:20:20,600 --> 00:20:23,360
cái mà tôi muốn làm khi tôi bảo rằng bạn

394
00:20:23,360 --> 00:20:25,610
có thể lưu dữ liệu lại. Đây là

395
00:20:25,610 --> 00:20:28,220
toàn bộ nội dung bài này rồi, không

396
00:20:28,220 --> 00:20:30,680
thực sự quá phức tạp, bạn cần

397
00:20:30,680 --> 00:20:32,660
dùng những hàm như ta dùng đây, và

398
00:20:32,660 --> 00:20:35,270
áp dụng ví dụ này để lưu

399
00:20:35,270 --> 00:20:37,910
cái gì bạn muốn vào cơ sở dữ liệu cũng được.

400
00:20:37,910 --> 00:20:40,820
Quan trọng ở đây là cần biết SQLite và

401
00:20:40,820 --> 00:20:44,360
biết cách dùng những chức năng này: create, read,

402
00:20:44,360 --> 00:20:47,180
update, và delete, nếu bạn biết rồi thì

403
00:20:47,180 --> 00:20:48,740
sẽ không có vấn đề gì

404
00:20:48,740 --> 00:20:50,750
trong việc lưu dữ liệu trong ứng dụng

405
00:20:50,750 --> 00:20:53,030
Qt quick cả. Cái cuối cùng tôi muốn

406
00:20:53,030 --> 00:20:54,830
cho bạn xem trước khi kết thúc bài này

407
00:20:54,830 --> 00:20:57,500
là cho bạn xem địa chỉ của

408
00:20:57,500 --> 00:20:59,690
cơ sở dữ liệu này. Cách tìm địa chỉ là

409
00:20:59,690 --> 00:21:02,000
vào tệp main.cpp này,

410
00:21:02,000 --> 00:21:08,690
import QDebug... include<QDebug>. Đây là

411
00:21:08,690 --> 00:21:10,610
một lớp mà sẽ cho phép bạn làm một số việ c

412
00:21:10,610 --> 00:21:13,640
như là console.log, hiện thông báo trong log,

413
00:21:13,640 --> 00:21:15,560
ta xuống đây và viết

414
00:21:15,560 --> 00:21:19,310
một câu để debug in ra

415
00:21:19,310 --> 00:21:23,060
địa chỉ của cơ sở dữ liệu SQLite. Đây là

416
00:21:23,060 --> 00:21:25,550
cách in nó ra. Giờ nếu ta chạy

417
00:21:25,550 --> 00:21:27,560
ứng dụng, ta sẽ thấy

418
00:21:27,560 --> 00:21:29,690
ứng dụng in ra đây, ta thấy

419
00:21:29,690 --> 00:21:33,620
có địa chỉ trong ổ đĩa, bạn thấy

420
00:21:33,620 --> 00:21:35,330
đây là nơi mà

421
00:21:35,330 --> 00:21:41,170
dữ liệu được lưu trữ. Ta có thể vào đây,

422
00:21:41,170 --> 00:21:44,500
ta sẽ xóa

423
00:21:44,500 --> 00:21:48,770
dấu xược đôi này đi, vì

424
00:21:48,770 --> 00:21:50,840
có thể gây lỗi... Tôi

425
00:21:50,840 --> 00:21:52,160
không nghĩ là Widows sẽ

426
00:21:52,160 --> 00:21:55,520
đọc được dấu này, ta sẽ xóa nó đi

427
00:21:55,520 --> 00:22:03,070
xóa cái này đi, copy cái này,

428
00:22:03,070 --> 00:22:08,270
vào My Computer, paste nó vào đây,

429
00:22:08,270 --> 00:22:12,050
và bạn thấy có qml trong này,

430
00:22:12,050 --> 00:22:14,660
có offline storage, có

431
00:22:14,660 --> 00:22:17,480
databases, đây là những tệp database,

432
00:22:17,480 --> 00:22:21,290
okay. Bạn không đọc được cái này đâu vì

433
00:22:21,290 --> 00:22:24,200
đây là tệp kiểu binary, nhưng nếu bạn xóa

434
00:22:24,200 --> 00:22:29,420
thử đi, ta xóa thử xem... okay, ta

435
00:22:29,420 --> 00:22:31,100
không xóa được vì cái này đang được

436
00:22:31,100 --> 00:22:33,860
sử dụng mất rồi, nhưng tôi nghĩ là

437
00:22:33,860 --> 00:22:36,860
dữ liệu bị xóa rồi đấy. ta thử

438
00:22:36,860 --> 00:22:40,160
bật ứng dụng lại. Bạn thấy nó lại

439
00:22:40,160 --> 00:22:43,220
màu đỏ rồi. Okay, bạn hiểu ý rồi đấy. Đây

440
00:22:43,220 --> 00:22:45,290
là địa chỉ của cơ sở dữ liệu, nó sẽ

441
00:22:45,290 --> 00:22:48,050
mở phiên bản này, và tôi nghĩ là

442
00:22:48,050 --> 00:22:51,080
cái này {???}. Ta nên xóa

443
00:22:51,080 --> 00:22:55,790
tệp này đi.. làm sao để xóa nếu nó đang

444
00:22:55,790 --> 00:22:58,280
được sử dụng bởi một ứng dụng khác

445
00:22:58,280 --> 00:23:04,640
mà ta không biết là cái nào? Xóa được rồi. Ta

446
00:23:04,640 --> 00:23:07,550
vào lại Qt Creator, clean mọi thứ,

447
00:23:07,550 --> 00:23:15,290
clean, clean project, build, clean all...

448
00:23:15,290 --> 00:23:20,240
đóng cái này đi, chạy ứng dụng, và lần

449
00:23:20,240 --> 00:23:22,280
này, ta không còn lỗi nữa, và

450
00:23:22,280 --> 00:23:26,930
bạn lại có thể lưu dữ liệu được rồi. Ta

451
00:23:26,930 --> 00:23:30,980
chuyển thành xanh lá, thu nhỏ lại, đóng

452
00:23:30,980 --> 00:23:34,940
ứng dụng đi, bật lại, và bạn thấy

453
00:23:34,940 --> 00:23:37,280
nó hoạt động đúng rồi đó. Vừa ròi

454
00:23:37,280 --> 00:23:39,260
là toàn bộ nội dung của bài này.

455
00:23:39,260 --> 00:23:41,660
Tôi mong bạn đã hiểu cách dùng SQLite

456
00:23:41,660 --> 00:23:44,240
để lưu và đọc dữ liệu trong

457
00:23:44,240 --> 00:23:46,670
ứng dụng Qt Quick.

458
00:23:46,670 --> 00:23:48,620
Đây là bài cuối trong

459
00:23:48,620 --> 00:23:51,050
khóa học này, và bạn cũng đã học được kha khá nhiều

460
00:23:51,050 --> 00:23:53,540
nếu bạn xem hết các bài

461
00:23:53,540 --> 00:23:55,640
của khóa rồi. Trong bài tới, tôi sẽ

462
00:23:55,640 --> 00:23:57,680
cho bạn một số tip về cách bạn

463
00:23:57,680 --> 00:23:59,690
có thể tăng thêm kiến thức

464
00:23:59,690 --> 00:24:01,940
từ khóa học này nữa, và làm việc hiệu quả hơn

465
00:24:01,940 --> 00:24:03,889
với Qt Creator.

466
00:24:03,889 --> 00:00:00,000
Hẹn gặp bạn trong bài sau.

