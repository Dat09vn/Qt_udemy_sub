1
00:00:00,000 --> 00:00:01,680
Trong bài giảng này, chúng ta sẽ tìm hiểu về

2
00:00:01,680 --> 00:00:04,980
Easing (tốc độ) trong hiệu ứng hoạt hình. Easing là

3
00:00:04,980 --> 00:00:07,529
1 thuộc tính nhóm, dùng để kiểm soát cách

4
00:00:07,529 --> 00:00:10,349
mà hoạt hình của các bạn thay đổi theo thời gian. Nghĩa là gì?

5
00:00:10,349 --> 00:00:13,590
Nếu chúng ta nhìn vào ứng dụng chúng ta có ở đây

6
00:00:13,590 --> 00:00:15,389
là ứng dụng mà chúng ta sẽ xây dựng trong bài này,

7
00:00:15,389 --> 00:00:18,570
chúng ta bắt đầu bằng hoạt hình ở 'Linear'

8
00:00:18,570 --> 00:00:21,330
ở đây và các bạn thấy rằng

9
00:00:21,330 --> 00:00:24,390
mọi thứ là tuyến tính. Hoạt hình bắt đầu và kết thúc

10
00:00:24,390 --> 00:00:27,930
với một tốc độ không đổi. Nếu các bạn nhìn vào InQuad ở đây,

11
00:00:27,930 --> 00:00:30,539
các bạn thấy đó, nó bắt đầu chậm

12
00:00:30,539 --> 00:00:34,770
và kết thúc nhanh. Và chúng ta có tất cả

13
00:00:34,770 --> 00:00:37,590
cách dạng hoạt hình ở đây và chúng đều

14
00:00:37,590 --> 00:00:40,050
khác nhau theo cách riêng của chúng. Nhưng lưu ý

15
00:00:40,050 --> 00:00:42,420
rằng chúng là 1 hoạt hình, chúng bắt đầu và

16
00:00:42,420 --> 00:00:45,090
kết thúc tại 1 điểm. Chúng ta chỉ

17
00:00:45,090 --> 00:00:47,579
thay đổi loại easing, ok, cách mà

18
00:00:47,579 --> 00:00:50,250
hoạt hình thay đổi theo thời gian trong

19
00:00:50,250 --> 00:00:52,530
khoảng cách này từ điểm bắt đầu đến kết thúc.

20
00:00:52,530 --> 00:00:55,469
Và nếu chúng ta vào tài liệu hướng dẫn trực tuyến,

21
00:00:55,469 --> 00:00:57,030
chúng ta sẽ thấy có một đống các

22
00:00:57,030 --> 00:00:59,579
thuộc tính mà chúng ta có thể thiết lập cho nó. Các bạn

23
00:00:59,579 --> 00:01:01,550
các thể đặt loại của đường cong và

24
00:01:01,550 --> 00:01:03,870
tùy thuộc vào đường cong mà các bạn có, các bạn

25
00:01:03,870 --> 00:01:06,689
có thể thay đổi các thuộc tính khác. Để

26
00:01:06,689 --> 00:01:08,880
xác định chúng trong đường cong, các bạn cần

27
00:01:08,880 --> 00:01:12,150
xác định loại đường cong. Đối với một số đường cong, các bạn cũng có thể

28
00:01:12,150 --> 00:01:15,330
chỉ định biên độ- amplitude, và thời gian- period và

29
00:01:15,330 --> 00:01:18,420
vượt qua- overshoot. Nếu các bạn kéo xuống dưới đây, nó sẽ chỉ cho

30
00:01:18,420 --> 00:01:21,119
các bạn làm thế thể để áp dụng các thiết lập này.

31
00:01:21,119 --> 00:01:23,580
Ok, các bạn có 1 'PropertyAnimation' (thuộc tính hoạt hình) và các bạn

32
00:01:23,580 --> 00:01:26,790
đặt 1 'easing.type' (loại easing) tại đây và đây là

33
00:01:26,790 --> 00:01:29,520
các loại có sẵn. Ok, easing có thể là

34
00:01:29,520 --> 00:01:31,890
Linear (tuyến tính). Các bạn có thể thấy rằng

35
00:01:31,890 --> 00:01:35,850
đường cong ở đây là 1 đường thẳng InQuad bắt đầu chậm sau nhanh.

36
00:01:35,850 --> 00:01:39,600
Ok, các bạn có thể thấy

37
00:01:39,600 --> 00:01:42,180
theo thời gian, dốc càng trở nên

38
00:01:42,180 --> 00:01:45,810
dốc hơn. OutQuad bắt đầu nhanh sau đó

39
00:01:45,810 --> 00:01:49,170
kết thúc chậm. Và các bạn có thể tìm hiểu tất cả những

40
00:01:49,170 --> 00:01:51,420
đường cong này và xem những thuộc tính khác nhau mà

41
00:01:51,420 --> 00:01:54,570
chúng có. Bây giờ chúng ta sẽ đi đến Qt Creator,

42
00:01:54,570 --> 00:01:57,509
và chơi với những thứ này.

43
00:01:57,509 --> 00:01:59,939
Okay, chúng ta đang ở Qt Creator.

44
00:01:59,939 --> 00:02:02,610
Chúng ta sẽ tạo ra dự án của chúng tôi. Đó là một Qt Quick Application (ứng dụng nhanh Qt).

45
00:02:02,610 --> 00:02:06,329
Chúng tôi gọi nó là 'EasingDemo'.

46
00:02:06,329 --> 00:02:11,250
Lưu nó ở vị trí thông thường.

47
00:02:11,250 --> 00:02:12,580
Lựa chọn Qt Version (phiên bản Qt),

48
00:02:12,580 --> 00:02:18,709
Lựa chọn kit và kết thúc.

49
00:02:18,709 --> 00:02:20,900
Các bạn sẽ muốn thay đổi tiêu đề ở đây thành 'Easings Demo'.

50
00:02:20,900 --> 00:02:26,930
Ok, chúng ta sẽ muốn nhắc lại

51
00:02:26,930 --> 00:02:29,780
về chúng ta muốn làm gì, chúng ta sẽ

52
00:02:29,780 --> 00:02:33,019
tạo 1 hình chữ nhật chuyển động như 1

53
00:02:33,019 --> 00:02:35,360
thành phần ngoài và sau đó chúng ta sẽ

54
00:02:35,360 --> 00:02:38,480
đưa nó vào 1 column layout, bố cục cột

55
00:02:38,480 --> 00:02:41,360
để được như thế này. Và cột

56
00:02:41,360 --> 00:02:43,459
được bọc trong

57
00:02:43,459 --> 00:02:45,620
1 thành phần 'Flickable' để có thể

58
00:02:45,620 --> 00:02:47,930
flick (lướt) được. Và đó là tất cả cho

59
00:02:47,930 --> 00:02:50,359
ứng dụng này và chúng ta sẽ có thể

60
00:02:50,359 --> 00:02:53,299
áp dụng Easing ngoại tuyến cho thành phần

61
00:02:53,299 --> 00:02:56,810
từ tập tin 'main.qml'.

62
00:02:56,810 --> 00:02:57,680
Hãy bắt đầu công việc.

63
00:02:57,680 --> 00:03:00,140
Chúng ta sẽ thêm 1 tập tin QML mới.

64
00:03:00,140 --> 00:03:04,310
Nhấp phải vào 'qml.qrc' ở đây, chọn thêm mới (add new),

65
00:03:04,310 --> 00:03:08,540
chọn Qt, chọn Qt Quick,

66
00:03:08,540 --> 00:03:12,260
Chúng ta sẽ gọi nó là 'MovingRectangle'

67
00:03:12,260 --> 00:03:15,349
bởi vì đó là chính là nó. Chúng ta sẽ thay đổi import Qt Quick ở đây.

68
00:03:15,349 --> 00:03:19,430
Chúng ta muốn bắt đầu bằng

69
00:03:19,430 --> 00:03:22,040
việc thêm vào 1 số thuộc tính

70
00:03:22,040 --> 00:03:24,190
mà người dùng có thể thiết lập ngoại tuyến.

71
00:03:24,190 --> 00:03:26,599
Chúng ta sẽ thiết lập các thuộc tính này

72
00:03:26,599 --> 00:03:29,269
khi chúng ta định nghĩa đối tượng của chúng ta trong tập tin 'main.qml'.

73
00:03:29,269 --> 00:03:32,359
Ok, chúng ta muốn có thể

74
00:03:32,359 --> 00:03:35,359
thiết lập màu nền, maù xám ở đây.

75
00:03:35,359 --> 00:03:37,459
Chúng ta muốn đặt màu bắt đầu

76
00:03:37,459 --> 00:03:40,370
là màu be cho tất cả. Chúng ta muốn đặt

77
00:03:40,370 --> 00:03:42,919
màu kết thúc tuỳ trường hợp. Các bạn có thể thấy

78
00:03:42,919 --> 00:03:45,079
ở khoảng giữa này, có thời lượng cho hoạt hình,

79
00:03:45,079 --> 00:03:47,900
loại easing và chiều rộng

80
00:03:47,900 --> 00:03:49,459
của hình chứa.

81
00:03:49,459 --> 00:03:51,829
Ok, đó là những điều chúng ta muốn.

82
00:03:51,829 --> 00:03:54,199
Vì vậy, đặt chúng ở đây. Ở trong, chúng ta muốn có 1 hình chữ nhật.

83
00:03:54,199 --> 00:03:59,629
ID sẽ là 'smallContainerRectId1'. Chúng ta

84
00:03:59,629 --> 00:04:02,239
sẽ dùng ID đó cho nó. Chiều rộng sẽ là

85
00:04:02,239 --> 00:04:06,859
'containerwidth', chiều cao sẽ là

86
00:04:06,859 --> 00:04:11,930
50 và màu sắc sẽ là 'backgroundColor.

87
00:04:11,930 --> 00:04:14,180
OK, các bạn thấy rằng

88
00:04:14,180 --> 00:04:15,739
các thuộc tính mà chúng ta thiết lập ở đây, chúng ta

89
00:04:15,739 --> 00:04:18,349
sẽ bắt đầu sử dụng chúng. Chúng ta đã dùng

90
00:04:18,349 --> 00:04:20,539
'containerwidth' và chúng ta đã dùng

91
00:04:20,539 --> 00:04:22,760
'backgroundColor'. Bên trong, chúng ta sẽ

92
00:04:22,760 --> 00:04:25,310
đặt 1 thành phần 'Text' (văn bản),

93
00:04:25,310 --> 00:04:25,610
chính là tên gọi easing.

94
00:04:25,610 --> 00:04:29,210
Chúng ta không cần ID ở đây.

95
00:04:29,210 --> 00:04:33,259
Văn bản sẽ là 'easingText', chính là thứ mà chúng ta

96
00:04:33,259 --> 00:04:36,469
sẽ đặt vào đây và chúng ta muốn nó được canh giữa (centerIn)

97
00:04:36,469 --> 00:04:41,569
so với bố mẹ (parent). Cha mẹ của nó là

98
00:04:41,569 --> 00:04:43,969
hình chữ nhật này ở đây. Chúng ta cũng muốn

99
00:04:43,969 --> 00:04:49,370
dùng 1 hình chữ nhật khác, chính là

100
00:04:49,370 --> 00:04:52,939
hình chữ nhật nhỏ, di động ở chính giữa, ở đây.

101
00:04:52,939 --> 00:04:59,090
ID sẽ là 'containedRectId1' bởi vì nó là một

102
00:04:59,090 --> 00:05:01,819
hình chữ nhật được chứa bên trong (contained rectangle). Màu sắc của nó sẽ là

103
00:05:01,819 --> 00:05:05,539
'startColor' (màu bắt đầu). Chiều rộng là 50.

104
00:05:05,539 --> 00:05:09,740
Chiều cao là 50. Chúng ta muốn

105
00:05:09,740 --> 00:05:12,680
muốn có 1 viền ngoài như thế này với bán kính (radius) là 10,

106
00:05:12,680 --> 00:05:16,639
vì chúng ta muốn chúng có góc bo tròn.

107
00:05:16,639 --> 00:05:19,389
Chúng ta cũng sẽ thiết lập 1 MouseArea

108
00:05:19,389 --> 00:05:21,590
bởi vì thứ này sẽ phải có thể nhấp được.

109
00:05:21,590 --> 00:05:25,330
Nó sẽ lấp đầy (fill) bố mẹ (parent).

110
00:05:25,330 --> 00:05:30,879
và chúng ta muốn biết khi nó được bấm vào.

111
00:05:30,879 --> 00:05:33,889
Ok, chúng ta sẽ phải làm một cái gì đó, nhưng

112
00:05:33,889 --> 00:05:36,919
trước khi chúng ta làm bất cứ điều gì đặc biệt ở đây, tôi muốn

113
00:05:36,919 --> 00:05:40,370
thiết lập hoạt hình của chúng ta. Ok bởi vì

114
00:05:40,370 --> 00:05:43,430
chúng ta muốn để thứ này làm hình động từ trái

115
00:05:43,430 --> 00:05:47,089
sang phải, bắt đầu từ 0,

116
00:05:47,089 --> 00:05:49,940
nó sẽ kết thúc tại chiều rộng của cửa sổ ở đây

117
00:05:49,940 --> 00:05:52,370
trừ cho chiều rộng của hình chữ nhật.

118
00:05:52,370 --> 00:05:54,050
Điều đầu tiên, tôi muốn làm là tôi muốn

119
00:05:54,050 --> 00:05:56,150
cung cấp cho các điểm đến cuối cùng, chính là

120
00:05:56,150 --> 00:05:58,759
'finalX'. Vì vậy, ngay tại đây,

121
00:05:58,759 --> 00:06:01,909
tôi sẽ ghi 'property' (thuộc tính), nó là 1 'int' (số nguyên),

122
00:06:01,909 --> 00:06:05,330
và được gọi là 'finalX',

123
00:06:05,330 --> 00:06:10,009
giá trị là 'parent.width' (chiều rộng của đối tượng bố mẹ) trừ đi 'width' (chiều rộng)

124
00:06:10,009 --> 00:06:13,219
của hình chữ nhật này ở đây. Đây là tất cả những gì chúng ta

125
00:06:13,219 --> 00:06:15,889
cần bây giờ. Xuống đây, chúng ta sẽ đặt hoạt hình của chúng ta,

126
00:06:15,889 --> 00:06:19,210
chúng ta muốn 1 NumberAnimation,

127
00:06:19,210 --> 00:06:22,009
ID của nó sẽ là 'mNumberAnimationId',

128
00:06:22,009 --> 00:06:30,319
'target' sẽ là

129
00:06:30,319 --> 00:06:32,839
hình chữ nhật này, ở đây, hình chữ nhật

130
00:06:32,839 --> 00:06:35,870
được chứa bên trong. Vì vậy chúng ta có thể copy ID này và để vào đây.

131
00:06:35,870 --> 00:06:38,610
Nó sẽ hoạt động.

132
00:06:38,610 --> 00:06:45,229
'property' mà chúng ta muốn làm hoạt hình là "X".

133
00:06:45,229 --> 00:06:50,430
'easing.type' sẽ là 'easingType',

134
00:06:50,430 --> 00:06:55,129
là cái chúng ta đã paste vào khi chúng ta tạo

135
00:06:55,129 --> 00:06:58,379
thành phần ở đây. Các bạn thấy đó, chúng ta dán

136
00:06:58,379 --> 00:07:03,810
nó ngay tại đây. Đó la 1 'var' (biến) và chúng ta

137
00:07:03,810 --> 00:07:06,870
dùng nó ngay tại đây. Nó sẽ chuyển động

138
00:07:06,870 --> 00:07:10,949
đến 'finalX' mà chúng ta vừa mới

139
00:07:10,949 --> 00:07:14,159
định nghĩa ở đây và thời lượng cho

140
00:07:14,159 --> 00:07:16,680
hoạt hình sẽ là thuộc tính này

141
00:07:16,680 --> 00:07:18,659
mà chúng ta dán ở đây. Nó sẽ là

142
00:07:18,659 --> 00:07:20,699
'animDuration'. Chúng ta sẽ có thể

143
00:07:20,699 --> 00:07:24,419
thiết lập cái này từ bên ngoài. Đó là những gì chúng ta

144
00:07:24,419 --> 00:07:26,189
thiết kế ở đây cho. Chúng tôi có làm xong 1

145
00:07:26,189 --> 00:07:28,650
'NumberAnimation'. Chúng ta cũng

146
00:07:28,650 --> 00:07:31,169
muốn tạo hiệu ứng ảnh động cho sự thay đổi về màu sắc.

147
00:07:31,169 --> 00:07:34,620
Vì thế, chúng ta sẽ ghi 'ColorAnimation'.

148
00:07:34,620 --> 00:07:39,330
Nó sẽ đi từ 'startColor' và đi đến 'endColor'.

149
00:07:39,330 --> 00:07:44,639
'duration' sẽ

150
00:07:44,639 --> 00:07:47,610
giống của 'NumberAnimation', 'animDuration'

151
00:07:47,610 --> 00:07:50,279
'target' sẽ

152
00:07:50,279 --> 00:07:53,009
cũng giống như với NumberAnimation.

153
00:07:53,009 --> 00:07:58,229
Vì vậy, chúng ta đặt nó ở đây. ID sẽ là

154
00:07:58,229 --> 00:08:01,110
'mColorAnimationId'.

155
00:08:01,110 --> 00:08:03,830
'property' mà chúng ta làm animation là

156
00:08:03,830 --> 00:08:07,409
'color'.

157
00:08:07,409 --> 00:08:11,120
Và cho mục đích gỡ lỗi, chúng ta muốn đưa

158
00:08:11,120 --> 00:08:15,990
chiều rông của thành phần vào đầu ra của debug (debug output)

159
00:08:15,990 --> 00:08:18,870
để xem kích thước của chúng ta có đang làm việc một cách chính xác.

160
00:08:18,870 --> 00:08:22,669
Chúng ta sẽ ghi 'console.log'.

161
00:08:24,680 --> 00:08:28,439
Nên làm điều này. Bây giờ chúng ta muốn đến

162
00:08:28,439 --> 00:08:31,139
khu vực chuột (MouseArea) của chúng ta. Khi chúng ta nhấn, chúng ta muốn

163
00:08:31,139 --> 00:08:33,890
hoạt hình 2 thứ: 1 là vị trí X.

164
00:08:33,890 --> 00:08:36,779
Hình chữ nhật sẽ di chuyển từ trái

165
00:08:36,779 --> 00:08:39,208
sang phải, đích đến sẽ là

166
00:08:39,208 --> 00:08:42,719
chiều rộng của hình chữ nhật bố mẹ,

167
00:08:42,719 --> 00:08:45,000
trừ đi chiều rộng

168
00:08:45,000 --> 00:08:47,310
hình chữ nhật này ở đây. Và chúng ta nên

169
00:08:47,310 --> 00:08:49,170
xác định chiều rộng và độ cao này

170
00:08:49,170 --> 00:08:51,889
ở đây, bởi vì chúng ta sẽ dùng nó trong bố cục.

171
00:08:51,889 --> 00:08:54,049
Chiều rộng sẽ là

172
00:08:54,049 --> 00:08:56,179
chiều rộng của hình chữ nhật này, chiều cao là

173
00:08:56,179 --> 00:08:57,589
chiều cao của hình chữ nhật này ở đây.

174
00:08:57,589 --> 00:09:07,699
width: smallContainerRectId1.width
height: smallContainerRectId1.height

175
00:09:07,699 --> 00:09:10,339
Chúng ta muốn quay trở lại MouseArea.

176
00:09:10,339 --> 00:09:12,769
Ok, khi nhấn vào, chúng ta muốn động X

177
00:09:12,769 --> 00:09:16,959
từ 0 đến vị trí này và

178
00:09:16,959 --> 00:09:20,959
có hiệu ứng động cho sự thay đổi màu sác từ startColor (màu bắt đầu)

179
00:09:20,959 --> 00:09:23,989
đến endColor (màu kết thúc) và

180
00:09:23,989 --> 00:09:26,619
2 màu bắt đầu và kết thúc sẽ được quy định

181
00:09:26,619 --> 00:09:29,720
bên ngoài khi định nghĩa đối tượng này.

182
00:09:29,720 --> 00:09:31,339
Chúng ta muốn bắt đầu bằng cách theo dõi

183
00:09:31,339 --> 00:09:34,220
xem liệu hình chữ nhật nhỏ ở

184
00:09:34,220 --> 00:09:38,230
bên trái hay bên phải và chúng ta làm điều đó bằng cách

185
00:09:38,230 --> 00:09:46,609
định nghĩa 1 'property' ở đây. Chúng ta gọi nó la 'toRight'

186
00:09:46,609 --> 00:09:48,949
và có giá trị ban đầu là 'false',

187
00:09:48,949 --> 00:09:51,049
bởi vì hình của chúng ta sẽ

188
00:09:51,049 --> 00:09:53,779
bắt đầu từ bên trái.

189
00:09:53,779 --> 00:10:03,850
Trong này chúng ta sẽ ghi rằng nếu 'toRight' bằng 'false'

190
00:10:06,730 --> 00:10:11,809
chúng ta sẽ di chuyển sang phải, nếu không

191
00:10:11,809 --> 00:10:18,679
di chuyển sang trái. Nhưng trước khi

192
00:10:18,679 --> 00:10:20,660
chúng ta làm điều đó, chúng ta phải thiết lập

193
00:10:20,660 --> 00:10:23,569
ở đây. Vì vậy chúng ta sẽ thay đổi giá trị của

194
00:10:23,569 --> 00:10:26,119
'toRight' ở đây. Nếu nó là 'false', chúng ta muốn

195
00:10:26,119 --> 00:10:27,739
đổi thành 'true'.

196
00:10:27,739 --> 00:10:31,339
Vì vậy, các bạn sẽ ghi 'toRight',

197
00:10:31,339 --> 00:10:34,789
nó là  'true' và là 'false' ở đây,

198
00:10:34,789 --> 00:10:37,579
bởi vì nếu nó là 'false', nó hiển nhiên đúng.

199
00:10:37,579 --> 00:10:49,929
Bây giờ, chúng ta sẽ làm hoạt hình cho X, và cho màu sắc.

200
00:10:52,540 --> 00:10:57,380
Điều duy nhất chúng ta cần phải

201
00:10:57,380 --> 00:11:02,060
làm để hoạt hình là gọi 'mNumberAnimation'

202
00:11:02,060 --> 00:11:06,850
và đặt giá trị cho 'to' là 'finalX'.

203
00:11:06,850 --> 00:11:09,620
Chúng ta sẽ muốn chạy hoạt hình sau khi chúng ta

204
00:11:09,620 --> 00:11:15,680
hoàn tất nó. Đối với màu sắc, chúng ta muốn thiết lập

205
00:11:15,680 --> 00:11:17,860
màu sắc bắt đầu và màu sắc kết thúc.

206
00:11:17,860 --> 00:11:21,050
Vì vậy, chúng ta sẽ bắt đầu tại

207
00:11:21,050 --> 00:11:28,310
màu bắt đầu, 'mColorAnimationId.from' là  going to 'startColor'

208
00:11:28,310 --> 00:11:32,720
và 'mColorAnimationI.to'

209
00:11:32,720 --> 00:11:38,150
bằng 'endColor' và chúng ta muốn

210
00:11:38,150 --> 00:11:41,380
chạy hoạt hình. Như thế đó.

211
00:11:41,380 --> 00:11:43,670
Còn lại, chúng ta chỉ làm điều ngược lại.

212
00:11:43,670 --> 00:11:46,970
Hãy copy cái này bởi vì chúng ta không

213
00:11:46,970 --> 00:11:49,940
muốn gõ lại tất cả 1 lần nữa. Chúng ta sẽ

214
00:11:49,940 --> 00:11:53,870
làm hoạt hình trở lại 0 và chúng ta sẽ

215
00:11:53,870 --> 00:11:57,770
đổi lại thành 'endColor' ở đây, chúng ta sẽ

216
00:11:57,770 --> 00:11:59,810
làm hoạt hình từ 'endColor' và

217
00:11:59,810 --> 00:12:01,610
đích đến sẽ là 'startColor'.

218
00:12:01,610 --> 00:12:04,310
Đây là những gì chúng ta muốn.

219
00:12:04,310 --> 00:12:07,100
Ok, khi nhấn, nếu chúng ta đang ở bên trái, chúng ta

220
00:12:07,100 --> 00:12:11,150
sẽ về bên phải và nếu chúng ta ở bên phải,

221
00:12:11,150 --> 00:12:13,820
chúng ta sẽ đi lại về bên trái.

222
00:12:13,820 --> 00:12:17,300
Và đây là tất cả cho thành phần của chúng ta ở đây.

223
00:12:17,300 --> 00:12:19,700
Tôi biết rằng nó có thể khiến các bạn rối

224
00:12:19,700 --> 00:12:22,160
bởi vì tôi nghĩ rằng đây là thành phần

225
00:12:22,160 --> 00:12:24,470
lớn nhất mà chúng ta có từ trước đến giờ trong khoá học này.

226
00:12:24,470 --> 00:12:27,500
Vì vậy, hít một hơi thật sâu và đọc lại

227
00:12:27,500 --> 00:12:29,360
nó một vài lần. Các bạn sẽ

228
00:12:29,360 --> 00:12:31,760
hiểu cách nó hoạt động. Bây giờ chúng ta muốn

229
00:12:31,760 --> 00:12:33,680
quay lại tập tin 'main.qml' và

230
00:12:33,680 --> 00:12:36,140
dùng nó. Chúng ta muốn import

231
00:12:36,140 --> 00:12:39,430
QtQuick LayOuts,

232
00:12:40,149 --> 00:12:44,120
chúng ta muốn dùng 1.4. Chúng ta muốn cho

233
00:12:44,120 --> 00:12:46,250
cửa sổ naỳ 1 ID, vì vậy chúng ta sẽ ghi

234
00:12:46,250 --> 00:12:50,120
'rootID'. Chúng ta cũng muốn thiết lập

235
00:12:50,120 --> 00:12:53,110
1 'property' cho thời lượng hoạt hình.

236
00:12:53,110 --> 00:12:57,279
'property' và nó được gọi là

237
00:12:57,279 --> 00:12:59,740
'animDuration',

238
00:12:59,740 --> 00:13:03,949
hãy bắt đầu với giá trị nửa giây hay 500 mili giây.

239
00:13:03,949 --> 00:13:06,440
Ở trong chúng ta muốn đặt

240
00:13:06,440 --> 00:13:11,449
1 thành phần 'Flickable'. Nó sẽ 'fill' (lấp đầy)

241
00:13:11,449 --> 00:13:14,690
'parent' (bố mẹ) và ở trong, chúng ta sẽ

242
00:13:14,690 --> 00:13:19,160
có 1 'ColumnLayout'. ID sẽ là

243
00:13:19,160 --> 00:13:24,740
'mColumnId' và chúng ta muốn dùng

244
00:13:24,740 --> 00:13:27,769
chiều cao của cột này như 'contentHeight'

245
00:13:27,769 --> 00:13:29,630
của thành phần 'Flickable'

246
00:13:29,630 --> 00:13:32,420
bởi vì đó là chiều cao của những gì cần

247
00:13:32,420 --> 00:13:36,170
hiển thị. Vì vậy, chúng ta có thể nói 'contentHeight' ở đây.

248
00:13:36,170 --> 00:13:40,699
Đây là 1 thuộc tính quan trọng cho

249
00:13:40,699 --> 00:13:43,550
thành phần 'Flickable'. Chúng ta sẽ nói

250
00:13:43,550 --> 00:13:47,899
'mColumnId.implicitHeight'. Chiều rộng là

251
00:13:47,899 --> 00:13:49,880
chiều rộng của đối tượng bố mẹ, vì vậy chúng ta

252
00:13:49,880 --> 00:13:54,440
sẽ ghi 'parent.width'. Và chúng ta muốn

253
00:13:54,440 --> 00:13:58,250
'spacing' (khoảng cách) bằng 2. Bây giờ chúng ta

254
00:13:58,250 --> 00:14:00,529
muốn đặt vào 'MovingRectangle' của chúng ta.

255
00:14:00,529 --> 00:14:03,199
OK, chúng ta sẽ định nghĩa nó như thế nay, như cách chúng ta

256
00:14:03,199 --> 00:14:05,990
làm với các thành phần khác. Được rồi, chúng ta hãy

257
00:14:05,990 --> 00:14:07,579
nhìn vào các thuộc tính mà chúng ta có thể

258
00:14:07,579 --> 00:14:09,890
xác định. Chúng ta có thể xác định màu nên

259
00:14:09,890 --> 00:14:12,680
, vì vậy chúng ta sẽ dùng 'backgroundColor'.

260
00:14:12,680 --> 00:14:15,350
'backgroundColor' sẽ là

261
00:14:15,350 --> 00:14:18,410
"gray" (màu xám). Chúng ta có thể xác định màu bắt đầu

262
00:14:18,410 --> 00:14:21,800
bằng cách dùng 'startColor' ở đây và nó sẽ

263
00:14:21,800 --> 00:14:24,290
màu "beige" (màu be). 'endColor' sẽ là

264
00:14:24,290 --> 00:14:30,230
'blue' (màu xanh) và 'animDuration' sẽ là

265
00:14:30,230 --> 00:14:33,260
thời lượng từ cái này, nhưng chúng ta không muốn

266
00:14:33,260 --> 00:14:35,029
bị nhầm lẫn vì vậy, chúng ta nên

267
00:14:35,029 --> 00:14:39,589
dùng 'animationDuration' ở đây.

268
00:14:39,589 --> 00:14:41,889
Thế sẽ tốt hơn.

269
00:14:44,149 --> 00:14:47,970
Thuộc tính này từ tập tin 'main.qml' ở đây.

270
00:14:47,970 --> 00:14:51,990
Cái còn lại là từ 'Item' ở đây

271
00:14:51,990 --> 00:14:54,810
được gọi là 'animDuration'.

272
00:14:54,810 --> 00:14:56,670
Đó là những gì chúng ta đang thiết lập. Tôi hy vọng điều này

273
00:14:56,670 --> 00:15:01,680
có ý nghĩa. 'easingText' sẽ là

274
00:15:01,680 --> 00:15:05,069
'Linear'. Đây là những gì chúng ta muốn thấy ở

275
00:15:05,069 --> 00:15:08,060
chính giữa. 'easingType' sẽ là

276
00:15:08,060 --> 00:15:13,740
'Easing.Linear'. Thuộc tính còn lại là

277
00:15:13,740 --> 00:15:16,970
'containerwidth'. Chúng ta sẽ định nghĩa điều đó.

278
00:15:16,970 --> 00:15:20,339
'containerwidth' sẽ là 'rootId.width'.

279
00:15:20,339 --> 00:15:24,600
Được rồi, bây giờ chúng ta có thể

280
00:15:24,600 --> 00:15:27,300
chạy ứng dụng và xem nó trông như thế nào.

281
00:15:27,300 --> 00:15:29,550
Chúng ta sẽ chỉ có 1 thành phần

282
00:15:29,550 --> 00:15:31,980
nhưng nếu nó hoạt động đúng,

283
00:15:31,980 --> 00:15:35,069
thật dễ dàng để thêm các thành phần khác. Hãy chạy thử chương trình.

284
00:15:35,069 --> 00:15:40,740
mm-hmmm... Được rồi, ứng dụng của chúng tôi ở đây.

285
00:15:40,740 --> 00:15:44,399
Chúng ta nhấn, không có gì xảy ra và

286
00:15:44,399 --> 00:15:49,069
chúng ta thấy thông báo lỗi 'finalX is not defined' (finalX chưa được định nghĩa). Tại sao vậy?

287
00:15:49,069 --> 00:15:52,790
Hãy trở lại MovingRectangle của chúng ta và

288
00:15:52,790 --> 00:15:59,180
xem thử 'finalX'. Tại sao nó không nhận được?

289
00:15:59,180 --> 00:16:02,360
Tôi không thể định nghĩa 1 thuộc tính ở đây?

290
00:16:02,360 --> 00:16:05,279
Hãy debug và xem thử chuyện gì đang diễn ra.

291
00:16:05,279 --> 00:16:08,699
Ở đây nếu tôi đưa một giá trị tĩnh

292
00:16:08,699 --> 00:16:15,240
như 200. Giờ qua tập tin 'main.qml',

293
00:16:15,240 --> 00:16:18,860
thêm vài khoảng trắng, chạy lại.

294
00:16:18,860 --> 00:16:23,040
hmmm... Tôi biết đó là nó không được xác định. Hãy thử đặt

295
00:16:23,040 --> 00:16:25,740
thuộc tính này bên ngoài và xem thử liệu

296
00:16:25,740 --> 00:16:30,779
có hoạt động. Tôi sẽ đặt nó ở đây và tôi

297
00:16:30,779 --> 00:16:33,120
sẽ dùng finalX là

298
00:16:33,120 --> 00:16:41,250
'smallContainerRectId1.width  - containedRectId1.width'

299
00:16:41,250 --> 00:16:47,040
Bây giờ chúng ta hãy xem nếu nó có chạy đúng.

300
00:16:47,040 --> 00:16:51,389
Giờ qua tập tin 'main.qml',

301
00:16:51,389 --> 00:16:54,920
thêm các khoảng trắng, chạy lại.

302
00:16:56,890 --> 00:17:02,270
Bây giờ nó chạy rồi. Ok, tại sao

303
00:17:02,270 --> 00:17:04,280
nó không chạy khi các bạn định nghĩa

304
00:17:04,280 --> 00:17:07,880
1 thuộc tính ở bên trong? Đây là một bí ẩn đối với tôi.

305
00:17:07,880 --> 00:17:10,970
Ok, đã nhớ nó. Nếu các bạn tìm thấy

306
00:17:10,970 --> 00:17:13,040
câu trả lời cho bí ẩn này, các bạn có thể

307
00:17:13,040 --> 00:17:15,020
liên hệ với tôi qua mục Hỏi đáp để cho tôi biết. Tôi sẽ

308
00:17:15,020 --> 00:17:17,420
nghiên cứu về điều này sau video này. Nhưng

309
00:17:17,420 --> 00:17:19,520
điều quan trọng là chúng ta tìm thấy

310
00:17:19,520 --> 00:17:21,859
cách giải quyết và nó đã chạy. Và đó là

311
00:17:21,859 --> 00:17:24,500
một kỹ năng cần thiết khi một phát triển phần mềm

312
00:17:24,500 --> 00:17:26,689
phải tìm được cách giải quyết vần đề cho dù các bạn

313
00:17:26,689 --> 00:17:28,760
không hiểu tại sao nó không chạy,

314
00:17:28,760 --> 00:17:30,590
bởi vì đôi khi các bạn cần

315
00:17:30,590 --> 00:17:34,790
chương trình chạy do thời gian hạn chế.

316
00:17:34,790 --> 00:17:36,830
Được rồi, chương trình của chúng ta đã làm việc ở đây. Chúng ta

317
00:17:36,830 --> 00:17:39,590
đã chạy hoạt hình từ trái sang phải và loại easing là

318
00:17:39,590 --> 00:17:42,470
Linear. Nếu các bạn nhìn vào đường cong

319
00:17:42,470 --> 00:17:45,850
chúng ta có ở đây, Linear (tuyến tính)

320
00:17:45,850 --> 00:17:49,460
là 1 đường cong easing áp dụng cho hàm tuyến tính: tốc độ là không đổi.

321
00:17:49,460 --> 00:17:52,310
Chúng ta muốn thử tất cả

322
00:17:52,310 --> 00:17:53,060
Easing này.

323
00:17:53,060 --> 00:17:55,520
Vì vậy, chúng ta sẽ quay lại tập tin 'main.qml',

324
00:17:55,520 --> 00:17:58,780
và copy những thứ chúng ta có ở đây

325
00:17:58,780 --> 00:18:00,890
cho MovingRectangle thứ 2

326
00:18:00,890 --> 00:18:04,040
với loại easing mà chúng ta muốn

327
00:18:04,040 --> 00:18:08,810
thử là InQuad và chúng ta muốn

328
00:18:08,810 --> 00:18:19,340
màu sắc kết thúc là 'green' (xanh lá cây) Hãy chạy thử chương trình. Được rồi các bạn thấy

329
00:18:19,340 --> 00:18:21,350
rằng nó khác nhau. Nó bắt đầu chậm

330
00:18:21,350 --> 00:18:24,980
và kết thúc nhanh. Và cái này chỉ đi tuyến tính.

331
00:18:24,980 --> 00:18:28,190
Tôi hy vọng các bạn có thể thấy điều này. Vì vậy tôi sẽ

332
00:18:28,190 --> 00:18:30,350
tạm dừng video, đặt tất cả những

333
00:18:30,350 --> 00:18:32,960
easing còn lại vào và tôi sẽ trở lại

334
00:18:32,960 --> 00:18:34,429
để kiểm tra những gì chúng ta có.

335
00:18:34,429 --> 00:18:36,679
Tôi cũng sẽ chỉnh lại chỗ nay. Nó

336
00:18:36,679 --> 00:18:38,900
không phải là 'Linear', nó phải là 'InQuad'.

337
00:18:38,900 --> 00:18:46,490
Ok, chúng ta sẽ chỉnh lại. Được rồi, chúng ta

338
00:18:46,490 --> 00:18:49,250
có MovingRectangle. Các bạn có thể thấy

339
00:18:49,250 --> 00:18:53,090
có rất nhiều ở đây và

340
00:18:53,090 --> 00:18:55,790
bởi vì có rất nhiều loại easing mà

341
00:18:55,790 --> 00:18:59,179
các bạn có thể dùng ở đây. Được rồi, tôi

342
00:18:59,179 --> 00:19:01,340
sẽ để các bạn 1 ít thời gian và đọc

343
00:19:01,340 --> 00:19:05,350
về tất cả những điều nay nếu các bạn cần.

344
00:19:05,350 --> 00:19:07,370
Nhưng những gì tôi muốn các anh chị

345
00:19:07,370 --> 00:19:10,370
xem là chúng hoạt động thế naò và làm cách nào các anh chị có thể

346
00:19:10,370 --> 00:19:12,559
thiết lập chúng khi các anh chị cần.

347
00:19:12,559 --> 00:19:15,530
Các anh chị có thể thấy chiều rộng ở đây,

348
00:19:15,530 --> 00:19:18,740
Linear ở đây,

349
00:19:18,740 --> 00:19:23,120
InQuad, OutQuad. Nếu chúng ta tiếp tục di chuyển xuống, chúng ta

350
00:19:23,120 --> 00:19:25,820
có thể thấy các loại khác. InBounce.

351
00:19:25,820 --> 00:19:29,720
Cái này thú vị. Hãy nhìn cái

352
00:19:29,720 --> 00:19:35,330
đường cong này. InBounce là đường cong cho nảy lại.

353
00:19:35,330 --> 00:19:38,330
Đây là đường cong. Được rồi, nó

354
00:19:38,330 --> 00:19:41,059
theo cấu trúc này ở đây. Được rồi, đây là

355
00:19:41,059 --> 00:19:42,320
tất cả những gì tôi phải nói trong bài này.

356
00:19:42,320 --> 00:19:45,559
Tôi hy vọng các bạn có thể thấy làm thế nào mà easing có thể ảnh hưởng

357
00:19:45,559 --> 00:19:48,500
đến hoạt hình của các bạn. Các bạn thấy chúng ta có

358
00:19:48,500 --> 00:19:50,900
cùng 1 hoạt hình từ 1 điểm đến

359
00:19:50,900 --> 00:19:54,050
1 điểm nhưng chỉ bằng cách thay đổi

360
00:19:54,050 --> 00:19:57,260
easing, có thể thay đổi đáng kể cách mà

361
00:19:57,260 --> 00:19:59,480
hoạt hình của các bạn chạy. Và các bạn có thể chơi với

362
00:19:59,480 --> 00:20:01,429
những thứ này để xem các bạn thích cái nào hơn.

363
00:20:01,429 --> 00:20:03,830
Và tôi muốn các bạn để ý về màu sắc

364
00:20:03,830 --> 00:20:06,740
thay đổi cũng được hoạt hình. Nhìn vào cái này,

365
00:20:06,740 --> 00:20:11,210
màu sắc bắt đầu là màu be và nó từ từ

366
00:20:11,210 --> 00:20:14,270
chuyển sang màu khác. Được rồi, đây là

367
00:20:14,270 --> 00:20:16,610
một điều khác các bạn cần phải biết.

368
00:20:16,610 --> 00:20:17,750
Được rồi, đây là tất cả cho bây giờ.

369
00:20:17,750 --> 00:20:19,130
Trong bài giảng tới, chúng ta sẽ

370
00:20:19,130 --> 00:00:00,000
tìm hiểu về Nhóm hoạt hình. Hẹn gặp lại các bạn ở bài sau.

