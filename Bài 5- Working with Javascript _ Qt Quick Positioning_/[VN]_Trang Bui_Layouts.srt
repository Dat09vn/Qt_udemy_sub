1
00:00:00,000 --> 00:00:01,800
Trong bài này, ta sẽ cùng nhau tìm hiểu 

2
00:00:01,800 --> 00:00:04,950
về layout (bố cục) trong Qt Quick. 

3
00:00:04,950 --> 00:00:10,740
Các layout này có tính năng giống với các phần tử hàng, cột và lưới, 
 
0:00:08.220,0:00:13.290
các thành phần mà ta đã học trong các bài trước, 

4
00:00:10,740 --> 00:00:13,290
tuy nhiên, với layout, ta có thể thay đổi kích thước 

5
00:00:13,290 --> 00:00:15,839
của giao diện khi kích thước phần tử cha  

6
00:00:15,839 --> 00:00:18,779
của nó thay đổi. Ta mở Qt Creator 

7
00:00:18,779 --> 00:00:21,840
và cùng thực hành. Và đây là 

8
00:00:21,840 --> 00:00:23,760
Qt Creator. Ta sẽ tạo một 

9
00:00:23,760 --> 00:00:24,980
dự án mới. 

10
00:00:24,980 --> 00:00:29,730
Ta vào Qt Quick Application, ta gọi dự án này là 

11
00:00:29,730 --> 00:00:36,420
"Layouts Demo" ("thực hành bố cục"), chọn "Next", 

12
00:00:36,420 --> 00:00:39,180
chọn phiên bản Qt mới nhất được cài đặt, 

13
00:00:39,180 --> 00:00:45,059
chọn bộ kit. Ta sẽ thay đổi 

14
00:00:45,059 --> 00:00:49,820
tiêu đề ở đây thành 

15
00:00:50,809 --> 00:00:55,079
"Layouts Demo". Để sử dụng các layout trong QtQuick, 

16
00:00:55,079 --> 00:00:57,840
ta cần phải import (tải) các layout vào trước. Ok, 

17
00:00:57,840 --> 00:01:00,870
các layout không phải là phần có sẵn trong QtQuick. 

18
00:01:00,870 --> 00:01:09,420
Ta gõ "import QtQuick.Layouts", 

19
00:01:09,420 --> 00:01:11,939
ta chọn 1.3 ở đây. Nếu ta mở  

20
00:01:11,939 --> 00:01:16,970
tài liệu và tìm kiếm, 

21
00:01:18,259 --> 00:01:20,909
ta sẽ tìm thấy một mục có tên 

22
00:01:20,909 --> 00:01:23,939
"Qt Quick Layouts". Ta chọn vào mục này, 

23
00:01:23,939 --> 00:01:27,119
ở đây có viết "Layout (bố cục) trong Qt Quick là một tập các kiểu qml

24
00:01:27,119 --> 00:01:30,000
mà ta sử dụng để sắp xếp các phần tử 

25
00:01:30,000 --> 00:01:32,869
trong giao diện người dùng". Khác với 

26
00:01:32,869 --> 00:01:35,420
các vị trí định vị thông thường mà ta đã học, bao gồm 

27
00:01:35,420 --> 00:01:39,090
hàng, cột và lưới, thì các layout trong QtQuick 

28
00:01:39,090 --> 00:01:41,520
có thể làm thay đổi kích thước của các phần tử. 

29
00:01:41,520 --> 00:01:42,930
Nhờ vào đặc điểm này, mà các layout rất phù hợp 

30
00:01:42,930 --> 00:01:46,079
với các giao diện người dùng. Đây là 

31
00:01:46,079 --> 00:01:49,290
một trong những điểm mạnh của layout. Layout có thể 

32
00:01:49,290 --> 00:01:51,540
thay đổi kích thước của giao diện người dùng khi cửa sổ cha của nó 

33
00:01:51,540 --> 00:01:54,750
thay đổi kích thước. Có nhiều kiểu layout khác nhau 

34
00:01:54,750 --> 00:01:56,640
mà có thể dùng ở đây. Ta sẽ cùng nhau tìm hiểu 

35
00:01:56,640 --> 00:01:59,969
RowLayout (bố cục hàng), ColumnLayout (bố cục cột) và 

36
00:01:59,969 --> 00:02:02,579
GridLayout (bố cục lưới). Ta có thể click vào đây 

37
00:02:02,579 --> 00:02:05,399
để tìm hiểu thêm về các thành phần UI này. 

38
00:02:05,399 --> 00:02:10,069
Ta sẽ bắt đầu với GridLayout (bố cục lưới). 

39
00:02:10,848 --> 00:02:15,439
Ta đặt layout này một id. Và layout này 

40
00:02:15,439 --> 00:02:19,730
sẽ phủ tràn hết phần tử cha của nó. Ta muốn 

41
00:02:19,730 --> 00:02:23,060
có ba cột ở đây, do đó, 

42
00:02:23,060 --> 00:02:26,230
ta sẽ đặt thuộc tính cột (columns)

43
00:02:26,230 --> 00:02:28,730
số lượng cột mà ta muốn là ba. 

44
00:02:28,730 --> 00:02:31,310
Ta sẽ thêm một số nội dung vào bên trong. 

45
00:02:31,310 --> 00:02:35,590
Ta sẽ tạo một vài hình chữ nhật vào trong. 

46
00:02:36,040 --> 00:02:40,150
Đây sẽ là hình chữ nhật nằm ở trên-trái (topLeftRectId). 

47
00:02:40,150 --> 00:02:45,579
Chiều rộng của hình là 70. 

48
00:02:45,579 --> 00:02:48,439
Chiều cao bằng với chiều rộng. 

49
00:02:48,439 --> 00:02:54,049
Hình này sẽ có màu xanh lá. 

50
00:02:54,049 --> 00:02:58,129
Ta sẽ tạo vài hình giống này bằng cách sao chép. 

51
00:02:58,129 --> 00:03:04,069
Ta sẽ thực hiện với hàng đầu tiên trước, 

52
00:03:04,069 --> 00:03:19,970
đây là hình nằm ở trên-giữa (topCenterRectId), đây là hình trên-phải (topRightRectId). 

53
00:03:19,970 --> 00:03:23,989
Đặt màu khác nhau cho các hình. Ta sẽ tạo thêm các hình chữ nhật 

54
00:03:23,989 --> 00:03:34,220
vào hàng thứ hai. Ta gọi hình này là 

55
00:03:34,220 --> 00:03:43,639
centerLeftRectId (hình nằm ở giữa-trái). 

56
00:03:43,639 --> 00:03:45,739
Tôi sẽ vừa nói vừa gõ code ở đây, 

57
00:03:45,739 --> 00:03:47,750
để cho các bạn dễ hiểu. Đôi khi, 

58
00:03:47,750 --> 00:03:49,489
người học không nắm được tại sao 

59
00:03:49,489 --> 00:03:52,519
lại có dòng code như vậy. Do vậy, nếu phần này 

60
00:03:52,519 --> 00:03:55,639
đối với bạn là quá dài thì hãy kiên nhẫn đôi chút. 

61
00:03:55,639 --> 00:04:04,310
Ở đây ta tạo hình "centerCenterRectId" (hình nằm giữa-giữa), và ở đây sẽ là 

62
00:04:04,310 --> 00:04:09,220
centerRightRectId (hình nằm giữa-phải).

63
00:04:09,610 --> 00:04:12,650
Ok, ta đang tạo ra cấu trúc 

64
00:04:12,650 --> 00:04:15,860
mà ta đã làm trước đó, với 

65
00:04:15,860 --> 00:04:19,519
9 hình chữ nhật nằm bên trong. Ta sẽ đi đến 

66
00:04:19,519 --> 00:04:23,360
hàng thứ ba và thêm 3 hình chữ nhật 

67
00:04:23,360 --> 00:04:30,310
vào đây. Ta viết bottomLeftRectId (hình nằm ở dưới-trái), 

68
00:04:30,310 --> 00:04:46,370
bottomCenterRectId (hình nằm dưới-giữa) và bottomRightRectId (hình nằm ở dưới-phải). 

69
00:04:46,370 --> 00:04:55,670
Ta cũng đổi các màu cho cách hình, xanh lá, đỏ, xanh biển, be, hồng, 

70
00:04:55,670 --> 00:05:09,200
ví dụ như vậy, vàng, hồng cánh sen, 

71
00:05:09,200 --> 00:05:19,670
vàng-xanh, xanh da trời. Ok, thế này là ổn rồi. 

72
00:05:19,670 --> 00:05:21,830
Một thứ nữa mà tôi muốn làm,

73
00:05:21,830 --> 00:05:23,660
đó là thay đổi chiều rộng và chiều cao 

74
00:05:23,660 --> 00:05:27,710
cho các hình chữ nhật, ngoại trừ 

75
00:05:27,710 --> 00:05:30,230
hình đầu tiên. Các bạn sẽ biết lý do vì sao. 

76
00:05:30,230 --> 00:05:37,010
Ta thay thành 100. Sao chép lại, 

77
00:05:37,010 --> 00:05:51,260
dán vào tất cả những chỗ khác, 100, 100, ok. 

78
00:05:51,260 --> 00:05:53,720
Hiện tại, ta đã có một layout lưới nằm trong 

79
00:05:53,720 --> 00:05:56,630
cửa sổ này. Ở bên trong ta có chín 

80
00:05:56,630 --> 00:05:57,530
hình chữ nhật. 

81
00:05:57,530 --> 00:06:00,560
Hình đầu tiên có kích thước là 70x70. 

82
00:06:00,560 --> 00:06:03,500
Tất cả các hình còn lại có kích thước 

83
00:06:03,500 --> 00:06:05,090
là 100x100. Các hình chữ nhật có màu 

84
00:06:05,090 --> 00:06:08,570
khác nhau như ta thấy ở đây. Trước khi chạy, 

85
00:06:08,570 --> 00:06:11,860
ta sẽ đặt chiều rộng và chiều cao

86
00:06:11,860 --> 00:06:15,590
của cửa sổ này bằng với chiều rộng và chiều cao của layout  

87
00:06:15,590 --> 00:06:17,840
để có thể điều chỉnh kích thước cửa sổ dựa vào kích thước của layout. 

88
00:06:17,840 --> 00:06:21,300
Ta đặt chiều rộng của cửa sổ là  

89
00:06:21,300 --> 00:06:27,030
mGridLayoutId.implicitWidth và chiều cao là mGridLayoutId.implicitHeight. 

90
00:06:27,030 --> 00:06:35,639
Ta cần chú ý ở đây là 

91
00:06:35,639 --> 00:06:38,729
ta đặt ba cột cho layout này. 

92
00:06:38,729 --> 00:06:41,930
Bây giờ ta sẽ chạy ứng dụng và xem kết quả đạt được. 

93
00:06:41,930 --> 00:06:45,569
Mm-hmm, ta thấy có chín 

94
00:06:45,569 --> 00:06:49,889
hình chữ nhật nằm bên trong. Khi thay đổi kích thước 

95
00:06:49,889 --> 00:06:54,030
của cửa sổ thì layout cũng thay đổi kích thước 

96
00:06:54,030 --> 00:06:56,940
theo cửa sổ. Đây là đặc tính

97
00:06:56,940 --> 00:06:59,250
không có trên các phần tử hàng, cột và lưới. 

98
00:06:59,250 --> 00:07:02,759
Ta cũng có thể biến layout lưới thành 

99
00:07:02,759 --> 00:07:05,969
layout hàng hay cột. Ta sẽ thử làm 

100
00:07:05,969 --> 00:07:12,169
điều này. Ta dùng RowLayout và  

101
00:07:12,169 --> 00:07:14,940
bố cực hàng thì

102
00:07:14,940 --> 00:07:18,090
không có những thuộc tính cột. Do đó, 

103
00:07:18,090 --> 00:07:20,039
ta cần chú thích dòng code  

104
00:07:20,039 --> 00:07:24,599
này lại. Các hình chữ nhật sẽ nằm trên một hàng 

105
00:07:24,599 --> 00:07:28,289
từ trái qua phải. Ok, ta thấy ở đây. 

106
00:07:28,289 --> 00:07:37,889
Ta cũng có thể thử với layout cột (ColumnLayout), mm-hm, 

107
00:07:37,889 --> 00:07:41,279
các hình sẽ nằm trên một cột. Ta dùng lại với 

108
00:07:41,279 --> 00:07:44,849
GridLayout để ta có thể thấy 

109
00:07:44,849 --> 00:07:47,960
sự khác biệt. Bỏ chứ thích phần "columns" này, 

110
00:07:47,960 --> 00:07:53,370
và chạy ứng dụng. Hy vọng các bạn thấy được 

111
00:07:53,370 --> 00:07:55,590
điểm khác biệt giữa phần tử lưới

112
00:07:55,590 --> 00:07:59,400
và layout lưới (bố cục lưới). Layout lưới 

113
00:07:59,400 --> 00:08:03,659
cho phép ta thay đổi kích thước của các ô

114
00:08:03,659 --> 00:08:07,080
khi cửa sổ cha thay đổi kích thước, 

115
00:08:07,080 --> 00:08:09,690
Ok, Đây là đặc điểm mà ta thấy ở đây. 

116
00:08:09,690 --> 00:08:11,819
Một điểm nữa mà tôi muốn các bạn nắm được, đó là 

117
00:08:11,819 --> 00:08:15,180
ta có thể thay đổi hiển thị của hình chữ nhật trong các ô

118
00:08:15,180 --> 00:08:19,020
khi cửa sổ cha của nó thay đổi kích thước. 

119
00:08:19,020 --> 00:08:21,569
Ok, ví dụ, ta có thể làm cho hình chữ nhật 

120
00:08:21,569 --> 00:08:24,599
xanh lá này phủ tràn hết chiều rộng và chiều cao 

121
00:08:24,599 --> 00:08:27,270
ô chứa nó. Cách ta làm như sau: 

122
00:08:27,270 --> 00:08:30,000
Trong hình chữ nhật này, bởi 

123
00:08:30,000 --> 00:08:32,190
đây là một phần tử trong layout khung lưới này, 

124
00:08:32,190 --> 00:08:35,219
ta sử dụng thuộc tính của layout, 

125
00:08:35,219 --> 00:08:40,740
ta gõ "Layout.fillWidth" ("bố cục"."tràn theo chiều rộng"), đặt là "true" (đúng) 

126
00:08:40,740 --> 00:08:45,420
ta gõ tiếp "Layout.fillHeight" ("bố cục"."tràn theo chiều cao"), 

127
00:08:45,420 --> 00:08:51,689
đặt là "true" (đúng). Chạy lại ứng dụng, mm-hmm, 

128
00:08:51,689 --> 00:08:53,910
ta thấy chiều dài và chiều rộng của

129
00:08:53,910 --> 00:08:55,709
ô lưới đã được phủ đầy ngay cả khi 

130
00:08:55,709 --> 00:09:00,000
chiều rộng và chiều dài của hình là 70, trong khi 

131
00:09:00,000 --> 00:09:03,990
chiều dài và chiều rộng của hình khác là 100. 

132
00:09:03,990 --> 00:09:07,860
Để đến sự thay đổi của hình chữ nhật này khi ta thay đổi kích thước của cửa sổ. Ok, 

133
00:09:07,860 --> 00:09:10,730
ta thấy hình chữ nhật xanh lá 

134
00:09:10,730 --> 00:09:13,439
luôn cố phủ đầy chiều rộng 

135
00:09:13,439 --> 00:09:16,199
và chiều cao của ô chứa nó. Ok,

136
00:09:16,199 --> 00:09:18,209
đây là những đặt tính mà ta muốn có trong 

137
00:09:18,209 --> 00:09:21,209
tất cả các hình chữ nhật nếu ta muốn tất cả các hình 

138
00:09:21,209 --> 00:09:23,550
đều thay đổi giống nhau trong layout lưới.  

139
00:09:23,550 --> 00:09:45,420
Ta sẽ sao chép và dán những dòng code vào đây. Ok, 

140
00:09:45,420 --> 00:09:48,329
chạy ứng dụng. Ta chưa thấy sự  

141
00:09:48,329 --> 00:09:51,660
khác biệt nào, 

142
00:09:51,660 --> 00:09:54,089
tuy nhiên, nếu thay đổi kích thước cửa sổ, 

143
00:09:54,089 --> 00:09:57,300
thì tất cả các hình chữ nhật đều thay đổi  

144
00:09:57,300 --> 00:10:00,059
kích thước, 

145
00:10:00,059 --> 00:10:03,779
bởi tất cả các hình đều đã được đặt để phủ tràn hết ô chứa nó. 

146
00:10:03,779 --> 00:10:06,839
Ta có thể đặt một thuộc tính nữa 

147
00:10:06,839 --> 00:10:10,740
là chiều rộng hoặc chiều cao tối đa mà một hình

148
00:10:10,740 --> 00:10:13,199
có thể có. Ta sẽ thử với 

149
00:10:13,199 --> 00:10:15,720
hình chữ nhật màu vàng ở đây. Ta có thể gõ 

150
00:10:15,720 --> 00:10:22,470
Layout.maximumWidth ("bố cục"."chiều rộng tối đa"). Ta đặt chiều rộng tối đa 

151
00:10:22,470 --> 00:10:26,399
cho hình màu vàng này là 200. 

152
00:10:26,399 --> 00:10:31,829
Ta gõ Layout.maximumHeight ("bố cục"."chiều rộng tối đa"), và đặt chiều cao tối 

153
00:10:31,829 --> 00:10:37,850
là 150. Chạy ứng dụng, 

154
00:10:37,850 --> 00:10:41,370
hãy quan sát vào hình chữ nhật màu vàng, là hình này đây. 

155
00:10:41,370 --> 00:10:46,529
Nếu ta thay đổi kích thước theo hướng này, ta thấy 

156
00:10:46,529 --> 00:10:49,050
hình sẽ to dần lên, và đến một mức độ nào đó 

157
00:10:49,050 --> 00:10:51,300
thì dừng lại. Ta cũng thấy 

158
00:10:51,300 --> 00:10:54,000
hình chữ nhật màu xanh biển ở đây đang 

159
00:10:54,000 --> 00:10:57,149
chiếm lấy không gian này. Nếu ta cố kéo rộng chiều cao, 

160
00:10:57,149 --> 00:11:00,600
thì hình màu vàng sẽ chỉ to dần đến 150, 

161
00:11:00,600 --> 00:11:03,180
sau đó thì dừng lại. Ta thấy 

162
00:11:03,180 --> 00:11:05,459
có khoảng trống xung quanh hình do chiều cao của hình 

163
00:11:05,459 --> 00:11:09,660
không thể vượt quá 150. Thêm một thuộc tính khác  

164
00:11:09,660 --> 00:11:12,510
mà ta có thể đặt, đó là thuộc tính căn chỉnh (alignment) 

165
00:11:12,510 --> 00:11:15,510
của các phần tử vào layout. 

166
00:11:15,510 --> 00:11:18,480
Tôi sẽ nói rõ hơn về điều này. 

167
00:11:18,480 --> 00:11:22,620
Tôi sẽ bỏ thuộc tính làm phủ tràn chiều rộng 

168
00:11:22,620 --> 00:11:25,980
và chiều cao. Ta thấy hình chữ nhật

169
00:11:25,980 --> 00:11:29,250
màu xanh lá có chiều rộng và chiều cao là 70, 

170
00:11:29,250 --> 00:11:31,890
hình này đang được đặt vào phía bên trái của ô. 

171
00:11:31,890 --> 00:11:34,050
Ok, nếu ta muốn gắn hình này sang bên phải, 

172
00:11:34,050 --> 00:11:37,170
cách ta làm như sau, ta viết 

173
00:11:37,170 --> 00:11:45,470
Layout.alignment ("bố cục"."căn chỉnh") và Qt.AlignRight ("Qt.căn chỉnh phải"), ok. 

174
00:11:45,470 --> 00:11:51,060
Chạy ứng dụng. Ta có thể thay đổi giá trị  

175
00:11:51,060 --> 00:11:54,540
để hình được đặt vào phía trên hay phía dưới, được gắn vào giữa theo chiều dọc

176
00:11:54,540 --> 00:11:57,120
hay giữa theo chiều ngang. Nếu muốn xem tất cả 

177
00:11:57,120 --> 00:11:58,740
các lựa chọn, ta có thể làm như này, 

178
00:11:58,740 --> 00:12:02,839
click vào Qt, gõ "Align" 

179
00:12:02,839 --> 00:12:06,750
ta thấy có nhiều lựa chọn khác nhau 

180
00:12:06,750 --> 00:12:09,240
mà ta có thể dùng. Ta có thể dùng AlignBottom (căn chỉnh dưới), 

181
00:12:09,240 --> 00:12:12,420
AlignCenter (can trình trung tâm), AlignHCenter (align horizontal center - căn chỉnh giữa theo chiều ngang), 

182
00:12:12,420 --> 00:12:16,490
AlignLeft (căn chỉnh trái), AlignRight (căn chỉnh phải), AlignTop (căn chỉnh trên),

183
00:12:16,490 --> 00:12:19,170
AlignVCenter (align vertical center: căn chỉnh giữa theo chiều dọc). Ta có thể thử dùng 

184
00:12:19,170 --> 00:12:21,209
tất cả những lựa chọn này nếu muốn. 

185
00:12:21,209 --> 00:12:24,240
Ví dụ, nếu ta viết AlignCenter, 

186
00:12:24,240 --> 00:12:30,690
thì hình sẽ nằm ở vị trí trung tâm, và đây, 

187
00:12:30,690 --> 00:12:32,970
hình đang nằm ở vị trí trung tâm. 

188
00:12:32,970 --> 00:12:36,300
Một thuộc tính khác mà ta có thể đặt, đó là độ rộng theo hàng

189
00:12:36,300 --> 00:12:39,690
hoặc độ theo cột cho một phần tử trong layout lưới. 

190
00:12:39,690 --> 00:12:42,600
Ví dụ, nếu ta bỏ hình chữ nhật màu xanh biển

191
00:12:42,600 --> 00:12:45,899
đi, ta có thay đổi hình chữ nhật màu đỏ

192
00:12:45,899 --> 00:12:48,630
để nó phủ đầy hai ô này. 

193
00:12:48,630 --> 00:12:51,240
Cách ta làm như sau: ta quay trở lại phần code, 

194
00:12:51,240 --> 00:12:54,779
tìm hình màu xanh biển, 

195
00:12:54,779 --> 00:12:56,910
chú thích nó lại. Ta sẽ không xóa hình này 

196
00:12:56,910 --> 00:12:58,860
bởi có thể về sau ta muốn sử dụng tiếp. 

197
00:12:58,860 --> 00:13:02,550
Ta đi đến hình chữ nhật màu đỏ và gõ 

198
00:13:02,550 --> 00:13:03,980
layout

199
00:13:03,980 --> 00:13:09,330
Layout.columnSpan ("bố cục"."độ rộng theo cột"), ta viết 2, 

200
00:13:09,330 --> 00:13:13,050
ta muốn hình màu đỏ phủ đầy 

201
00:13:13,050 --> 00:13:15,230
hai cột, cột này và cột này. 

202
00:13:15,230 --> 00:13:19,140
Chạy ừng dụng, mm-hmm, 

203
00:13:19,140 --> 00:13:21,300
hai cột. Ta có thể thực hiện điều tương tự, 

204
00:13:21,300 --> 00:13:23,600
ví dụ, ta có thể bỏ hình chữ nhật 

205
00:13:23,600 --> 00:13:26,730
màu hồng này ra, và làm cho hình màu be 

206
00:13:26,730 --> 00:13:30,330
ở đây tràn sang hai hàng. Ta sẽ thử

207
00:13:30,330 --> 00:13:33,690
làm. Đi đến phần code của centerLeftRectId, 

208
00:13:33,690 --> 00:13:45,350
ta viết Layout.rowSpan ("bố cục"."độ rộng theo hàng"), đặt là 2, 

209
00:13:45,350 --> 00:13:49,470
và bỏ hình chữ nhật nằm ở dưới-trái đi, 

210
00:13:49,470 --> 00:13:52,680
hình có màu hồng cánh sen. Không phải cái này. 

211
00:13:52,680 --> 00:13:55,040
Xin lỗi các bạn. 

212
00:13:56,720 --> 00:14:00,720
Chạy chương trình, hình chữ nhật màu be 

213
00:14:00,720 --> 00:14:04,080
tràn xuống dưới và phủ đầy diện tích trống. 

214
00:14:04,080 --> 00:14:06,870
Đến đây, ta đã biết cách sử dụng thuộc tính làm tràn 

215
00:14:06,870 --> 00:14:09,870
hàng và cột nếu muốn.  

216
00:14:09,870 --> 00:14:12,300
Một thuộc tính khác mà ta cần xem xét, 

217
00:14:12,300 --> 00:14:14,790
đó là hướng của layout. 

218
00:14:14,790 --> 00:14:15,720
Hướng của layout là gì? 

219
00:14:15,720 --> 00:14:17,940
Thuộc tính này nắm giữ hướng layout 

220
00:14:17,940 --> 00:14:20,310
của layout dạng khung lưới. Nó quyết định việc 

221
00:14:20,310 --> 00:14:23,490
các phần tử được đặt từ trái sang phải hay 

222
00:14:23,490 --> 00:14:26,970
từ phải sang trái. Nếu bắt đầu từ 

223
00:14:26,970 --> 00:14:29,700
phải sang trái, thì hình chữ nhật màu xanh 

224
00:14:29,700 --> 00:14:31,470
sẽ nằm ở bên phải. Ta hãy thử xem sao. 

225
00:14:31,470 --> 00:14:34,170
Ta quay trở lại với phần code, 

226
00:14:34,170 --> 00:14:39,990
ở phía trên này, ta thêm layoutDirection ("hướng bố cục"), viết 

227
00:14:39,990 --> 00:14:45,450
Qt.RightToLeft ("phải qua trái"). Chạy ứng dụng. 

228
00:14:45,450 --> 00:14:48,030
Hình chữ nhật màu xanh lá 

229
00:14:48,030 --> 00:14:50,460
nên nằm ở phía bên phải, do hướng layout 

230
00:14:50,460 --> 00:14:53,010
đã bị đảo ngược. Các hình chữ nhật 

231
00:14:53,010 --> 00:14:55,470
bắt đầu từ phía bên phải. Ta thấy, 

232
00:14:55,470 --> 00:14:57,570
hình màu be ở đây cũng đi về 

233
00:14:57,570 --> 00:14:59,220
phía bên phải. Tôi hy vọng các bạn hiểu được phần này. 

234
00:14:59,220 --> 00:15:01,530
Ok, đây là phần cuối cùng mà tôi muốn nói 

235
00:15:01,530 --> 00:15:03,360
với các bạn trong bài này. Tôi hy vọng các bạn đã có cái nhìn 

236
00:15:03,360 --> 00:15:06,000
tốt hơn về cách sử dụng các layout trong QtQuick

237
00:15:06,000 --> 00:15:08,040
Các layout này đều cho phép 

238
00:15:08,040 --> 00:15:11,130
ta thực hiện thay đổi kích thước với 

239
00:15:11,130 --> 00:15:11,990
các phần tử được chứa bên trong. 

240
00:15:11,990 --> 00:15:14,180
Ở bài học tiếp theo, ta sẽ cùng nhau 

241
00:15:14,180 --> 00:15:15,649
tìm hiểu thành phần cuối cùng 

242
00:15:15,649 --> 00:15:18,709
trong chương này, đó là "Flow" 

243
00:15:18,709 --> 00:00:00,000
Hẹn gặp lại các bạn trong bài sau. 

