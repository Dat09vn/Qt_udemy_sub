1
00:00:00,000 --> 00:00:02,310
Trong bài này, ta sẽ tiếp tục với nội dung 

2
00:00:02,310 --> 00:00:04,650
ở bài trước, tôi sẽ chỉ cho các bạn cách 

3
00:00:04,650 --> 00:00:06,109
sử dụng JavaScript gián tiếp 

4
00:00:06,109 --> 00:00:09,599
trong các file QML. Ta hãy mở

5
00:00:09,599 --> 00:00:12,570
Qt Creator và thực hiện. Để các bạn thấy được

6
00:00:12,570 --> 00:00:15,120
cách sử dụng JS gián tiếp, ta sẽ 

7
00:00:15,120 --> 00:00:17,580
tạo một file JavaScript mới. 

8
00:00:17,580 --> 00:00:20,760
Click phải chuột vào file qml.qrc. Chọn "Add New" (tạo file mới). 

9
00:00:20,760 --> 00:00:24,180
Lựa chọn "Qt", chọn "JS file". 

10
00:00:24,180 --> 00:00:26,310
Ta gọi file này là "utilities2". 

11
00:00:26,310 --> 00:00:39,390
Chọn "Next", sau đó "Finish". Đây là file 

12
00:00:39,390 --> 00:00:41,460
"utilities2". Ta muốn tạo một hàm mới. 

13
00:00:41,460 --> 00:00:44,430
Hàm này có tên là hàm "add" (cộng), thực hiện 

14
00:00:44,430 --> 00:00:47,399
cộng hai số với nhau. Hàm sẽ trả lại kết quả 

15
00:00:47,399 --> 00:00:54,149
(a + b). Lưu file lại. 

16
00:00:54,149 --> 00:00:56,370
Ở đây, ta muốn import (tải) 

17
00:00:56,370 --> 00:01:00,180
utilities2 vào trong utilities1 để 

18
00:01:00,180 --> 00:01:02,489
ta có thể sử dụng. Ta làm như sau: 

19
00:01:02,489 --> 00:01:06,750
Về cơ bản, cách thức thực hiện cũng giống với 

20
00:01:06,750 --> 00:01:10,320
cách import trong file main.qml, tuy nhiên, ta sẽ thêm dấu chấm 

21
00:01:10,320 --> 00:01:12,000
trước "import" (nhập). Như vậy, ta có

22
00:01:12,000 --> 00:01:23,369
.import "utilities2.js",... như thế này. 

23
00:01:23,369 --> 00:01:26,250
Ta định nghĩa một hàm khác ở đây, ví dụ  

24
00:01:26,250 --> 00:01:29,970
ta gọi hàm này là "combineAges" (kết hợp tuổi) 

25
00:01:29,970 --> 00:01:39,299
hàm này sẽ lấy age1 (tuổi1) và age2 (tuổi2). 

26
00:01:39,299 --> 00:01:43,649
Hàm này sẽ gọi Utilities2.add với hai tuổi này là tham số rồi trả về kết quả.

27
00:01:43,649 --> 00:01:50,670
Ok, tuổi1 và tuổi2. Ta cần in một dòng log ở đây, 

28
00:01:50,670 --> 00:02:00,420
để chỉ ra rằng ta đang tiến hành gọi phương thức cộng gián tiếp

29
00:02:00,420 --> 00:02:03,690
từ utilities2. 

30
00:02:03,690 --> 00:02:07,590
Bây giờ, ta có thể gọi hàm này từ 

31
00:02:07,590 --> 00:02:11,520
file main.qml. Mở file đó ra, chú thích lại 

32
00:02:11,520 --> 00:02:13,260
nhưng gì ta đã thực hiện trong 

33
00:02:13,260 --> 00:02:18,260
bài giảng trước. Ta có thể thêm "console.log", 

34
00:02:18,260 --> 00:02:28,680
"các tuổi cộng với nhau được:", okay. Ở đây, ta nối chúng lại với nhau như này, 

35
00:02:28,680 --> 00:02:32,700
utilities1.combineAges, 

36
00:02:32,700 --> 00:02:40,260
ví dụ như, 33 và 17. Nếu chạy chương trình, 

37
00:02:40,260 --> 00:02:44,550
và click vào 

38
00:02:44,550 --> 00:02:47,070
hình chữ nhật này, ta thấy ta đang gián tiếp gọi 

39
00:02:47,070 --> 00:02:50,010
hàm "add" từ file utilities1 ở đây. 

40
00:02:50,010 --> 00:02:52,320
Đoan code này in ra dòng chữ đó. 

41
00:02:52,320 --> 00:02:54,300
Ta thấy phương thức này đang được gọi, 

42
00:02:54,300 --> 00:02:58,770
và kết quả đúng như ta muốn. 

43
00:02:58,770 --> 00:03:03,540
Quay lại utilities2 và in một dòng text 

44
00:03:03,540 --> 00:03:07,070
bằng "console.log" để thấy được hàm này được gọi gián tiếp. 

45
00:03:07,070 --> 00:03:21,120
Ta gõ "phương thức từ utilities2 được gọi". 

46
00:03:21,120 --> 00:03:27,480
Chạy lại lần nữa, click vào đây, ta thấy...ok, 

47
00:03:27,480 --> 00:03:29,670
những thay đổi mà ta vừa thực hiện vẫn chưa cập nhật. 

48
00:03:29,670 --> 00:03:31,800
Ta không thấy text ở đây. 

49
00:03:31,800 --> 00:03:35,459
Quay trở lại file QML, thêm dấu cách và chạy lại. 

50
00:03:35,459 --> 00:03:41,760
Click vào đây, ta thấy tin nhắn đã được 

51
00:03:41,760 --> 00:03:44,489
hiển thị. Đôi lúc, Qt Creator 

52
00:03:44,489 --> 00:03:46,920
không cập nhật những thay đổi từ các file bên ngoài 

53
00:03:46,920 --> 00:03:49,500
mà ta sử dụng. Do đó, nếu không thấy được 

54
00:03:49,500 --> 00:03:52,500
những kết quả như mong muốn, hãy quay trở lại

55
00:03:52,500 --> 00:03:55,140
file QML, thêm dấu cách hoặc, 

56
00:03:55,140 --> 00:03:57,209
thay đổi kí nào đó và chạy lại. Sau đó, 

57
00:03:57,209 --> 00:03:59,430
ta sẽ thấy được những thay đổi mà ta thực hiện. Ok, 

58
00:03:59,430 --> 00:04:00,900
đây là cách mà ta import (tải) một 

59
00:04:00,900 --> 00:04:03,300
file JavaScript vào 

60
00:04:03,300 --> 00:04:05,850
file JavaScript khác. Khi import file utilities2 vào utilities1, 

61
00:04:05,850 --> 00:04:09,269
ta chỉ có thể dùng các phương thức của utilities2 trong utilities1. 

62
00:04:09,269 --> 00:04:12,030
Không thể sử dụng các phương thức này

63
00:04:12,030 --> 00:04:14,850
trong file main.qml. Do đó, trường hợp ta muốn 

64
00:04:14,850 --> 00:04:17,339
gọi trực tiếp hàm "add" từ trong

65
00:04:17,339 --> 00:04:20,880
file main.qml như thế này, 

66
00:04:20,880 --> 00:04:25,080
chạy ứng dụng, ta thấy hàm "cộng" 

67
00:04:25,080 --> 00:04:28,310
được import trong "utilities2", 

68
00:04:28,310 --> 00:04:31,710
tuy nhiên, ta không thể trực tiếp sử dụng hàm này 

69
00:04:31,710 --> 00:04:34,199
trong file main.qml. Hàm này chỉ có thể sử dụng trong 

70
00:04:34,199 --> 00:04:36,930
phạm vi của utilities1 do ta sử dụng 

71
00:04:36,930 --> 00:04:39,600
"import" ở đây. Để thấy rõ hơn được điều này, 

72
00:04:39,600 --> 00:04:41,190
ta sẽ chạy ứng dụng, và lỗi sẽ xuất hiện, 

73
00:04:41,190 --> 00:04:43,650
chỉ ra rằng phương thức "add" không 

74
00:04:43,650 --> 00:04:46,979
được tìm thấy. Ta chạy ứng dụng. 

75
00:04:46,979 --> 00:04:52,470
Click vào đây, ta thấy có lỗi TypeError: 

76
00:04:52,470 --> 00:04:54,900
thuộc tính "add" của đối tượng đây không phải 

77
00:04:54,900 --> 00:04:57,930
là một hàm. Phương thức này không được tìm thấy. 

78
00:04:57,930 --> 00:04:59,880
Và ta không thể sử dụng hàm này. 

79
00:04:59,880 --> 00:05:03,120
Ta phải sử dụng hàm này trong file 

80
00:05:03,120 --> 00:05:07,310
utilities1.js. Do đó, nếu ta muốn 

81
00:05:07,310 --> 00:05:12,150
import một file JavaScript khác và sử dụng file này

82
00:05:12,150 --> 00:05:15,570
giống như khi file đã được định nghĩa, 

83
00:05:15,570 --> 00:05:17,699
ta cũng có một cách khác để import file. 

84
00:05:17,699 --> 00:05:20,100
Ta sẽ tìm hiểu ngay sau đây. 

85
00:05:20,100 --> 00:05:22,830
Ta sẽ thêm một file utilities khác. 

86
00:05:22,830 --> 00:05:29,070
Chọn "Add New" -> "Qt" -> "JS File". 

87
00:05:29,070 --> 00:05:37,289
File này sẽ là utilities3. Trong file này, 

88
00:05:37,289 --> 00:05:39,870
ta sẽ tạo một hàm. Ta gọi hàm này 

89
00:05:39,870 --> 00:05:44,760
là hàm "substract" (trừ). Ta lấy các tham số 

90
00:05:44,760 --> 00:05:47,760
là a và b. Hàm này sẽ trả lại kết quả 

91
00:05:47,760 --> 00:05:51,210
(a - b). Đây là những gì mà ta muốn. 

92
00:05:51,210 --> 00:05:54,180
Để import hàm này vào trong utilities1, 

93
00:05:54,180 --> 00:05:56,880
và sử dụng nó trực tiếp giống như ta có thể 

94
00:05:56,880 --> 00:05:59,910
gọi trực tiếp hàm "greeting", 

95
00:05:59,910 --> 00:06:02,940
có một kiểu "import" khác mà ta có thể dùng.  

96
00:06:02,940 --> 00:06:07,229
Đó là Qt.import, 

97
00:06:07,229 --> 00:06:11,729
ta truyền tên file mà 

98
00:06:11,729 --> 00:06:13,289
ta muốn import vào. Ta có thể sử dụng 

99
00:06:13,289 --> 00:06:19,470
tên utilities3.js. 

100
00:06:19,470 --> 00:06:23,220
Sau khi làm vậy, ta đã lấy này ở đây, 

101
00:06:23,220 --> 00:06:26,430
và định nghĩa hàm ngay tại đây. 

102
00:06:26,430 --> 00:06:28,349
Ta có thể gọi hàm ở đây, hoặc có thể gọi hàm 

103
00:06:28,349 --> 00:06:30,870
trong file QML. Để thấy rõ hơn, 

104
00:06:30,870 --> 00:06:31,200
ta sẽ 

105
00:06:31,200 --> 00:06:36,360
quay trở lại file QML, thêm console.log, 

106
00:06:36,360 --> 00:06:45,750
"hiệu số giữa 50 và 33". 

107
00:06:45,750 --> 00:06:48,960
Ta sẽ gọi phương thức này 

108
00:06:48,960 --> 00:06:51,900
từ phạm vi của utilities1, 

109
00:06:51,900 --> 00:06:56,540
ta dùng utilities1 ở đây,

110
00:06:58,640 --> 00:07:01,320
substract. Nó không tìm thấy trong 

111
00:07:01,320 --> 00:07:06,350
chức năng autocomplete, tuy nhiên hàm này vẫn có thể gọi được. Ok, 

112
00:07:06,350 --> 00:07:11,970
50 và 33. Ta chạy ứng dụng. 

113
00:07:11,970 --> 00:07:15,230
Cầu nguyện nào. 

114
00:07:15,230 --> 00:07:19,770
Ok, có cái gì đó sai ở đây. 

115
00:07:19,770 --> 00:07:23,190
Oh, ta dùng Qt.import. Đáng ra phải là  

116
00:07:23,190 --> 00:07:26,610
Qt.include. Xin lỗi các bạn về điều này. 

117
00:07:26,610 --> 00:07:33,960
Ở đây ta viết là "include" (chứa). Chạy lại lần nữa. 

118
00:07:33,960 --> 00:07:35,940
Nếu click vào đây, ta được kết quả hiệu số 

119
00:07:35,940 --> 00:07:39,480
là 17. Ta có thể 

120
00:07:39,480 --> 00:07:42,990
gọi phương thức được định nghĩa trong 

121
00:07:42,990 --> 00:07:45,600
utilities3 từ phạm vi của 

122
00:07:45,600 --> 00:07:48,480
utilities1. Ok. Đây là hai cách khác nhau

123
00:07:48,480 --> 00:07:51,000
mà ta có thể dùng để gián tiếp import 

124
00:07:51,000 --> 00:07:54,330
JavaScript trong QML. Cách thứ nhất ta dùng 

125
00:07:54,330 --> 00:07:57,960
".import" (chú ý dấu chấm) để import đoạn code 

126
00:07:57,960 --> 00:08:00,720
vào một namespace (không gian tên), 

127
00:08:00,720 --> 00:08:02,850
và để gọi mã code đó, ta sẽ 

128
00:08:02,850 --> 00:08:04,920
phải sử dụng namespace ở đây. Ta đã sử dụng 

129
00:08:04,920 --> 00:08:08,360
namespace đó ở đây. Cách thứ hai là 

130
00:08:08,360 --> 00:08:12,360
ta import một file JavaScript và đưa trực tiếp 

131
00:08:12,360 --> 00:08:14,370
file đó vào trong phạm vi, từ đó, 

132
00:08:14,370 --> 00:08:16,560
ta có thể gọi chúng trong phạm vi của file 

133
00:08:16,560 --> 00:08:18,840
mà ta đã định nghĩa. Ta đã sử dụng cách này ở đây, 

134
00:08:18,840 --> 00:08:21,600
trong file main.qml, ở đó ta có thể gọi 

135
00:08:21,600 --> 00:08:24,900
hàm trong utilities3 giống như hàm đó đang ở trong

136
00:08:24,900 --> 00:08:27,780
utilities1. Ta thực hiện điều này bằng cách 

137
00:08:27,780 --> 00:08:30,180
dùng Qt.include ở đây, 

138
00:08:30,180 --> 00:08:32,490
và truyền tên file mà ta muốn import vào. 

139
00:08:32,490 --> 00:08:35,789
Như vậy, ta đã đi qua hết các cách 

140
00:08:35,789 --> 00:08:38,669
mà ta có thể sử dụng JavaScript trong 

141
00:08:38,669 --> 00:08:41,190
file QML. Trong chương tiếp theo, 

142
00:08:41,190 --> 00:08:42,909
ta sẽ cùng nhau tìm hiểu về cách bố trí 

143
00:08:42,909 --> 00:08:44,980
các phần tử khác nhau trong 

144
00:08:44,980 --> 00:08:46,930
QML. Ta cũng sẽ bắt tay vào tìm hiểu 

145
00:08:46,930 --> 00:08:49,360
các thành phần hàng và cột

146
00:08:49,360 --> 00:08:51,370
mà ta đã sử dụng, tuy nhiên chưa được 

147
00:08:51,370 --> 00:08:53,500
giải thích rõ ràng. 

148
00:08:53,500 --> 00:00:00,000
Hẹn gặp lại các bạn trong chương tiếp theo. 

